SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title tiny treasure hunt 1.0
author Weeble
homepage www.twitter.com/weeble
run_rules_on_level_start

========
OBJECTS
========
LowFloorRaw
BLACK

LowFloor1
#111411 #191d19 #202020 #252725
01011
12310
23320
02321
02110

LowFloor2
#111411 #191d19 #202020 #252725
01001
22312
12331
01310
10101

WallFacade
#555555 #666666 #777777
21221
10011
.....
.....
.....

HighFloor
#909090 #999999 #bbbbbb #cccccc
33232
31012
20002
31012
32222

LowPlayer
#686868 #707070 #787878 #808080
.....
.....
.232.
.121.
.0.0.

HighPlayer
#e8e8e8 #f0f0f0 #f8f8f8 #ffffff
.232.
.121.
.0.0.
.....
.....

Crate
#999944 #88883a #777733
10001
00000
10001
22222
22222

HighCrate
#dddd55 #eeee50 #cccc48
10001
00000
10001
22222
22222

BurntCrate
#222222 #111111 #000000
10001
00000
10001
22222
22222

MeltingIce
White LightBlue #9999ff #330000
.33..
3333.
31013
11330
21112


StaticIce
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeN
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeE
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeS
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeW
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

FirePit1
#990000 #770000 #550000 #330000
02111
13321
02321
32110
23121

FirePit2
#990000 #770000 #550000 #330000
10311
21233
11021
23213
20122


Pillar
#cccccc #dddddd #eeeeee #ffffff #bbbbbb #aaaaaa
32123
33333
02120
22122
01310

IceCubeShadow
RED
.....
.....
..0..
.....
.....

Coin
WHITE #eeee55 #aaaa33
.000.
01112
01212
01112
.222.


StairsNorth
#333333 #444444 #555555 #666666 #777777
44444
43334
32223
21112
10001
=======
LEGEND
=======
. = LowFloorRaw
" = HighFloor
@ = LowPlayer and LowFloorRaw
$ = Coin and HighFloor
£ = Coin
H = HighCrate and HighFloor
: = WallFacade and FirePit1 and LowFloorRaw
~ = WallFacade and LowFloorRaw
# = Crate and LowFloorRaw
W = Crate and LowFloorRaw and WallFacade
! = FirePit1 and LowFloorRaw
I = Pillar and HighFloor
% = StaticIce and LowFloorRaw
& = StaticIce and LowFloorRaw and WallFacade
/ = StairsNorth and LowFloorRaw
FirePit = FirePit1 or FirePit2
LowFloor = LowFloor1 or LowFloor2
Background = LowFloor or HighFloor or LowFloorRaw
Player = LowPlayer or HighPlayer
Obstacle = StairsNorth
BlocksLow = Crate or HighFloor or StaticIce or Pillar or BurntCrate
Pushable = Crate or StaticIce
MovingIce = IceCubeE or IceCubeS or IceCubeW or IceCubeN
IceCube = StaticIce or MovingIce
Grounded = IceCube or LowPlayer or Crate

=======
SOUNDS
=======

Coin DESTROY 77169700
Crate MOVE 24442507
SFX0 98605308 ( Hiss )
SFX1 89033504 ( Snap )
SFX2 70543502 ( Plink )
SFX3 34905302 ( Slam )
SFX4 93355705 ( Squeak )
SFX5 52776702 ( Grind )
SFX6 86238705 ( Bounce )

================
COLLISIONLAYERS
================

Background
StairsNorth, FirePit
WallFacade
Crate, IceCube, MovingIce, LowPlayer, MeltingIce, BurntCrate
Pillar, HighPlayer, HighCrate, Coin
IceCubeShadow

======
RULES
======

(Make stuff pretty)
[ LowFloorRaw ] -> [ random LowFloor ]
[ FirePit ] -> [ random FirePit ]

(Pushing stuff)
[ > LowPlayer | Pushable ] -> [ > LowPlayer | > Pushable ]
[ > HighPlayer | HighCrate ] -> [ > HighPlayer | > HighCrate ]

(Don't walk under pillars. Probably redundant.)
[ > Grounded | Pillar ] -> [ Grounded | Pillar ]

(Ice melts in lava)
[ MeltingIce FirePit ] -> [ ]
[ IceCube FirePit ] -> [ MeltingIce FirePit ] sfx0 again

(Ice slides)
RIGHT [ > StaticIce ] -> [ > IceCubeE ] sfx2
DOWN [ > StaticIce ] -> [ > IceCubeS ] sfx2
LEFT [ > StaticIce ] -> [ > IceCubeW ] sfx2
UP [ > StaticIce ] -> [ > IceCubeN ] sfx2
[ MovingIce no IceCubeShadow ] -> [ MovingIce IceCubeShadow ]
RIGHT [ IceCubeE ] -> [ > IceCubeE ] again
DOWN [ IceCubeS ] -> [ > IceCubeS ] again
LEFT [ IceCubeW ] -> [ > IceCubeW ] again
UP [ IceCubeN ] -> [ > IceCubeN ] again

(Stop things from overlapping the stairs)
[ > IceCube | Obstacle ] -> [ StaticIce | Obstacle ]
[ > Crate | Obstacle ] -> [ Crate | Obstacle ]

(Lava kills you)
late [ LowPlayer FirePit ] -> [ FirePit ] sfx5 message Ouch, hot!

(More ice rules)
late [ MovingIce IceCubeShadow ] -> [ StaticIce ] sfx5
late [ IceCubeShadow ] -> [ ]

(Crates get charred in lava)
late [ Crate FirePit ] -> [ BurntCrate FirePit ] sfx5

(Player collects coins)
[ > HighPlayer | Coin HighFloor ] -> [ | HighPlayer HighFloor ]
[ > LowPlayer | Coin LowFloor ] -> [ | LowPlayer LowFloor ]

(Player can climb stairs)
UP [ > LowPlayer StairsNorth | HighFloor ] -> [ StairsNorth | HighPlayer HighFloor ] sfx6

(Stop things from getting pushed up onto ledges)
[ > Grounded | HighFloor ] -> [ Grounded | HighFloor ]

(Players and crates fall)
late [ HighPlayer no BlocksLow ] -> [ LowPlayer ] sfx1 again
late [ HighCrate no BlocksLow ] -> [ Crate ] sfx1 again

==============
WINCONDITIONS
==============

No Coin

=======
LEVELS
=======

message 1. the outer walls

""""""!!!"""
"h""""..!"$"
""""""#.!"""
""""""..!"""
i~~/i/..!:::
"..."...!!!!
i"""i.......
"/~~"!!...#.
i.@.i!!.....

message 2. cold storage

..........£
.!!!!!!!!!.
.!!!!!!!!!.
.!!.%%%.!!.
.!!%...%!!.
.!!%.@.%!!.
.!!%...%!!.
.!!.%%%.!!.
.!!!!!!!!!.
.!!!!!!!!!.
...........


message 3. bifrost

!!.@.""""!!
!!%.."~/"!!
!!.%.&..~!!
!!%..%...!!
!!.%.%.%.!!
!!%..%..%!!
!!.%.%.%.!!
!!...%..%!!
!!...%.%.!!
!!$.."..%!!
!!"""".%.!!


message 4. clutter

""""""""""$
"""""""""""
~~~~W~W~~::
.%@.#..#.!!
....#.#..!!
!!!!"""""..
!!!!"""""..
....~/~~~..
...........

message 5. arena

!"!!!!!!!!!"
!~.."..""..:
!...~../~$.!
!"......@~.!
!~...".....!
!....~.%...!
!....%.....!
!."....%...!
!.~......."!
!.."......~!
!".~..."...!
!:!!!!!:!!!!


message 6. the gauntlet


..""."."."..!!!
..w~."#".~#.!"!
""...~.~#.."!~!
~&..@......~!£!
""....#"""."!.!
~~...#."/"#~!"!
.......~."..!:!


message 7. throne room

...#."$".#...
..#.."""..#..
!!.#.:::.#.!!
$"!...!...!"$
""!.!!!!!.!""
~~!.!h"h!.!~~
.#!!!"""!!!#.
.....h"h.....
"!!.."""..!!"
""!..~/~..!""
"""...@..."""
:~~.%.%.%.~~:
!...........!

message Well done!


title Heroes of Sokoban III: The Bard and The Druid
author Jonah Ostroff
text_color yellow
key_repeat_interval 0.25
run_rules_on_level_start

========
OBJECTS
========

Background
#989898 #C8C8C8
00000
00100
00000
00010
00000

Goal
Brown Yellow
.000.
00000
00010
00000
00000

Wall
Darkgrey #222222
01000
11111
00010
00010
11111

Fighter (Warrior sounds better in-game, but I want different abbreviations for the classes in the editor.)
#FF4444 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

Wizard
#2266FF Pink
.000.
.010.
00000
.000.
00000

Thief
#66DD66 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

Priest
#FFFFAA Pink
.000.
.111.
00000
.000.
00000

Bard
#8800FF #884400 #444444
.222.
.111.
00000
.000.
.0.0.

Druid
#FF8800 Pink DarkBrown
.212.
.111.
00000
.000.
00000

SFighter
#880000 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

SWizard
#000088 Pink
.000.
.010.
00000
.000.
00000

SThief
#006600 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

SPriest
#B8B800 Pink
.000.
.111.
00000
.000.
00000

SBard
#440088 #884400 #444444
.222.
.111.
00000
.000.
.0.0.

SDruid
#884400 Pink DarkBrown
.212.
.111.
00000
.000.
00000

Crate
Orange #552200
.111.
10001
10001
10001
.111.

YellowSwitch
Yellow Black
.....
.111.
.101.
.111.
.....

YellowOpen
Yellow
0...0
.....
.....
.....
0...0

YellowDoor
Yellow #AA7722
01010
10001
00000
10001
01010

PurpleSwitch
#6611CC Black
.....
.111.
.101.
.111.
.....

PurpleDoor
#6611CC #220088
01010
10001
00000
10001
01010

PurpleOpen
#6611CC
0...0
.....
.....
.....
0...0

MonsterDoor
DarkGrey #222222 Red
21002
22122
20212
20012
21112

Warpball
Blue

ShadowDoor
Purple

Goblin
Green DarkBrown DarkGreen
0.2.0
00000
..0..
.111.
.1.1.

Dying
White

Saved
#D8D800
..0..
.000.
..0..
..0..
.....

HasSavedDoor
Yellow
.....
.....
.....
.....
.....

Corpse
#CCC
.000.
.000.
00000
.0.0.
.0.0.

Note
#8800FF
.....
..00.
.00..
.00..
.....

=======
LEGEND
=======

Player = Fighter or Wizard or Thief or Priest or Bard or Druid
SPlayer = Swizard or Sthief or SFighter or SPriest or SBard or SDruid
Hero = Player or Splayer
Healer = Priest or SPriest (Unlike the other heroes, priests must function even when inactive. "Healer" is the generic term for an active or inactive priest.)
ClosedDoor = PurpleDoor or YellowDoor or MonsterDoor
OpenDoor = YellowOpen or PurpleOpen
Switch = PurpleSwitch or YellowSwitch
Monster =  Goblin
Moveable = Crate or SPlayer or Monster
Static = Wall or ClosedDoor
Weighing = Crate or Hero or Monster or Wall
Vulnerable = Hero or Monster
Invulnerable = Crate or Static
. = Background
# = Wall
F = Fighter
W = Wizard
T = Thief
P = Priest
B = Bard
D = Druid
1 = SFighter
2 = SThief
3 = SWizard
4 = SPriest
5 = SBard
6 = SDruid
* = Crate
G = Goal
[ = YellowDoor
] = PurpleDoor
{ = YellowSwitch
} = PurpleSwitch
O = Goblin
M = MonsterDoor

=======
SOUNDS
=======

Moveable move 82056307
Sfx0 21221308 (teleport)
Endlevel 36315908
Sfx1 66399906 (switch player)
Sfx2 92172900 (close door)
Sfx3 15129100 (open door)
Sfx4 69860105 (saved)
Sfx5 63194902 (kill enemy)
Sfx6 81996702 (dying player)
Sfx7 20187909 (Bard leading)
Sfx8 93615108 (Transmutation)
EndGame 86793500

================
COLLISIONLAYERS
================

Background
Warpball, Dying
Goal, Switch, OpenDoor, ShadowDoor, HasSavedDoor
ClosedDoor, Hero, Crate, Wall, Monster, Corpse
Saved
Note

======
RULES
======
[Saved] [Goal] -> [] [HasSavedDoor] (Remembering whether we saved someone last round by temporarily changing some door to a HasSavedDoor. This is purely for sound effects purposes.)

[Corpse] -> Restart

[ >  Fighter | Moveable ] -> [  >  Fighter | > Moveable  ]
[ > Moveable | Moveable ] [ Fighter] -> [ > Moveable | > Moveable ] [ Fighter] (Fighters push.)

[ < Thief | Moveable ] -> [ < Thief | < Moveable ] (Thieves pull.)

[ > Wizard ] -> [ Wizard > Warpball]
[ > Warpball | no Moveable no Static] -> [ | > Warpball]
[ > Warpball | Static] [Wizard] -> [ | Static ] [> Wizard]
[ > Warpball | Moveable ] [Wizard] -> [ | Wizard Sfx0] [Moveable]
[ > Warpball] [Wizard] -> [] [> Wizard]
(Wizards telexport. What they really do is shoot a "warpball", which causes them to move normally if it hits a wall or the edge of the screen and warp if it hits something they can warp with.)

(Druid does his thing. Warpball gets reused as a placeholder here. That's gonna happen a lot.)
[> Druid | Crate] -> [Druid | Wall Sfx8]
[> Druid | Monster] -> [Druid | Wall Sfx8]
[> Druid | Wall] -> [Druid | Crate Sfx8]
[> Druid | Healer] -> [Druid | Healer Saved]
[> Druid | Hero] -> [Druid | Hero Warpball]
[Warpball | Healer] -> [Saved | Healer]
[Warpball Hero] -> [Wall Sfx8]
(What strategic purpose could it serve for healers to protect against petrification? None, but it's fun.)

(I mean, theoretically you could write some horrid dragon breath timing puzzle where the ability to delay an extra turn without moving or switching characters is necessary in order to let you move someone else at the correct moment, but even if dragons still existed, that sounds like a really gross level.)

(Bard moves stuff. Reusing "WarpBall" for totally different purpose, so we can cancel the move if he doesn't move.)
[> Bard no Note] -> [> Note > Bard WarpBall]
[> Note] [Note] -> [> Note] [> Note]
[> Note Moveable | no Static no Moveable no Bard] -> [| Moveable Sfx7]
+[> Note Bard WarpBall| no Static no Moveable no Bard] -> [| Bard]

(Why are we doing this pseudo-movement instead of using the built-in version? Because using movement directions makes the note-adding stuff way easier below, and you can't use movement directions in the LATE phase, so the actual moving has to be done before then.)

[WarpBall] -> Cancel
[Note] -> []

(The following mess is for changing characters. But at least it's less messy than before. Thanks to Stephen for spotting my silly redundancies.)
[ Action Fighter] [SThief] -> [SFighter] [Thief Sfx1]
[ Action Thief] [SWizard] -> [SThief] [Wizard Sfx1]
[ Action Wizard] [SPriest] -> [SWizard] [Priest Sfx1]
[ Action Priest] [SBard] -> [SPriest] [Bard Sfx1]
[ Action Bard] [SDruid] -> [SBard] [Druid Sfx1]
[ Action Druid] [SFighter] -> [SDruid] [Fighter Sfx1]

[ Action Fighter] [SWizard] -> [SFighter] [Wizard Sfx1]
[ Action Thief] [SPriest] -> [SThief] [Priest Sfx1]
[ Action Wizard] [SBard] -> [SWizard] [Bard Sfx1]
[ Action Priest] [SDruid] -> [SPriest] [Druid Sfx1]
[ Action Bard] [SFighter] -> [SBard] [Fighter Sfx1]
[ Action Druid] [SThief] -> [SDruid] [Thief Sfx1]

[ Action Fighter] [SPriest] -> [SFighter] [Priest Sfx1]
[ Action Thief] [SBard] -> [SThief] [Bard Sfx1]
[ Action Wizard] [SDruid] -> [SWizard] [Druid Sfx1]
[ Action Priest] [SFighter] -> [SPriest] [Fighter Sfx1]
[ Action Bard] [SThief] -> [SBard] [Thief Sfx1]
[ Action Druid] [SWizard] -> [SDruid] [Wizard Sfx1]

[ Action Fighter] [SBard] -> [SFighter] [Bard Sfx1]
[ Action Thief] [SDruid] -> [SThief] [Druid Sfx1]
[ Action Wizard] [SFighter] -> [SWizard] [Fighter Sfx1]
[ Action Priest] [SThief] -> [SPriest] [Thief Sfx1]
[ Action Bard] [SWizard] -> [SBard] [Wizard Sfx1]
[ Action Druid] [SPriest] -> [SDruid] [Priest Sfx1]

[ Action Fighter] [SDruid] -> [SFighter] [Druid Sfx1]
[ Action Thief] [SFighter] -> [SThief] [Fighter Sfx1]
[ Action Wizard] [SThief] -> [SWizard] [Thief Sfx1]
[ Action Priest] [SWizard] -> [SPriest] [Wizard Sfx1]
[ Action Bard] [SPriest] -> [SBard] [Priest Sfx1]
[ Action Druid] [SBard] -> [SDruid] [Bard Sfx1]

(Bard plays music. This is my favorite part of the code, btw. Yes, you can make square area effects with just one object!)
[no Note | no Note | Bard] -> [^ Note | ^ Note | Bard]
[no Note | Bard] -> [^ Note | Bard]
[> Note | no Note | no Note] -> [Note | Note | Note]
[> Note | no Note] -> [Note | Note]
[> Note] -> [Note]

(Now enemies attack. Yeah, there's only one kind of enemy now.)

Late [Goblin | Vulnerable] -> [Goblin | Dying Vulnerable]

(Vulnerable objects that are attacked are designated as "Dying", but heroes can be saved by the Priest. Then the stuff that didn't get saved dies.)

Late [Dying Healer] -> [Saved Healer]
Late [Healer | Dying Hero] -> [Healer | Saved Hero]
Late [Dying Monster] -> [Sfx5]
Late [Dying Hero] -> [Corpse Sfx6]

(Doors opening.)

late [Weighing  YellowSwitch] [YellowDoor] -> [Weighing  YellowSwitch] [ShadowDoor]
late [YellowSwitch no Weighing] [YellowOpen] -> [YellowSwitch] [YellowDoor sfx2]
late [YellowSwitch no Weighing] [ShadowDoor] -> [YellowSwitch] [YellowDoor]
late [ShadowDoor] -> [YellowOpen sfx3]

late [Weighing PurpleSwitch] [PurpleDoor] -> [Weighing PurpleSwitch] [ShadowDoor]
late [PurpleSwitch no Weighing] [PurpleOpen] -> [PurpleSwitch] [PurpleDoor sfx2]
late [PurpleSwitch no Weighing] [ShadowDoor] -> [PurpleSwitch] [PurpleDoor]
late [ShadowDoor] -> [PurpleOpen sfx3]

late [MonsterDoor] -> [ShadowDoor]
late [ShadowDoor] [Monster] -> [MonsterDoor] [Monster]
late [ShadowDoor] -> [sfx3]

(Looks for a HasSavedDoor and, if there is one, puts a warpball on the Priest. Then, if someone was saved this turn, plays the sound only if the Priest doesn't have the warpball. Finally, cleans that up.)

late [HasSavedDoor] [Healer] -> [Goal] [Healer WarpBall]
late [Saved] [Healer no WarpBall] -> [Saved sfx4] [Healer]
late [HasSavedDoor] -> [Goal]
late [WarpBall] -> []

late [Note no Moveable] -> []

==============
WINCONDITIONS
==============

All Hero on Goal
All Goal on Hero

=======
LEVELS
=======

Message Many years have passed since the events of Heroes of Sokoban II.

Message Dragons have vanished from the realm, never to be seen again.

Message And new heroes have cropped up, as if there were only room for so many beings in one world.

###################
#.F.#.........#**G#
#***#...*****.#..*#
#.G.#...*...*.#2..#
#####...*...*.#####
#.......*...*.....#
#.......*...*.....#
#####..**..**.#####
#*..#.***.***.#..G#
#*G*#..*...*..#.O.#
#3.*#.........#4..#
###################

Message Purple bard charms nearby crates.

#############
#{#....{#...#
#.#.*#B.[.G.#
#*#.....#...#
#############

###############
#..############
#.B..****.....#
#..######.#####
#########G#####
###############

Message Monsters may also be charmed.

#############
#.......#...#
#...#...#...#
#O..B..OM.G.#
#...#...#...#
#.......#...#
#############

Message No one can resist the bard's music.

############
#G#.F.{..O.#
#.[........#
#G#.5.{..O.#
############

############
##[[[[[[[###
##[#####[###
##[##[[[[{*#
#...#[######
#.T.#......#
#...#.5.G.G#
############

########
#*G{####
###.####
#...[W##
###.#.5#
#*G*####
########

#########
#....G#G#
#.#*..#[#
#.**....#
#.......#
#.{4{B{.#
#...{...#
#########

############
#*.{..{.**{#
############
#B21.......#
##########[#
#.G..G..G..#
############

Message Orange druid turns stone into wood, wood into stone.

#############
#.[.{.2.#.D.#
#.#########.#
#....G.G..#.#
#############

#############
#...#####{{{#
#.D.##...{{{#
#...##.##{{{#
#############
#...#..######
#.1.#..##G.G#
#...#..#[...#
#############

#############
#O*....{...3#
##.####.#####
##.###O.O##G#
##.####.###.#
##D[....###G#
#############

Message Living things may also be turned into stone.

Message Try not to think about the moral implications, and don't do it any more than necessary.

#############
####.4..##G.#
#O..F..OM#.G#
####.6..##G.#
#############

###############
#.............#
#.5.}}}.]]]]].#
#...}}}.]G.G].#
#.D.}}}.]]]]].#
#.............#
###############

#########
#G#####W#
#########
#G#####6#
#########

#############
#......O.G.G#
#.###########
#.###########
#...#########
#B.6#########
#############

################
#...#...########
#.G.#.}.....{[O#
#...#.F.########
#...#...########
#.G.].4.########
#...#...########
#...#.5.########
#.G.#.}.....{[O#
#...#...########
################

#####M########
#G.GM#F.2###O#
#...#M.......#
#G.GM#3.6###O#
#####M########

############
#6######B###
#........###
############
#.#######.4#
#.......##1#
#G.G.G.G##O#
############

###############
#....#O.O#...G#
#..##W...1##..#
#..#O..O..O#.G#
#4.#..OGO..#..#
#..#O..O..O#.G#
#..##2...6##..#
#....#O.O#...G#
###############

Message Get ready.

#######################
#.F.*....#G.G#....*.4.#
#...#....#...#....#...#
#######.........#######
#####.#####O#####.#####
#..##O#..#...#..#O##..#
#.2.*....#G.G#....*.5.#
#..##O#..*...#..#O##..#
#####.####...####.#####
#######..#..*O.*#######
#...###.#######...#...#
#.3.###.##G.G##...#.6.#
#######################

################
#..............#
#.1.4......G.G.#
#..............#
#.2.B......G.G.#
#..............#
#.3.6......G.G.#
#..............#
################

Message Thanks for playing!

title Spriteaporter
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Temp
black

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Sprite
pink blue red
.....
.000.
00100
01110
.202.

=======
LEGEND
=======

. = Background
# = Wall
P = Player
O = Sprite

=======
SOUNDS
=======

sfx0 67117309

================
COLLISIONLAYERS
================

Temp
Background
Target
Player, Wall, Sprite

======
RULES
======

late [ Sprite | ... | Player ] -> [ Temp | ... | Sprite ] 
late [ Temp ] -> [ Player ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#########
#.......#
#....O..#
#.P.....#
#.......#
#.......#
#########


title It Dies In The Light
author Christopher Wells
homepage www.tophwells.com

noaction
run_rules_on_level_start
again_interval 0.05

========
OBJECTS
========

BackgroundNeutral
LIGHTGray Gray
11011
10101
01110
10101
11011

BackgroundDark
Black

Wall
Lightblue Blue
00010
11111
01000
11111
00010

LivePlayer
Black LightRed White Blue
.000.
.111.
12321
.232.
.222.

Corpse
LightGrey
.000.
.0.0.
0.0.0
..0..
.0.0.

Crate
Orange LightBrown Brown
.222.
21012
20102
21012
.222.

GoldCrate
White Yellow Orange
.222.
21012
20002
21012
.222.

GlassCrate
White
.000.
0...0
0...0
0...0
.000.

Prism
LightBlue White
.000.
00110
00010
00000
.000.

ActivePrism
LightBlue White Yellow
.000.
02120
01110
02120
.000.

Glass
White
00000
0...0
0...0
0...0
00000

BeamVert
White Yellow
.101.
.101.
.101.
.101.
.101.

BeamHor
White Yellow
.....
11111
00000
11111
.....

BeamCross
White Yellow
.101.
11011
00000
11011
.101.

Shadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

TempShadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

=======
LEGEND
=======

. = BackgroundNeutral
# = Wall
P = LivePlayer
C = Crate
G = GoldCrate
S = Shadow
X = Prism
O = Glass

Background = BackgroundNeutral or BackgroundDark
Player = LivePlayer or Corpse
Light = BeamVert or BeamHor or BeamCross
Hlight = BeamHor or BeamCross
Vlight = BeamVert or BeamCross
Opaque = Player or Crate or Wall or GoldCrate
Pushable = Crate or GoldCrate or Prism or GlassCrate


=======
SOUNDS
=======

SFX0 93002904

================
COLLISIONLAYERS
================

Background
BeamVert, BeamHor, BeamCross, Shadow, TempShadow
Player, Corpse, Wall, Crate, GoldCrate, GlassCrate, Prism, ActivePrism, Glass

======
RULES
======

[> Corpse] -> RESTART
[Light] -> []
[ActivePrism] -> [Prism]
[ >  Player | Pushable ] -> [  >  Player | > Pushable  ]
late HORIZONTAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamHor]
late VERTICAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamVert]
late VERTICAL [GoldCrate|no Opaque BeamHor] -> [GoldCrate | BeamCross]
late HORIZONTAL [Hlight|no Opaque no Light] -> [Hlight|BeamHor]
+ late HORIZONTAL [Hlight|no Opaque BeamVert] -> [Hlight|BeamCross]
+ late VERTICAL [Vlight|no Opaque no Light] -> [Vlight|BeamVert]
+ late VERTICAL [Vlight|no Opaque BeamHor] -> [Vlight|BeamCross]
+ late [Light Prism] ->[BeamCross ActivePrism]
late [Shadow Pushable] -> [Pushable]
late [TempShadow] -> [Shadow]
late [Shadow | no Light no Wall no Pushable no Glass no Shadow] -> [shadow | Tempshadow] again
late [Shadow] -> [Shadow BackgroundDark]
late [TempShadow] -> [TempShadow BackgroundDark]
late [no Shadow no TempShadow] -> [no Shadow BackgroundNeutral]
late [Shadow Player] -> [Shadow Corpse]

==============
WINCONDITIONS
==============

no Shadow

=======
LEVELS
=======

......####.
..#####ss#.
###ssssss#.
#..ssscss##
#..#s#s#ss#
#.g#s#ssss#
#p.#s#ssss#
#..css#sss#
###########

........########.
........#...#.C#.
...######...GC.##
...#..CsssssO.C.#
...#P.Csss#sO.CC#
...#..Csss#sO#..#
########ss#s....#
#ssssssOss#s#####
#sssssssss###....
#########s#......
........###......

##########
###G#G#G##
##P......#
#G.......#
##..C....#
#G.......#
##..C....#
#G.......#
##......S#
##########

........########
........#......#
#########..#o#.#
#........gooxo.#
#g#####c#.sso#s#
#.ssssss#.ss.ss#
##soooss#.ss##s#
##c.p.c###ss#ss#
##.....#ssss#ss#
#...g.......#ss#
#########.xx#ss#
........##sssss#
.........#######

MESSAGE Earth is safe once again.

title Octat
author increpare
homepage www.increpare.com

noundo
require_player_movement

(
    
A port of a flash game I made.  The original's here:

http://ded.increpare.com/~locus/octat/

)

========
OBJECTS
========

Background
purple
.....
.000.
.000.
.000.
.....

Activetile
pink red
00000
0...0
0...0
0...0
00000

Target
red
0...0
.0.0.
..0..
.0.0.
0...0

Player
white
.....
.000.
.000.
.000.
.....

Void 0
black

Temp
black

=======
LEGEND
=======

. = Background
P = Player and Activetile
a = Activetile
x = Target
y = target and Activetile

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Void
Activetile
Player
Temp
Target

======
RULES
======

[ > Player | no Activetile ] -> cancel

late [ Activetile | Player ] -> [ Temp | Player ] 
late [ no Temp | Player ] -> [ Activetile | Player ] 
late [ Temp ] -> [ ] 

late [ Activetile Void ] -> [ Void ] 

==============
WINCONDITIONS
==============

some Player on target

=======
LEVELS
=======

message level 1 of 8

..........
..........
..........
..........
..........
.x...ap...
..........
..........
..........
..........

message level 2 of 8

...........
...........
...........
...........
...........
....xpa....
...........
...........
...........
...........

message level 3 of 8

...........
...........
...........
...........
..a........
.axaaap....
..a........
...........
...........
...........

message level 4 of 8

...........
...........
...a.......
..a.a......
.a.a.a.....
a.aya.a.ap.
.a.a.a.....
..a.a......
...a.......
...........

message level 5 of 8

...........
...........
...........
...........
aaaaaaaaaaa
...y..ap...
aaaaaaaaaaa
...........
...........
...........

message level 6 of 8

000000....0
000000..0.0
000000..0..
000000000..
....A...0.0
.AY.A...AAP
....A...0.0
000000000..
000000..0..
000000..0.0
000000....0

message level 7 of 8

..AAA...000
.AY.A...AP.
..AAA...000

message level 8 of 8

0AAAA..00
0AAAA..00
YAAAA..AP
0AAAA..00
0AAAA..00

message the end


title EYE EYE EYE
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

EyeBall
white blue red
.000.
00100
01110
20102
.202.

=======
LEGEND
=======

. = Background
# = Wall
P = Player
O = EyeBall

=======
SOUNDS
=======

sfx0 67117309

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, EyeBall

======
RULES
======

[ Eyeball | ... | Player ] -> [ > Eyeball | ... | Player ] sfx0

==============
WINCONDITIONS
==============

(There's no way to win against a floating eyeball :S )

=======
LEVELS
=======

#########
#.......#
#....O..#
#.P.....#
#.......#
#.......#
#########


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


USER PROMPT:
Consider the code for the following PuzzleScript game:

title Pushbox Puzzle
author Game Developer
homepage www.example.com

========
OBJECTS
========

Background
Black

Wall
LightGrey DarkGrey
11111
11111
11111
11111
11111

Player
Yellow
.....
..0..
.000.
..0..
.....

Box
Brown
.....
.000.
.0.0.
.000.
.....

Target
Green
.....
.....
.00..
.....
.....

BoxOnTarget
LightGreen
.....
.....
.0.0.
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
B = Box
T = Target
X = BoxOnTarget

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Target
BoxOnTarget
Player, Box, Wall

======
RULES
======

[ > P | B ] -> [ > P | > B ]
[ P | T ] -> [ P | T ]

[ B | T ] -> [ X ]
[ X | no T ] -> [ B | no T ]

[ P | X ] -> [ P | X ]
[ X | P ] -> [ X | P ]

==============
WINCONDITIONS
==============

All BoxOnTarget

=======
LEVELS
=======

#####
#..##
#P..#
#BX.#
#T..#
#####

#######
#..T..#
#..B..#
#..P..#
#..B..#
#..T..#
#######

########
#T..#..#
#..B...#
#..P...#
#.#...##
#..#T..#
#..B...#
########
/n/ntitle Simple Puzzle Game
author Anonymous

========
OBJECTS
========

Background
BLACK
.....
.....
.....
.....
.....

Wall
LIGHTGRAY
.....
.....
.....
.....
.....

Player
BLUE
.....
..0..
.111.
..0..
.....

Target
GREEN
.....
.....
.....
.....
.....

Obstacle
RED
.....
.....
.....
.....
.....

=======
LEGEND
=======

# = Wall
. = Background
P = Player
* = Target
O = Obstacle

================
COLLISIONLAYERS
================

Background
Wall, Obstacle
Player

======
RULES
======

# (optional rules for game logic can be added here)

==============
WINCONDITIONS
==============

# Define a win condition, such as Player reaching the Target
All Player on Target

=======
LEVELS
=======

######
#....#
#.P*.#
#..#O#
#.O..#
######


Create a variation on this game, making it more complex. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.