SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title One rigid body and wee crates
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BigBlock
Orange
00000
0...0
0...0
0...0
00000

LittleBlock
Orange
.....
.000.
.0.0.
.000.
.....


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = BigBlock
@ = BigBlock and Target
b = LittleBlock
O = Target

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, BigBlock, LittleBlock

======
RULES
======

[ > Player | LittleBlock ] -> [ > Player | > LittleBlock ]

[ > LittleBlock | LittleBlock ] -> [ > LittleBlock | > LittleBlock ]

rigid [ > LittleBlock | BigBlock ] -> [ > LittleBlock | > BigBlock ]
+ rigid [ > Player | BigBlock ] -> [ > Player | > BigBlock ]
+ rigid [ moving BigBlock | BigBlock ] -> [ moving BigBlock | moving BigBlock ]
+ [ > BigBlock | LittleBlock ] -> [ > BigBlock | > LittleBlock ]
+ [ > LittleBlock | LittleBlock ] -> [ > LittleBlock | > LittleBlock ]


==============
WINCONDITIONS
==============

=======
LEVELS
=======

...............
..........#....
...............
..#***bb.......
..p*...........
...**......#...
..b*...#.......
...............
...............
..#......b.....
.........#.....
...............
...............



title Puzzles
author increpare
homepage www.puzzlescript.net

(
Unfortunately, just the first level - trying to emulate the later ones proved too complex :[

You can play the original game here:
http://www.increpare.com/2012/06/puzzles/
)

background_color white
text_color blue

run_rules_on_level_start


========
OBJECTS
========

DyingPlayer
Black

Void
White

OBackground
Orange

GBackground
LightGrey

BlueWall
Blue


GreyWall
Grey

RedCrate
Red
.....
.000.
.000.
.000.
.....
GreyCrate
DarkGrey
.....
.000.
.000.
.000.
.....

RedWhale
Red White
00100
00000
10001
00000
00100

GreyWhale
DarkGrey White
00100
00000
10001
00000
00100

RedEndPoint
DarkRed
.....
.000.
.0.0.
.000.
.....

GreyEndPoint
Darkgrey
.....
.....
.....
.....
.....

RedStartPoint
darkRed
.....
.....
.....
.....
.....

GreyStartPoint
darkRed
.....
.000.
.0.0.
.000.
.....

YellowPlayer
yellow
.....
.000.
.000.
.000.
.....

GreyPlayer
DarkGrey
.....
.000.
.000.
.000.
.....

LeftBeam
white
.....
.....
00000
.....
.....

RightBeam
white
.....
.....
00000
.....
.....

UpBeam
white
..0..
..0..
..0..
..0..
..0..

DownBeam
white
..0..
..0..
..0..
..0..
..0..

=======
LEGEND
=======

Background = Void or OBackground or GBackground
Player = YellowPlayer or GreyPlayer or DyingPlayer
Wall = BlueWall or GreyWall
Crate = RedCrate or GreyCrate
Whale = RedWhale or GreyWhale
StartPoint = RedStartPoint or GreyStartPoint
EndPoint = RedEndPoint or GreyEndPoint
. = OBackground
, = Void
# = BlueWall
W = RedWhale
C = RedCrate
S = RedStartPoint and YellowPlayer
E = RedEndPoint
Obstacle = Player or Whale or Crate or Wall
Beam = UPBeam or DownBeam or LeftBeam or RightBeam
VBeam = UPBeam or DownBeam
HBeam = LeftBeam or RightBeam
HBeamSource = HBeam or Whale
VBeamSource = VBeam or Whale
Pushable = Player or Whale or Crate
RedPushable = YellowPlayer or RedWhale or RedCrate
GreyPushable = GreyPlayer or GreyWhale or GreyCrate

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
StartPoint, EndPoint
Player, Wall, Crate, Whale
UpBeam, DownBeam
LeftBeam, RightBeam

======
RULES
======


left [ LeftBeam | < Player ] -> [ LeftBeam | Player ]
right [ RightBeam | < Player ] -> [ RightBeam | Player ]
up [ UpBeam | < Player ] -> [ UpBeam | Player ]
down [ DownBeam | < Player ] -> [ DownBeam | Player ]

right [ RightBeam | stationary Pushable ] -> [ RightBeam | > Pushable ]
left [ LeftBeam | stationary Pushable ] -> [ LeftBeam | > Pushable ]
up [ UpBeam | stationary Pushable ] -> [ UpBeam | > Pushable ]
down [ DownBeam | stationary Pushable ] -> [ DownBeam | > Pushable ]

[ Whale | stationary Pushable ] -> [ Whale | > Pushable ]


[ Beam ] -> []


[ >  Player | Crate ] -> [  >  Player | > Crate  ]
[ > Crate | stationary Crate ] -> [ > Crate | > Crate ]

( using red/greypushable is an optimization - cuts down on unecessary rules by quite a lot, beause red and grey things never coexist)
[ > RedPushable | v RedPushable ] -> [ RedPushable | v RedPushable ]
[ > RedPushable | ^ RedPushable ] -> [ RedPushable | ^ RedPushable ]
[ > RedPushable | < RedPushable ] -> [ RedPushable | < RedPushable ]

[ > GreyPushable | v GreyPushable ] -> [ GreyPushable | v GreyPushable ]
[ > GreyPushable | ^ GreyPushable ] -> [ GreyPushable | ^ GreyPushable ]
[ > GreyPushable | < GreyPushable ] -> [ GreyPushable | < GreyPushable ]

late Up [ Whale | no Obstacle ] -> [ Whale | UpBeam ]
late Down [ Whale | no Obstacle ] -> [ Whale | DownBeam ]
late Left [ Whale | no Obstacle ] -> [ Whale | LeftBeam ]
late Right [ Whale | no Obstacle ] -> [ Whale | RightBeam ]

late horizontal [ HBeam | no obstacle ] -> [ HBeam | HBeam ]
late vertical [ VBeam | no obstacle ] -> [ VBeam | VBeam ]


(DEATH TRANSITION)
late Horizontal [ HBeamSource | YellowPlayer ]  -> [ HBeamSource | DyingPlayer ]
late Vertical [ VBeamSource | YellowPlayer ]  -> [ VBeamSource | DyingPlayer ]

late [ DyingPlayer ] [ BlueWall ] -> [ DyingPlayer ] [ GreyWall ]
late [ DyingPlayer ] [ RedWhale ] -> [ DyingPlayer ] [ GreyWhale ]
late [ DyingPlayer ] [ RedCrate ] -> [ DyingPlayer ] [ GreyCrate ]
late [ DyingPlayer ] [ RedStartPoint ] -> [ DyingPlayer ] [ GreyStartPoint ]
late [ DyingPlayer ] [ RedEndPoint ] -> [ DyingPlayer ] [ GreyEndPoint ]
late [ DyingPlayer ] [ OBackground ] -> [ DyingPlayer ] [ GBackground ]
late [ DyingPlayer ] -> [ GreyPlayer ]

late [DyingPlayer] -> [GreyPlayer]

(LIFE TRANSITION)
late [ GreyPlayer GreyStartPoint ] [ GreyWall ] -> [ GreyPlayer GreyStartPoint ] [ BlueWall ]
late [ GreyPlayer GreyStartPoint ] [ GreyCrate ] -> [ GreyPlayer GreyStartPoint ] [ RedCrate ]
late [ GreyPlayer GreyStartPoint ] [ GreyWhale ] -> [ GreyPlayer GreyStartPoint ] [ RedWhale ]
late [ GreyPlayer GreyStartPoint ] [ GreyEndPoint ] -> [ GreyPlayer GreyStartPoint ] [ RedEndPoint ]
late [ GreyPlayer GreyStartPoint ] [ GBackground ] -> [ GreyPlayer GreyStartPoint ] [ OBackground ]

late [ GreyPlayer GreyStartPoint ] -> [ YellowPlayer RedStartPoint ]

late [player]->again

==============
WINCONDITIONS
==============

All Player on RedEndPoint

=======
LEVELS
=======


#########
#......E#
#..CC..##
#.....##,
#.....W#,
##.#####,
#......#,
#..CC..#,
#..CC..#,
##.....#,
#W.....#,
######.#,
#......#,
#......#,
##S#####,
########,



title Simple Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BlueCrate B
lightblue
00000
0...0
0...0
0...0
00000


OrangeCrate O
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

Crate = OrangeCrate or BlueCrate
. = Background
# = Wall
P = Player


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

[ > Crate | Crate ] -> [ > Crate | > Crate ]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#########
#.......#
#...B...#
#.P.B.O.#
#....O..#
#.......#
#########



title Des Poseidons Dreizack
author Stephen Lavelle
homepage www.increpare.com

text_color #e7cf5c
background_color #041646

noaction

run_rules_on_level_start

again_interval 0.1
(verbose_logging)


(flickscreen 14x13)

========
OBJECTS
========

Background
blue #204ec5
00000
01000
00000
00010
00000

smrocks k
brown darkbrown 
.1.1.
10101
.1.1.
10101
.1.1.

teleport T
lightblue blue darkblue
10101
01210
12221
01210
10101

Target
darkblue transparent 
01110
1.0.1
10001
1.0.1
01110

Wall
green lightgreen #2d6d0c
00000
00010
00000
01000
00000

wallalt "
green lightgreen #2d6d0c
00000
00000
00000
01000
00000


wallalt2 '
green lightgreen #2d6d0c
00000
00010
00000
00000
00000

coast_u
lightblue
.0.0.
.....
.....
.....
.....

coast_d
lightblue
.....
.....
.....
.....
.0.0.

coast_l
lightblue
.....
0....
.....
0....
.....

coast_r
lightblue
.....
....0
.....
....0
.....

endhand x
pink
0.0.0
.....
0...0
.....
0.0.0


Player
brown orange yellow lightblue
2.2.2
2.2.2
22222
..1..
.313.

underplayer
lightblue
..0..
.....
.....
.....
.....

magnet
lightblue blue
.0000
0....
0.000
0...0
.000.


flowers 
darkgreen brown
.000.
00000
.000.
..1..
..1..

hinge H
orange green darkgray 
10001
02220
02220
02220
10001

door_l L
pink darkgray transparent
.2.2.
0000.
11110
0000.
.2.2.


door_r R
pink darkgray transparent
.2.2.
.0000
01111
.0000
.2.2.



door_u U
pink darkgray transparent
.010.
20102
.010.
20102
..0..

door_d D
pink darkgray transparent
..0..
20102
.010.
20102
.010.


door_dl 1
pink darkgray
.....
..00.
.010.
010..
10...


door_dr 2
pink darkgray
.....
.00..
.010.
..010
...01


door_ul 3
pink darkgray
10...
010..
.010.
..00.
.....

door_ur 4
pink darkgray
...01
..010
.010.
.00..
.....

ul
orange
0....
.....
.....
.....
.....

ur
orange
....0
.....
.....
.....
.....


dl
orange
.....
.....
.....
.....
0....


dr
orange
.....
.....
.....
.....
....0

wu
green lightgreen
10101
.....
.....
.....
.....

wd
green lightgreen
.....
.....
.....
.....
10101

wl
green lightgreen
1....
0....
1....
0....
1....

wr
green lightgreen
....1
....0
....1
....0
....1

suck_d
lightblue
.....
.....
.0.0.
..0..
.....


suck_u
lightblue
.....
..0..
.0.0.
.....
.....


suck_r
lightblue
.....
..0..
...0.
..0..
.....


suck_l
lightblue
.....
..0..
.0...
..0..
.....

temp
transparent

A 
transparent

S
lightblue
.0.0.
0.0.0
.0.0.
0.0.0
.0.0.

nopull
transparent

spawned 
transparent


ip1 §
#ffff05 #ffa33b
0.0.0
0.0.0
00000
..1..
..1..

ip2 ±
#8e4833
.....
.....
....0
....0
....0

ip3 `
#8e4833 #dbc297
.....
00000
11111
1.1.1
11111

ip4 ~
#8e4833
.....
.....
0....
0....
0....

5
#ffa33b #dbc297
..0..
.111.
.111.
.111.
..011

6
#8e4833 #dbc297
....0
....0
.....
.....
....1

7
#8e4833 #dbc297
00000
01110
00000
00000
10001

8
#8e4833 #dbc297
0....
.....
.....
.....
1....

9
#ffa33b #dbc297
..0.1
.....
.....
.....
.....

0
#dbc297 white
0..00
00000
.00.0
....1
....1

bla !
#dbc297 white
00000
00000
00000
10000
11100

blo @
#dbc297
00...
000..
000..
0.00.
..00.


(BLANK)

ble £
white
....0
....0
....0
...00
...00

ble1 $
white #dbc297
00000
00000
00000
00001
00011

ble2 \
#dbc297 white
..00.
1.00.
1000.
1000.
100..

(SKIP)

ble3 Y
white #dbc297
...00
...00
....1
....1
....1

ble4 &
white #dbc297
00111
1.111
1..11
1..11
1..11

ble5 *
white
0....
.....
.....
.....
.....


ble6 -
#dbc297
.....
...00
.....
.....
.....

ble7 =
#dbc297
0..00
0.000
.....
.....
.....




=======
LEGEND
=======

. = Background
# = Wall
P = Player
M = magnet
O = Target


walls = wall or wallalt or wallalt2
ortho = door_u or door_d or door_l or door_r
diagonal = door_ul or door_ur or door_dl or door_dr
Door = ortho or diagonal
doorpart = door or hinge
obstacle = walls or player or hinge or magnet or door or smrocks
thick = wall or hinge or magnet or door or teleport


fixture = wall or hinge 

pixel = ul or ur or dl or dr
walltype = wall or wallalt or wallalt2

fillwalltype = wall  or hinge

suck = suck_u or suck_d or suck_l or suck_r

coast = coast_u or coast_d or coast_l or coast_r

verge = wl or wr or wu or wd
decoration = coast or verge 

% = flowers and wall

image = ip1 or ip2 or ip3 or ip4 or 5 or 6 or 7 or 8 or 9 or 0 or bla or blo or ble or ble1 or ble2 or ble3 or ble4 or ble5 or ble6 or ble7 


=======
SOUNDS
=======

sfx0 1415300 (swing)
sfx1 7555504 (cantmove)
sfx2 16800907 (whirlpool move)
sfx3 77044105 (teleport)
sfx4 43993702 (whirlpool destroy)
sfx5 43993702 (whirlpool create)
endlevel 30657706

player cantmove  7555504

================
COLLISIONLAYERS
================

Background
coast_u
coast_d
coast_l
coast_r
A
Target
S
underplayer
teleport
endhand 
Player, Wall, wallalt, wallalt2, magnet, hinge, door, smrocks
flowers
ul
ur
dl
dr
wu
wd
wl
wr
temp
suck_u
suck_d
suck_l
suck_r
nopull
spawned
image

======
RULES
======

[ player teleport no spawned | ... | teleport ] -> [ teleport | ... | player teleport spawned ] sfx3

[ teleport magnet ] -> [ ] sfx4

[decoration]->[]
[underplayer]->[]
[A]->[]
[temp]->[]
[suck]->[]
[nopull]->[]

right [ walls | ]->[walls | coast_l ]
left  [ walls | ]->[walls | coast_r ]
down  [ walls | ]->[walls | coast_u ]
up    [ walls | ]->[walls | coast_d ]



up [ walls | no walltype ] -> [ walls wu | ]
down [ walls | no walltype ] -> [ walls wd | ]
left [ walls | no walltype ] -> [ walls wl | ]
right [ walls | no walltype ] -> [ walls wr | ]

[pixel]->[]


[ > magnet | door ] -> cancel



[ > Player | magnet  ] -> [ > Player | > magnet  ]

[ > magnet | no obstacle ] -> [ | magnet ]  sfx2
+ [ > player | no obstacle ] -> [ | player  ] 
+ [ > player | no obstacle ] -> [ | player  ] 


[player no spawned] [ spawned] -> [player] []

[ magnet ] -> [ magnet suck_u suck_d suck_l suck_r ]

up [ suck_d | no thick ] -> [ suck_d | suck_d ]
down [ suck_u | no thick ] -> [ suck_u | suck_u ]
left [ suck_r | no thick ] -> [ suck_r | suck_r ]
right [ suck_l | no thick ] -> [ suck_l | suck_l ]


[S]->[]


up [ suck_d | door | no suck_u ]    -> [ suck_d | down door S | ]


down [ suck_u | door S | no suck_d ]  -> [ suck_u | stationary door S | ]
down [ suck_u | door no S | no suck_d ]  -> [ suck_u | up door S | ]


left [ suck_r | door S | no suck_l ]  -> [ suck_r | stationary door S | ]
left [ suck_r | door no S | no suck_l ]  -> [ suck_r | right door S | ]


right [ suck_l | door S | no suck_r ] -> [ suck_l | stationary door S | ]
right [ suck_l | door no S | no suck_r ] -> [ suck_l | left door S | ]

[ > player | door no S ] -> [ > player | > door ]

[s]->[]

up    [ suck_d | door ]    -> [ suck_d | door S ]
down  [ suck_u | door ]    -> [ suck_u | door S ]
left  [ suck_r | door ]    -> [ suck_r | door S ]
right [ suck_l | door ]    -> [ suck_l | door S ]


([ > player | > door S ] -> [ > player | > door ])


(push ortho doors)

up    [ up    door_l | no obstacle ] -> [ | door_dl ] sfx0
up    [ up    door_r | no obstacle ] -> [ | door_dr ] sfx0
down  [ down  door_l | no obstacle ] -> [ | door_ul ] sfx0
down  [ down  door_r | no obstacle ] -> [ | door_ur ] sfx0
left  [ left  door_u | no obstacle ] -> [ | door_ur ] sfx0
left  [ left  door_d | no obstacle ] -> [ | door_dr ] sfx0
right [ right door_u | no obstacle ] -> [ | door_ul ] sfx0
right [ right door_d | no obstacle ] -> [ | door_dl ] sfx0

(push diag doors)
up [ up door_ul | no obstacle ] -> [ | door_l ] sfx0
up [ up door_ur | no obstacle ] -> [ | door_r ] sfx0
left [ up door_dl no S | no obstacle ] -> [ | door_d ] sfx0
right [ up door_dr no S | no obstacle ] -> [ | door_d ] sfx0

left [ down door_ul no S | no obstacle ] -> [ | door_u ] sfx0
right [ down door_ur no S | no obstacle ] -> [ | door_u ] sfx0
down [ down door_dl | no obstacle ] -> [ | door_l ] sfx0
down [ down door_dr | no obstacle ] -> [ | door_r ] sfx0

left [ left door_ul | no obstacle ] -> [ | door_u ] sfx0
up [ left door_ur no S | no obstacle ] -> [ | door_r ] sfx0
left [ left door_dl | no obstacle ] -> [ | door_d ] sfx0
down [ left door_dr no S | no obstacle ] -> [ | door_r ] sfx0

up [ right door_ul no S | no obstacle ] -> [ | door_l ] sfx0
right [ right door_ur | no obstacle ] -> [ | door_u ] sfx0
down [ right door_dl no S | no obstacle ] -> [ | door_l ] sfx0
right [ right door_dr | no obstacle ] -> [ | door_d ] sfx0




[ moving door ] -> [ door ] 


late up   [ door_ul | ] -> [ door_ul | dl ]
late left [ door_ul | ] -> [ door_ul | ur ]

late down [ door_dl | ] -> [ door_dl | ul ]
late left [ door_dl | ] -> [ door_dl | dr ]

late up    [ door_ur | ] -> [ door_ur | dr ]
late right [ door_ur | ] -> [ door_ur | ul ]

late down  [ door_dr | ] -> [ door_dr | ur ]
late right [ door_dr | ] -> [ door_dr | dl ]

late [ thick suck ] -> [ thick ]

[player] -> again

late [magnet suck]->[]
late down [ player | ] -> [ player  | underplayer]

late [ magnet target ] -> [ teleport ] sfx5 




==============
WINCONDITIONS
==============

all player on endhand

=======
LEVELS
=======

message Level 1 von 3 : Ausbruch

##########%#%##
#%##...####%##%
####.m.######%#
##.....##...###
##...###.....##
##....##.....##
##.....##....##
###hl..##....##
###..........##
###....#hl...##
###.....#.#####
#########.#####
##....##......#
#.t....#....o.#
#...x..#..p...#
##....##......#
###############

message Level 2 von 3 : Flucht

##################
##%#####.....#####
#####%##.##.2...##
########.##.1h#.##
#....##..##h.##.##
#.p..hh..###.##.##
#....u.3####.#...#
#hl##.######.#.x.#
##.....#.....#...#
#....o.#.t...#####
#..m...#.....#####
#......########%##
##################

message Level 3 von 3 : Fensterrose


#######################
#######.........#######
######...........######
##..##...kkkkk...##..##
#....#...k...k...#....#
#.t..#...k.t.k...#..x.#
#....#...kk.kk...#....#
#....#....2d1....#....#
#..o.#...krhlk...#.t..#
#....#...k...k...#....#
#...##..m........#....#
#.hl.............#....#
#...##....p......#....#
#######.........#######
#######################

............
............
....x.......
............
............
............
............
........p...
............

............
............
....§±`~....
....5678....
....90!@....
.....£$\....
.....Y&*....
.....-=.....
............

message ICH BIN DER POSEIDON


(

#####################
#######.......#######
######.........######
##..##..kkkkk..##..##
#....#..k...k..#....#
#.t..#..k.t.k..#..x.#
#....#..kk.kk..#....#
#....#...2d1...#....#
#..o.#..krhlk..#.t..#
#....#..k...k..#....#
#...##.m.......#....#
#.hl...........#....#
#...##...p.....#....#
#######.......#######
#####################

#############
##.........##
#...........#
#...kkkkk...#
#...k...k...#
#...k.x.k...#
#...kk.kk...#
#....2d1....#
#...krhlk...#
#...k...k...#
#...........#
#..m........#
#....p......#
##.........##
#############


#############
##.........##
#...........#
#...kkkkk...#
#...k...k...#
#...k.x.k...#
#...kk.kk...#
#....2d1....#
#...krhlk...#
#...k...k...#
#...........#
#.m.........#
#...........#
#......p....#
##.........##
#############



###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#...m.........#
#.............#
#.....p.......#
#.............#
#.............#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#.............#
#..........m..#
#.............#
#......p......#
#.............#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

######"########
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k.d.k....#
#....krhlk....#
#...kk.u.k....#
#...kt...k..o.#
#...kkkkkk....#
#..m......m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k.d.k....#
#....krhlk....#
#....k.u.k....#
#....k...k....#
#....k.t.k..o.#
#....kkkkk....#
#...m.........#
#.............#
##.....p.....##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k2d1k....#
#....krhlk....#
#....k........#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k2d1k....#
#....krhlk....#
#.............#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#.....4u......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4u......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4.......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k...k....#
#....k2d.k....#
#....krh.k....#
#....k4..k....#
#....k.k.k....#
#....k.kkk....#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4.......#
#....k........#
#....k........#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k...k....#
#....k2d.k....#
#....krh.k....#
#....k4u.k....#
#....k.k.k....#
#....k.kkk....#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2d.k....
...krh.k....
...k4..k....
...k.k.k....
...k.kkk....
..m.....m...
............
......p.....
............

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2d.k....
...krh.k....
...k4u.k....
...k.k.k....
...k.kkk....
..m.....m...
............
......p.....
............


............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2..k....
...krh.k....
...k4..k....
...k.k.k....
...k.kkk....
..m.....m...
............
.....p......
............

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k.d.k....
...krh.k....
...k.u.k....
...k.k.k....
...k.kkk....
..m.....m...
............
.....p......
............

............
............
..kkkkk.....
..k...k.....
..k.x.k.....
..k...k.....
..k.d.k.....
..krh.k.....
..k.u.k.....
..k.k.k.....
..k.kkk.....
............
........m...
............
..........p.
............

##################
#####.......#....#
#####.......#....#
#####..##...#....#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####....#...#....#
#.......#........#
#.m..p..##########
#.......#.........
#########.........

##################
#####.........#..#
#####...mp....#..#
#####..##d....#..#
####h..h#h2...#rh#
####u..u#..h###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####....#.....#..#
#.......#.....#..#
#.......#........#
#.......#........#
##################


###################
####....#.........#
####hlrh#.........#
####....#.........#
####hlrh#.........#
####....#.........#
####hlrh#.........#
####....#.........#
####....#.........#
#.................#
#.m..p............#
#.................#
###################



##################
#................#
#................#
#................#
#................#
#................#
#................#
###.###..........#
#.....#..........#
#.p...#..........#
#.....#..........#
#...m.#..........#
#.....#..........#
##################

##################
#####.........#..#
#####.....pmk.#..#
#####..##d..k.#..#
####h..h#h2.k.#rh#
####u..u#..h###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####....#.....#..#
#.......#.....#..#
#...kkkk#........#
#.......#........#
##################

##################
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
##################

)

USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Warehouse Puzzles
author New Dev
homepage www.example.com

========
OBJECTS
========

Background
white

Wall
gray

Player
black
.....
..0..
00000
..0..
.....

Crate
orange
.....
.000.
.0.0.
.....

Target
lightgray
.....
..0..
.0.0.
.....

=======
LEGEND
=======

# = Wall
P = Player
* = Crate
O = Target
@ = Crate and Target
. = Background

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Crate on Target

=======
LEVELS
=======

#####
#OOOO#
#@*P#
#####

########
#...O.#
#.P.*.#
#.....#
#@....#
########

########
##..O..#
#.O#@P.#
#.#.###.
#.*..###
########

```
compiled, but a solvability check returned the following error:
 Level 0 is not solvable. Please repair it.Found solution for level 1 in 75 iterations: 3,2,3,0.  Level 2 is not solvable. Please repair it.
Return your code in full, inside a ```plaintext code block.