To repair the PuzzleScript game code, let's address each of the reported errors step by step.

1. **Collision Layer Order and Missing Sounds Section:** The error message indicates that the "COLLISIONLAYERS" section is out of order and that a "SOUNDS" section is missing. This can be fixed by including an empty "SOUNDS" section before "COLLISIONLAYERS."

2. **Name Errors in Rules:** The error messages say that "player," "crate," and "goal" are not valid object names. These should be uppercaseâ€”consistent with the identifiers specified in the "LEGEND" section ("P" for Player, "C" for Crate, "G" for Goal).

3. **Win Condition Invalid Name:** The "ALL Goal on Crate" line contains the name of an object ("Goal") which is not recognized based on the legend. Using consistent identifiers ("G" for Goal and "C" for Crate) can fix this.

By fixing these issues, the game should compile correctly. Here is the updated and corrected code:

```plaintext
title Block Pusher Adventure
author YourName

========
OBJECTS
========

Background
DarkGrey LightGrey
.....
.....
.....
.....
.....

Player
Black Orange
.000.
.111.
.111.
.111.
.0.0.

Wall
Brown DarkBrown
00000
00000
00000
00000
00000

Crate
Yellow
00000
0...0
0...0
0...0
00000

Goal
Blue LightBlue
.....
..0..
.000.
..0..
.....

=======
LEGEND
=======

. = Background
P = Player
# = Wall
C = Crate
G = Goal

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Player, Wall, Crate, Goal

======
RULES
======

[ > P | C ] -> [ > P | > C ]
[ C | G ] -> [ G | G ]

==============
WINCONDITIONS
==============

All G on C

=======
LEVELS
=======

######
#P...#
#..C.#
#.C..#
#..G.#
######

#######
#P....#
#.#####
#..C..#
#...G.#
#######

#####
#PCG#
#####
```

This code now includes an empty "SOUNDS" section, uses uppercase identifiers consistent with the legend in the rules, and correctly specifies the win condition with the appropriate object identifiers.