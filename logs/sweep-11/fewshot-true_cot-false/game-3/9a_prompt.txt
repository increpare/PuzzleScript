SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Heroes of Sokoban
author Jonah Ostroff
text_color yellow
key_repeat_interval 0.25

========
OBJECTS
========

Background
#AAAAAA #DDDDDD
00000
00100
00000
00010
00000

Goal
Brown Yellow
.000.
00000
00010
00000
00000

Wall
Darkgrey #222222
01000
11111
00010
00010
11111

Fighter
#FF4444 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

Wizard
#2266FF Pink
.000.
.010.
00000
.000.
00000

Thief
#00BB00 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

SFighter
#880000 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

SWizard
#000088 Pink
.000.
.010.
00000
.000.
00000

SThief
#006600 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.


Crate
Orange #552200
.111.
10001
10001
10001
.111.

YellowSwitch
Yellow Black
.....
.111.
.101.
.111.
.....

YellowOpen
Yellow
0...0
.....
.....
.....
0...0

YellowDoor
Yellow #AA7722
01010
10001
00000
10001
01010

PurpleSwitch
#6611CC Black
.....
.111.
.101.
.111.
.....

PurpleDoor
#6611CC #220088
01010
10001
00000
10001
01010

PurpleOpen
#6611CC
0...0
.....
.....
.....
0...0

Temp
Pink

ShadowDoor
Purple

=======
LEGEND
=======

Player = Fighter or Wizard or Thief
SPlayer = Swizard or Sthief or SFighter
Hero = Player or Splayer
ClosedDoor = PurpleDoor or YellowDoor
OpenDoor = YellowOpen or PurpleOpen
Switch = PurpleSwitch or YellowSwitch
Moveable = Crate or SPlayer
Static = Wall or ClosedDoor
Weighing = Crate or Player or SPlayer
. = Background
# = Wall
F = Fighter
W = Wizard
T = Thief
1 = SFighter
2 = SThief
3 = SWizard
* = Crate
G = Goal
[ = YellowDoor
] = PurpleDoor
{ = YellowSwitch
} = PurpleSwitch

=======
SOUNDS
=======

Moveable move 82056307
Sfx0 21221308
Endlevel 36315908
Sfx1 66399906
Sfx2 92172900
Sfx3 15129100
EndGame 86793500

================
COLLISIONLAYERS
================

Background
Temp
Goal, Switch, OpenDoor, ShadowDoor
ClosedDoor, Hero, Crate, Wall

======
RULES
======

[ >  Fighter | Moveable ] -> [  >  Fighter | > Moveable  ]
[ > Moveable | Moveable ] [ Fighter] -> [ > Moveable | > Moveable ] [ Fighter]

[ < Thief | Moveable ] -> [ < Thief | < Moveable ]

[ > Wizard ] -> [ Wizard > Temp]
[ > Temp | no Moveable no Static] -> [ | > Temp]
[ > Temp | Static] [Wizard] -> [ | Static ] [> Wizard]
[ > Temp | Moveable ] [Wizard] -> [ | Wizard Sfx0] [Moveable]

Late [Temp] -> []

[ Action Fighter] [SThief] -> [SFighter] [Thief Sfx1]
[ Action Thief] [SWizard] -> [SThief] [Wizard Sfx1]
[ Action Wizard] [SFighter] -> [SWizard] [Fighter Sfx1]
[ Action Fighter] [no SThief] [SWizard] -> [SFighter] [no SThief] [Wizard Sfx1]
[ Action Thief] [no Swizard] [SFighter] -> [SThief] [no SWizard] [Fighter Sfx1]
[ Action Wizard] [no SFighter] [SThief] -> [SWizard] [no SFighter] [Thief Sfx1]

late [Weighing  YellowSwitch] [YellowDoor] -> [Weighing  YellowSwitch] [ShadowDoor]
late [YellowSwitch no Weighing] [YellowOpen] -> [YellowSwitch] [YellowDoor sfx2]
late [YellowSwitch no Weighing] [ShadowDoor] -> [YellowSwitch] [YellowDoor]
late [ShadowDoor] -> [YellowOpen sfx3]

late [Weighing PurpleSwitch] [PurpleDoor] -> [Weighing PurpleSwitch] [ShadowDoor]
late [PurpleSwitch no Weighing] [PurpleOpen] -> [PurpleSwitch] [PurpleDoor sfx2]
late [PurpleSwitch no Weighing] [ShadowDoor] -> [PurpleSwitch] [PurpleDoor]
late [ShadowDoor] -> [PurpleOpen sfx3]

==============
WINCONDITIONS
==============

All Hero on Goal
All Goal on Hero

=======
LEVELS
=======

Message Walk to the exit.

#############
#...........#
#.F.......G.#
#...........#
#############

Message Red warrior pushes blocks.

#############
#...#.*.#.*.#
#.F...*.**G.#
#...#.*.#.*.#
#############

Message Hold down switches to open doors.

#############
#...#...#...#
#.F.*.{.#.G.#
#...#...[...#
#############

Message Press multiple switches at once.

#########
#.....#G#
#.#*..#[#
#.**.F..#
#.......#
#.{.{.{.#
#.......#
#########

Message Green thief pulls blocks.

#############
#...#..*#...#
#.T.*.{.#.G.#
#...#..*[...#
#############

#########
#.....#G#
#.#*..#[#
#.**.T..#
#.......#
#.{.{.{.#
#.......#
#########

#########
#...##G.#
#.#..##[#
#....{..#
#.#.#.#.#
#..*.T..#
#########

Message Blue wizard teleports to blocks.

#############
#...*.{.#...#
#.W.*.{.[.G.#
#...#...#...#
#############

#########
#.....#G#
#.#*..#[#
#.**.W..#
#.......#
#.{.{.{.#
#.......#
#########

#######
#W#G#*#
#.#.#.#
#*...*#
#.###.#
#*.*..#
#######

Message Press action to switch heroes.

#############
#...#...#...#
#.F...}.[.G.#
#...#...#...#
#############
#...#...#...#
#.3.].{...G.#
#...#...#...#
#############

Message Heroes can move each other.

###########
#*#..##G.G#
#.#.2.#...#
#.....#..##
#W###.*..*#
###########

###########
#F.*.#.*#{#
#..#...*..#
####...*.*#
#..#.##[###
#2...#*.GG#
###########

#############
#.###########
#*....{....3#
#.####.######
#.#..#.###..#
#.#G....[].G#
#.#..#.###..#
#.####.######
#.....}....T#
#############

#############
##G.#F#*#...#
#*..[.....{.#
##G.#3###...#
#############

###########
#W..{...[*#
#######.#[#
#G#G#G#.#2#
#.......#1#
###########

#########
#*......#
#######.#
#F23.]#.#
#..##G#.#
#..#GG#.#
##.####.#
#.......#
##}####.#
#########

#############
#...#G.G#...#
#.*.#F23#.G.#
#...#...#...#
##[###.###[##
#...#...#...#
#.{...{...{.#
#...#...#...#
#############

#######
#G***F#
#*****#
#G***2#
#*****#
#G***3#
#######

########
#3..G[*#
########
#F**G{{#
########
#2.[G..#
########

#############
#...#...#...#
#F#.*.#.*.#3#
#...#...#...#
######.######
#...#...#####
#2#.*.#...}*#
#...#...#####
######.######
#G..#...#...#
#G..].#...#.#
#G..#...#...#
#############

#############
#F.........G#
#############
#T.........G#
#############
#W.........G#
#############
Message Thanks for playing!


title Robot Spawner
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background (special, automatically placed in its own layer)
green darkgreen
11111
01111
11101
11111
10111

Spawner (Name)
yellow 	(Color)
..... 	(Sprite)
..0..
.000.
..0..
.....

Player (Required by game)
pink
..0..
00000
..0..
.000.
.0.0.

RedRobot
gray black red
.000.
.200.
...0.
00000
01010

GreenRobot
gray black lightgreen
.000.
.200.
...0.
00000
01010

BlueRobot
gray black lightblue
.000.
.200.
...0.
00000
01010

=======
LEGEND
=======

Robot = RedRobot or GreenRobot or BlueRobot
Obstacle = Player or Robot
. = Background
P = Player
* = Robot
O = Spawner

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Spawner
Player, Robot

======
RULES
======

[ stationary Robot ] -> [ randomDir Robot ] 
[ Spawner no Obstacle ] -> [ Spawner random Robot ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

.......
.......
.......
...O...
.......
.P.....
.......


title PUSH
author lonebot - demake by rmmh
homepage http://lonebot.net/games/push/

youtube UXlXgFDgXow
again_interval 0.1
noaction

========
OBJECTS
========

Background .
#756C5E

Wall #
#635854

StrongPlayer P
#E8D2AC #67453D Black #282D3C Red
11111
02020
40004
43334
33.33

WeakPlayer
#E8D2AC #67453D Black #282D3C
11111
02020
.000.
.333.
33.33

GibbedPlayer
Red
...0.
.0...
0..0.
.....
..0.0

Rock *
#202020 #706249 #A6957B
.000.
02220
02210
01110
.000.

RockDust (destroyed by a projectile)
#A6957B
...0.
.0...
0..0.
.....
..0.0

Idol G
#945527 #C97536 #F4EF0B
.000.
01210
.222.
.010.
01210

Pit _
Black #5A5349
.1.1.
1000.
.000.
.0001
..11.

PitFilled
Black #5A5349 #706249
.1.1.
1222.
.222.
.2221
..11.

PitPlayer
Black #5A5349 #E8D2AC #282D3C
.1.1.
1020.
.222.
.3331
..11.

WeakGround x
#5A5349
.0..0
00..0
..00.
00..0
0.0..

GunUSingle U
Black Grey Yellow
..0..
12021
11011
11111
.111.

GunDSingle D
Black Grey Yellow
.111.
11111
11011
12021
..0..

GunRSingle R
Black Grey Yellow
.111.
1112.
11000
1112.
.111.

GunLSingle L
Black Grey Yellow
.111.
.2111
00011
.2111
.111.

GunUMulti M
Black Grey Red
..0..
.202.
12021
12221
.111.

GunLMulti N
Black Grey Red
..11.
.2221
00021
.2221
..11.

GunRMulti O
Black Grey Red
.11..
1222.
12000
1222.
.11..


Button T
#969283 #4A4A4A
.000.
01110
01010
01110
.000.

ButtonPressed
#969283 #3A3A3A
.000.
01110
01110
01110
.000.

ArrowU
Brown
..0..
.000.
..0..
.....
.....

ArrowR
Brown
.....
...0.
..000
...0.
.....

ArrowL
Brown
.....
.0...
000..
.0...
.....

ArrowD
Brown DarkBrown
.....
.....
..0..
.000.
..0..

Firing
Black

Fired
Brown

(used for linking buttons to guns, and for generic flags)
LinkA
Red

LinkB
Green

LinkC
Blue

LinkD
White

LinkE
Black

=======
LEGEND
=======

Player = StrongPlayer or WeakPlayer or GibbedPlayer
DeadPlayer = GibbedPlayer or PitPlayer
GunU = GunUSingle or GunUMulti
GunD = GunDSingle
GunL = GunLSingle or GunLMulti
GunR = GunRSingle or GunRMulti
MultiGun = GunUMulti or GunLMulti or GunRMulti
Gun = GunU or GunR or GunD or GunL
Movable = Rock or Gun
Q = StrongPlayer and WeakGround
Heavy = Movable or Player
Arrow = ArrowU or ArrowR or ArrowD or ArrowL
Link = LinkA or LinkB or LinkC or LinkD or LinkE
Blockers = Player or Wall or Idol or Movable

1 = Wall and LinkA
2 = Wall and LinkB
3 = Wall and LinkC
4 = Wall and LinkD
5 = Wall and LinkE

7 = GunRSingle and LinkE
8 = Button and LinkE

=======
SOUNDS
=======

Idol destroy 47224903
Pit create 4141702
PitPlayer create 19700104
PitFilled create 87604304
ButtonPressed create 25424301
(using sfxN here to deal with bug where 'again' triggers sounds twice)
sfx0 36787702 (rock destroyed by arrow)
sfx1 59184504 (player explodes)
Arrow create 98842708 (arrow shot)

================
COLLISIONLAYERS
================

Link (move layer to top for debugging linkages)
Firing, Fired
Background
Pit, PitFilled, WeakGround, Button, ButtonPressed, PitPlayer, RockDust
Blockers
Arrow

======
RULES
======

(player can move an object only once)
[ > StrongPlayer | Movable | no Blockers ] -> [ > WeakPlayer | > Movable | ]
[ > Movable Link ] -> [ > Movable > Link ]
[ DeadPlayer ] -> cancel

(pit behaviors)
late [ Player Pit ] -> [ PitPlayer ] (falling into a pit kills you)
late [ Pit Rock ] -> [ PitFilled ]  (they can be filled)
[ Player WeakGround ] -> [ Player WeakGround LinkA ] (mark WeakGround as visited)
late [ WeakGround LinkA no Player ] -> [ Pit ] (pits appear when you move off weakground)

(initialize gun linkages -- try linking on a line first)
[Wall Link] [Button no Link | ... | Gun no Link] -> [Wall] [Button Link | ... | Gun Link]
[Wall Link] [Button no Link] [Gun no Link] -> [Wall] [Button Link] [Gun Link]

(buttons cause linked gun to fire)
late [ Button Heavy LinkA ] [ Gun LinkA ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkB ] [ Gun LinkB ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkC ] [ Gun LinkC ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkD ] [ Gun LinkD ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkE ] [ Gun LinkE ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again

( MultiGuns fire 3 shots. do this by cycling LinkB->LinkA->None )
[ MultiGun Firing no Link ] -> [ MultiGun Firing LinkB ]
[ MultiGun Fired LinkB ] -> [ MultiGun Firing LinkA ]
[ MultiGun Fired LinkA ] -> [ MultiGun Firing ]

( create arrows )
[ GunU Firing ] -> [ GunU ArrowU Fired ]
[ GunR Firing ] -> [ GunR ArrowR Fired ]
[ GunL Firing ] -> [ GunL ArrowL Fired ]
[ GunD Firing ] -> [ GunD ArrowD Fired ]
( move )
[ ArrowL ] -> [ left ArrowL ] again
[ ArrowU ] -> [ up ArrowU ] again
[ ArrowR ] -> [ right ArrowR ] again
[ ArrowD ] -> [ down ArrowD ] again

late [ Arrow Rock ] -> [ RockDust ] sfx0
late [ Arrow Player ] -> [ GibbedPlayer ] sfx1
late [ Arrow Blockers ] -> [ Blockers ] sfx0

(grabbing an idol)
[ DeadPlayer ] -> cancel
[ > Player | Idol ] -> [ Player | Pit ]

==============
WINCONDITIONS
==============

no Idol

=======
LEVELS
=======

message 1/20: You only get one push!
###########
#.........#
#......*..#
#.*.....*.#
#...***...#
#..**g*...#
#..*.*....#
#.........#
#...p...*.#
#.........#
###########

message 2/20: Mind the gap
###########
#**.......#
#*....*.*.#
#.........#
#...***...#
#...*g*...#
#...*_*...#
#*........#
#..*.p..*.#
#.........#
###########

message 3/20: Shaky footing
###########
#****g****#
#.*_..****#
#x********#
#.********#
#.x.xx...*#
#*******x*#
#......x.*#
#.********#
#p*.......#
###########

message 4/20: Firepower
1##########
#*...g...*#
#........*#
#*********#
#**.....*.#
#**.......#
#**_.p....#
#*t*...**.#
#**_...**.#
#**..u...*#
###########

message 5/20: Artillery
1##########
#**.....*.#
#*......**#
#...*g*...#
#.*.......#
#.........#
#*********#
#..*.**...#
#*......t.#
#..*.u...p#
###########

message 6/20: Traps
1##########
#t**.****.#
#.*...**g*#
#.x.....**#
#.**.*....#
#..*.*....#
#.**......#
#**.......#
#**p..*...#
#**..**.u*#
###########

message 7/20: Sequencing
12#########
#*********#
#*t****_..#
#*x*.d**..#
#.....**..#
#.....*...#
#t..._*...#
#r...**.g.#
#...***...#
#p..****..#
###########

message 8/20: Hamiltonian Cycle
(8/20 - 3 guns, order irrelevant)
123########
#*....**.*#
#..***l**.#
#g****l***#
#*****l***#
#tx**xxxxx#
#xxxqxxx*t#
#xx*_**x_x#
#*x_xxxxx*#
#*xtx*x**_#
###########

message 9/20: Barrage
(9/20 -- 4 guns, all inline with triggers)
1234#######
#****x***_#
#***.tt.**#
#xg_.dd.**#
#*__......#
#_*__**.lt#
#_*..*..lt#
#.........#
#*p.......#
#**...*..*#
###########

message 10/20: Rotary
(10/20 -- 4 guns, mostly inline with triggers)
1234#######
#**_*...t.#
#*......d.#
#r......**#
#*.****..*#
#t.*.g**.*#
#..******x#
#....**_xt#
#.....p***#
#_.u*t._.l#
###########

message 11/20: Shooting Gallery
(11/20)
1234#######
#t..*..*_l#
#_.****.__#
#r.*x**.t*#
#******.**#
#**xtr_.*g#
#__.__..**#
#_......**#
#....p.u.*#
#**....t..#
###########

message 12/20: Co-op
(12/20: 2 players!)
1##########
#*t.._____#
#...._*g__#
#.r.._.*..#
#...._*.**#
#**_._.*.*#
#****_....#
#*..*_..**#
#*.**_..**#
#*p**_..p*#
###########

message 13/20: Rescue
12#########
#**...._.g#
#*.t..._*.#
#*...d._.*#
#*p..__*_*#
#*...__.u*#
#.*..._.t*#
#*...**_**#
#*..***.**#
#*.**....p#
###########

message 14/20: Friendly Fire
(14/20 -- corridor toggle triggers left-wall gun )
12#########
#*********#
#*********#
#g*8...pl*#
#*********#
#7********#
#...***...#
#......p.t#
#....*.*..#
#.ut......#
###########

message 15/20: Interference
123########
#**..*..**#
#*.......*#
#....p...*#
#t......**#
#r.**..**g#
#...*...**#
#..uup..**#
#*.......*#
#**tt...**#
###########

message 16/20: Machine guns
1##########
#*********#
#p..*g****#
#....*****#
#..*******#
#..**.*.**#
#***......#
#***.p....#
#....t.m..#
#_........#
###########

message 17/20: Trapped
(17/20 -- top toggle triggers magma)
123########
#p**...n*g#
#*****..*_#
#******.**#
#***..t*.*#
#*7_*.....#
#8.x*....l#
#...xp...x#
#...u*.._t#
#*..t*...x#
###########

message 18/20: Crossfire
(18/20 -- modified to be more difficult)
12345######
#_g.*_****#
#____**...#
#.....*...#
#rx.***.x.#
#t..*.*...#
#.px..*.pl#
#o.**.*x.*#
#t...*.x.t#
#.xtm*mtx.#
###########

message 19/20: Stylite
(19/20)
1##########
#*********#
#..*t***x*#
#p...*****#
#.r..*g***#
#.*_____*_#
#**_...___#
#*__p..___#
#*x_...__*#
#_*_______#
###########

message 20/20: Spinal Cannon
(20/20 -- inverted so I don't have to make an upwards magma gun)
1##########
#p.**g*_.p#
#....**x..#
#_*.._..**#
#.*..*...*#
#..*.x....#
#_x__*.._.#
#*.x_*x.._#
#*x..***..#
#*_.tm.*..#
###########

(finale -- pushes gold into pit, gold gets smashed, eyes bug out)
###########
#*.......*#
#....p....#
#._....._.#
#_...*..._#
#_..._..._#
#__._g_.__#
#_________#
#_________#
#*_______*#
###########

message Congratulations!

(Credits
Code: Yotam Frid
Art: Mati & Itamar Ernst
Music: Jason Lord

www.lonebot.net
Ludam Dare 28)

(blank level template()
###########
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
###########
()

title Several Rigid Bodies
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
darkgreen

Target
YELLOW

Player
PINK

RedCrate q
RED

GreenCrate w
Green

BlueCrate e
Blue

SmallCrate r
Purple
.....
.000.
.000.
.000.
.....

Wall
DARKBROWN

=======
LEGEND
=======

. = Background
# = Wall
P = Player
bigcrate = redcrate or greencrate or bluecrate
Crate = smallcrate or bigcrate
O = Target

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

startloop

[ > Player | Smallcrate ] -> [ > Player | > SmallCrate ]

[ >  Player | RedCrate ] -> [  >  Player | > RedCrate  ]
+ rigid [ moving RedCrate | RedCrate ] -> [ moving RedCrate | moving RedCrate ]
+ [ >  Crate | RedCrate ] -> [  >  Crate | > RedCrate  ]

[ >  Player | GreenCrate ] -> [  >  Player | > GreenCrate  ]
+ rigid [ moving GreenCrate | GreenCrate ] -> [ moving GreenCrate | moving GreenCrate ]
+ [ >  Crate | GreenCrate ] -> [  >  Crate | > GreenCrate  ]


[ >  Player | BlueCrate ] -> [  >  Player | > BlueCrate  ]
+ rigid [ moving BlueCrate | BlueCrate ] -> [ moving BlueCrate | moving BlueCrate ]
+ [ >  Crate | BlueCrate ] -> [  >  Crate | > BlueCrate  ]

[ > Crate | SmallCrate ] -> [  > Crate | > SmallCrate ]

endloop

==============
WINCONDITIONS
==============

=======
LEVELS
=======

...............
...............
...............
.....#.........
...............
...r.r.........
..P....#.......
..qq..w.eer....
..q.wwweer.....
..q.#..........
...............
...............
...............



title It Dies In The Light
author Christopher Wells
homepage www.tophwells.com

noaction
run_rules_on_level_start
again_interval 0.05

========
OBJECTS
========

BackgroundNeutral
LIGHTGray Gray
11011
10101
01110
10101
11011

BackgroundDark
Black

Wall
Lightblue Blue
00010
11111
01000
11111
00010

LivePlayer
Black LightRed White Blue
.000.
.111.
12321
.232.
.222.

Corpse
LightGrey
.000.
.0.0.
0.0.0
..0..
.0.0.

Crate
Orange LightBrown Brown
.222.
21012
20102
21012
.222.

GoldCrate
White Yellow Orange
.222.
21012
20002
21012
.222.

GlassCrate
White
.000.
0...0
0...0
0...0
.000.

Prism
LightBlue White
.000.
00110
00010
00000
.000.

ActivePrism
LightBlue White Yellow
.000.
02120
01110
02120
.000.

Glass
White
00000
0...0
0...0
0...0
00000

BeamVert
White Yellow
.101.
.101.
.101.
.101.
.101.

BeamHor
White Yellow
.....
11111
00000
11111
.....

BeamCross
White Yellow
.101.
11011
00000
11011
.101.

Shadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

TempShadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

=======
LEGEND
=======

. = BackgroundNeutral
# = Wall
P = LivePlayer
C = Crate
G = GoldCrate
S = Shadow
X = Prism
O = Glass

Background = BackgroundNeutral or BackgroundDark
Player = LivePlayer or Corpse
Light = BeamVert or BeamHor or BeamCross
Hlight = BeamHor or BeamCross
Vlight = BeamVert or BeamCross
Opaque = Player or Crate or Wall or GoldCrate
Pushable = Crate or GoldCrate or Prism or GlassCrate


=======
SOUNDS
=======

SFX0 93002904

================
COLLISIONLAYERS
================

Background
BeamVert, BeamHor, BeamCross, Shadow, TempShadow
Player, Corpse, Wall, Crate, GoldCrate, GlassCrate, Prism, ActivePrism, Glass

======
RULES
======

[> Corpse] -> RESTART
[Light] -> []
[ActivePrism] -> [Prism]
[ >  Player | Pushable ] -> [  >  Player | > Pushable  ]
late HORIZONTAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamHor]
late VERTICAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamVert]
late VERTICAL [GoldCrate|no Opaque BeamHor] -> [GoldCrate | BeamCross]
late HORIZONTAL [Hlight|no Opaque no Light] -> [Hlight|BeamHor]
+ late HORIZONTAL [Hlight|no Opaque BeamVert] -> [Hlight|BeamCross]
+ late VERTICAL [Vlight|no Opaque no Light] -> [Vlight|BeamVert]
+ late VERTICAL [Vlight|no Opaque BeamHor] -> [Vlight|BeamCross]
+ late [Light Prism] ->[BeamCross ActivePrism]
late [Shadow Pushable] -> [Pushable]
late [TempShadow] -> [Shadow]
late [Shadow | no Light no Wall no Pushable no Glass no Shadow] -> [shadow | Tempshadow] again
late [Shadow] -> [Shadow BackgroundDark]
late [TempShadow] -> [TempShadow BackgroundDark]
late [no Shadow no TempShadow] -> [no Shadow BackgroundNeutral]
late [Shadow Player] -> [Shadow Corpse]

==============
WINCONDITIONS
==============

no Shadow

=======
LEVELS
=======

......####.
..#####ss#.
###ssssss#.
#..ssscss##
#..#s#s#ss#
#.g#s#ssss#
#p.#s#ssss#
#..css#sss#
###########

........########.
........#...#.C#.
...######...GC.##
...#..CsssssO.C.#
...#P.Csss#sO.CC#
...#..Csss#sO#..#
########ss#s....#
#ssssssOss#s#####
#sssssssss###....
#########s#......
........###......

##########
###G#G#G##
##P......#
#G.......#
##..C....#
#G.......#
##..C....#
#G.......#
##......S#
##########

........########
........#......#
#########..#o#.#
#........gooxo.#
#g#####c#.sso#s#
#.ssssss#.ss.ss#
##soooss#.ss##s#
##c.p.c###ss#ss#
##.....#ssss#ss#
#...g.......#ss#
#########.xx#ss#
........##sssss#
.........#######

MESSAGE Earth is safe once again.

title horizontal Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
blue white
00000
00000
01110
00000
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

horizontal [ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

#########
#.......#
#.....@.#
#.P.*.O.#
#.......#
#.......#
#########

.#######.
.#.....#.
.#O##..##
##.##.*.#
#.*..**.#
#.OOO.#.#
#.P.....#
#########


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Block Pusher
author Anonymous

========
OBJECTS
========

Background
lightgrey
.....
.....
.....
.....
.....

Wall
darkgrey
.....
.....
.....
.....
.....

Player
green
.....
.....
..0..
.....
.....

Target
#FFFF00
.....
..0..
.000.
..0..
.....

Crate
orange
.....
.000.
.0.0.
.0.0.
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
O = Target
@ = Crate and Target

=======
SOUNDS
=======

Crate MOVE 44289704

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ > Player | Crate | ] -> [ > Player | > Crate ]

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======

#####
#...#
#*P*#
#...#
#O###
#####

```
produced the following console output:
=================================
line 77 : In a rule, each pattern to match on the left must have a corresponding pattern on the right of equal length (number of cells).
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. Return your code in full, inside a ```plaintext code block.