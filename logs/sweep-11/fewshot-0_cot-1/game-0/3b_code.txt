To address the errors in the PuzzleScript code, we need to understand the format expected for object definitions and make the necessary corrections:

1. **Color Declarations**: In PuzzleScript, the color is defined in a format of `color R G B` where R, G, B values range from 0 to 255. The current code attempts to declare colors using just the color names, which is incorrect.

2. **Object Symbols**: In PuzzleScript, the symbol for the object (e.g., `@` for Player) should be placed immediately after the object's name, not in a separate `symbol` or similar declaration.

3. **Color Conflicts**: The same error message about "Object 'COLOR' defined multiple times" suggests that the parsing of color is incorrect due to the wrong format.

Given these points, let's rewrite the object definitions properly using RGB values for colors and ensuring the symbols are in the correct place:

Here's the corrected code:

```plaintext
title Sokoban Puzzle

author YourName

homepage http://www.yourwebsite.com

========
OBJECTS
========

Background
    color 255 255 0  // Yellow

Player
    @
    color 255 0 0  // Red

Crate
    o
    color 165 42 42  // Brown

Wall
    #
    color 128 128 128  // Gray

Target
    .
    color 0 255 0  // Green

CrateOnTarget
    O
    color 0 100 0  // DarkGreen

=======

LEGEND
=======

. = Target
# = Wall
@ = Player
o = Crate
O = CrateOnTarget

=============

SOUNDS
=============

player_move
    sfx blip

crate_move
    sfx push

=============

RULES
=============
[Player | Crate] -> [ ] | [Player CrateMove]
CrateMove | Target -> CrateOnTarget | Target
CrateMove | Background -> Crate | Background
CrateOnTarget | Target -> CrateMove | Target

=============

WINCONDITIONS
=============

All CrateOnTarget on Target

=============

LEVELS
=============

[Level 1]
#######
#     #
# .o  #
#     #
#  @  #
#######

[Level 2]
#######
#     #
# .o. #
#     #
#  @  #
#######

[Level 3]
########
# @    #
#  oo  #
# .  o #
#    . #
########

```

In this corrected version, each object now has a valid RGB color representation, which should resolve the compilation errors and ensure the game works correctly.