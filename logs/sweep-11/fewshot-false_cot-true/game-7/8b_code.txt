Sure! Let's take a look at your PuzzleScript game and see what's going wrong. In the game code you provided, the unsolvable issue in all levels is because the player does not move at all due to the `[Moving Player] -> [Player]` rule that essentially negates any movement. Let me fix the code and return it so that it's playable and solvable.

```plaintext
title Maze Escape
author Your Name

===========
OBJECTS
===========

Background
BLACK

Player
YELLOW

Wall
BLUE

Exit
GREEN

===========
LEGEND
===========

. = Background
P = Player
# = Wall
E = Exit

===========
SOUNDS
===========

===========
COLLISIONLAYERS
===========

Background
Wall
Player, Exit

===========
RULES
===========

up [Player | ] -> [ | Player]
down [Player | ] -> [ | Player]
left [Player | ] -> [ | Player]
right [Player | ] -> [ | Player]

[Player | Exit] -> [Player | Background]

===========
WINCONDITIONS
===========

No Exit

===========
LEVELS
===========

######
#P...#
#.##.#
#....#
#.E..#
######

########
#P.....#
#.###..#
#.#.E..#
#.#....#
#.####.#
#......#
########

#########
#P......#
###.###.#
#...E.#.#
###.###.#
#.......#
#########

```

I have removed the `[Moving Player] -> [Player]` rule which was overriding the player movement rules and preventing the player from moving. With this change, the levels should be solvable given standard puzzle design. Make sure each level has a clear, unobstructed path from the player's starting position to the exit; you can make adjustments to the level designs as you see fit to ensure solvability.