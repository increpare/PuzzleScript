Certainly! It seems there are issues with the formatting and structure of the PuzzleScript game code. Specifically, the `Legend` and `Objectives` sections seem misplaced and incorrectly defined. Additionally, the `CollisionLayers` section doesn't follow the right format, and so forth. Here's a revised version of the code:

```plaintext
# Legend
a = Player
b = Goal
c = Wall
d = Floor

z = PlayerOnGoal # Defining PlayerOnGoal in Legend, identified as 'z'

=== CollisionLayers ===
Background
Player
Goal
Wall

=== Rules ===
# Player movement
[right]  a -> a
[left]   a -> a
[up]     a -> a
[down]   a -> a

# Goals checking
a on b -> z

=== WinConditions ===
All z

=== Levels ===
# Level 1
...b...
..ccc..
..ca...
..ccc..
...d...

# Level 2
.....b.
..c...
..c.a.
..c...
...b...

```

Here are the changes I've made:
- Combined the `PlayerOnGoal` definition with the `Legend` by adding `z = PlayerOnGoal` so that `z` is recognized.
- Properly listed individual elements in `CollisionLayers` instead of grouping them into specific layers.
- Corrected player movement rules by removing redundant direction declarations and ensuring proper syntax. The rules were simplified to focus on player presence.
- Ensured the syntax for rules did not specify directions in both the rule's action and result parts unnecessarily.

This should compile without errors as long as PuzzleScript accepts the mechanism I've used to define goals "checking" and layers listing.