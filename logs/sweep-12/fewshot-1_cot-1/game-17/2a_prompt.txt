SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title neko puzzle
author lexaloffle
homepage www.lexaloffle.com

(

An inadequate but illustrative demake of one of my favourite puzzle games ever, by the extremely amicable Lexaloffle, and with his permission.

www.lexaloffle.com/neko.htm

The game proper has a lot of magic and love in it.

)

========
OBJECTS
========

Background .
darkblue

Fruit F
red green lightred
..1..
.000.
00020
00000
.000.

Player P
gray white
.1.1.
10101
11111
.111.
00.00

=======
LEGEND
=======

=========
SOUNDS
=========

endlevel 97301508
startgame 97301508
endgame 97301508

================
COLLISIONLAYERS
================

Background
Player, Fruit

======
RULES
======

[ > Player | ... | Fruit ] -> [ | ... | Player ] 

(if you're not sure what this line does, try removing it, and see what happens)
[ > Player ] -> [ Player ] 

==============
WINCONDITIONS
==============

no Fruit

=======
LEVELS
=======

message level 1 of 10

......F.
........
F......F
......FF
........
........
P.......

message level 2 of 10

........
....P...
...F.F..
........
........
..F.FF..
........

message level 3 of 10

........
.FF....F
........
........
F...P...
........
........
F.F.....

message level 4 of 10

....F..F
........
.......F
F.......
P.......
........
F...F...

message level 5 of 10

........
....F.P.
F.F.....
........
F...F...
..F.F...
........

message level 6 of 10

F.....F.
........
........
FF..F...
F.....F.
........
.P......

message level 7 of 10

...FP..F
F.F.....
F......F
........
........
..F.....
........

message level 8 of 10

..F..P..
........
........
.FFF....
F..F..F.
........
........

message level 9 of 10

....F..F
........
.F..F...
........
.F.P..F.
.F......
........

message level 10 of 10

....F.F.
........
.F..F..F
...F..F.
.......F
...FP...
........

message congratulations!


title Simple Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BlueCrate B
lightblue
00000
0...0
0...0
0...0
00000


OrangeCrate O
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

Crate = OrangeCrate or BlueCrate
. = Background
# = Wall
P = Player


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

[ > Crate | Crate ] -> [ > Crate | > Crate ]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#########
#.......#
#...B...#
#.P.B.O.#
#....O..#
#.......#
#########



title Drop Swap
author Aaron Steed
homepage www.robotacid.com

key_repeat_interval 0.23
again_interval 0.05
noaction
noundo
background_color Black
text_color Grey
run_rules_on_level_start

========
OBJECTS
========

Background
Black

Player
#ffffff #000000 #626263 #3c3b3c
.222.
21112
23132
20102
.222.

DeadPlayer
#ffffff #000000 #626263 #3c3b3c
.222.
21112
21112
23132
.222.

BaseWall
#222222 #333333 #444444 #ffffff
11110
12220
12200
12000
00000

APill
#ff0000 #ff7374 #ff0000 #ff0000
.111.
11110
11010
11100
.000.

BPill
#00de00 #cffa92 #ff0000 #ff0000
.111.
10010
10110
11100
.000.

CPill
#7a35fc #b56bfd #ff0000 #ff0000
.111.
10110
11010
11100
.000.

DPill
#0094fc #79b5fd #ff0000 #ff0000
.111.
10100
11010
10100
.000.

EPill
#d1c200 #fff919 #ffffff #ff0000
.111.
10010
10010
11110
.000.

FPill
#ff33b1 #ff76d2 #ff0000 #ff0000
.111.
10100
11110
10110
.000.

AllPill
#eeee66 #ffffff #ffffcc #ffffff
.112.
11112
11012
21120
.220.

NoPill
#ffffff #000000 #ffde85 #ff0000
.000.
00000
21012
.000.
..2..

Bomb
#6e6e6e #000000 #ff0000 #fcf26b
.020.
02320
01210
01110
.000.

GemPill
#ffffff #000000 #626263 #3c3b3c
..0..
.002.
00022
.223.
..2..

Count
#ffffff #000000 #5a595a #ff0000
.....
.000.
.000.
.000.
.....

Marked
#ffffff #000000
.....
..1..
.101.
..1..
.....

CountTray
#333333

GemTray
#333333

StartGem
red

Collect
White

Debris1
#ffffff #0739f5 #1f0f42 #ffffff
.0.0.
00.00
..0..
00.00
.0.0.

Debris2
#ffffff #0739f5 #1f0f42 #ffffff
.....
.0.0.
..0..
.0.0.
.....

Empty
Black

OldPos
Black

StartCount
Black

DropWall1
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall2
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall3
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall4
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropMarker
Blue

Init
Purple

=======
LEGEND
=======

. = Background
@ = Player
p = DeadPlayer
# = BaseWall
a = APill
b = BPill
c = CPill
d = DPill
e = EPill
f = FPill
n = NoPill
x = AllPill
u = Count and CountTray
w = Count and CountTray and StartCount
g = GemPill
q = GemTray
o = GemTray and StartGem
p = Bomb
i = Init
j = DropWall1
k = DropWall2
l = DropWall3
m = DropWall4


MatchPill = APill or BPill or CPill or DPill or EPill or FPill or AllPill
Pill = MatchPill or NoPill or GemPill or Bomb
Debris = Debris1 or Debris2
AMatch = APill or AllPill
BMatch = BPill or AllPill
CMatch = CPill or AllPill
DMatch = DPill or AllPill
EMatch = EPill or AllPill
FMatch = FPill or AllPill
Wall = BaseWall or DropWall1 or DropWall2 or DropWall3 or DropWall4
Item = Pill or Debris or Wall or Player
Heavy = Pill or Player
Dropping = Marked or DropMarker
DropMix1 = APill or BPill or CPill or DPill or EPill
DropMix2 = APill or BPill or CPill or DPill or EPill or GemPill
DropMix3 = APill or BPill or CPill or DPill or EPill or NoPill
DropMix4 = APill or BPill or CPill or DPill or EPill or FPill or GemPill
DropMix5 = APill or BPill or CPill or DPill or EPill or FPill
DropWallMarked = DropWall1 or DropWall3

=======
SOUNDS
=======

sfx0 54236904 (illegal)
sfx1 5160507 (swap)
sfx2 19008103 (allpill)
sfx3 50665503 (crush 3)
sfx4 80820507 (land)
sfx5 2030908 (blast)
sfx6 3032303 (bomb)
sfx7 83704102 (dead)
sfx8 7194508 (gem collect)
EndLevel 16709508 (win)

================
COLLISIONLAYERS
================


Collect, StartCount, StartGem
Background
OldPos, CountTray, GemTray
Player, Wall, Pill, Empty, Count, DeadPlayer, Bomb, Init
Debris, Marked, DropMarker

======
RULES
======

(init)
[ DropWall1 ] [ Init ] -> [ DropWall1 ] [ random DropMix1 Marked ]
[ DropWall2 ] [ Init ] -> [ DropWall2 ] [ random DropMix1 ]
[ DropWall3 ] [ Init ] -> [ DropWall3 ] [ random DropMix1 Marked ]
[ DropWall4 ] [ Init ] -> [ DropWall4 ] [ random DropMix5 ]

(debris clean up)
[ Debris2 ] -> [ Empty ] again
[ Debris1 ] -> [ Debris2 ] again

(player - pill swapping)
[ > Player | Pill ] -> [ Pill OldPos | Player ] sfx1
[ Player Marked | OldPos ] -> [ Player | OldPos Marked ]

(blocked move)
[ > Player | No Pill ] -> [ Player | ] sfx0

(pill combos)
[ AMatch | AMatch | AMatch ] -> [ AMatch Collect | AMatch Collect | AMatch Collect ]
[ BMatch | BMatch | BMatch ] -> [ BMatch Collect | BMatch Collect | BMatch Collect ]
[ CMatch | CMatch | CMatch ] -> [ CMatch Collect | CMatch Collect | CMatch Collect ]
[ DMatch | DMatch | DMatch ] -> [ DMatch Collect | DMatch Collect | DMatch Collect ]
[ EMatch | EMatch | EMatch ] -> [ EMatch Collect | EMatch Collect | EMatch Collect ]
[ FMatch | FMatch | FMatch ] -> [ FMatch Collect | FMatch Collect | FMatch Collect ]
[ NoPill | NoPill | NoPill ] -> [ NoPill Collect | NoPill Collect | NoPill Collect ]

(bomb activate)
[ OldPos Bomb ] -> sfx5
up [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
right [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
down [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
left [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
[ OldPos Bomb ] -> [ OldPos Empty ]

(blast)
up [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
right [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
down [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
left [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
[ > Collect ] -> [ Collect ]
[ GemPill Collect ] -> [ GemPill ]

(reward matches)
(junction)
Right [ Collect | Collect ] -> [ > Collect | > Collect ]
Down [ Collect | Collect ] -> [ > Collect | > Collect ]
[ Down Collect | Right Collect ] [ Collect OldPos ] -> [ Collect | Collect ] [ Bomb OldPos ] sfx6
(4: create AllPill)
[ MatchPill Collect | MatchPill Collect | MatchPill Collect | MatchPill Collect ] [ Collect OldPos ] -> [ MatchPill Collect | MatchPill Collect | MatchPill Collect | MatchPill Collect ] [ AllPill OldPos ] sfx2

(count moves)
(subtract on move)
random right [ OldPos ] [ Count | No Count ] -> [ OldPos ] [ | ]
(fill on Debris)
[ Collect ] [ CountTray ] -> [ Collect ] [ CountTray Count ]

(dead?)
[ DeadPlayer ] -> cancel
[ No Count StartCount CountTray ] [ Player ] -> [ No Count StartCount CountTray ] [ DeadPlayer ] sfx7
[ Player | NoPill Collect ] -> [ DeadPlayer | NoPill ]
[ DeadPlayer ] [ CountTray Count ] -> [ DeadPlayer ] [ CountTray ] sfx7

(destroy matched)
[ APill Collect ] -> [ Debris1 ] sfx3 again
[ BPill Collect ] -> [ Debris1 ] sfx3 again
[ CPill Collect ] -> [ Debris1 ] sfx3 again
[ DPill Collect ] -> [ Debris1 ] sfx3 again
[ EPill Collect ] -> [ Debris1 ] sfx3 again
[ FPill Collect ] -> [ Debris1 ] sfx3 again
[ AllPill Collect ] -> [ Debris1 ] sfx3 again
[ Player ] [ NoPill Collect ] -> [ Player ] [ Debris1 ] sfx3 again

(destroy NoPills)
down [ NoPill | Wall ] -> [ Debris1 | Wall ] again

(collect gems)
down [ GemPill | Wall ] -> [ GemPill Collect | Wall ]
[ GemPill Collect ] [ StartGem No GemPill ] -> [ Debris1 ] [ StartGem GemPill ] again sfx8
right [ GemPill Collect ] [ GemPill GemTray | No GemPill GemTray ] -> [ Debris1 ] [ GemPill GemTray | GemPill GemTray ] again sfx8

(drop)
[ Heavy No Dropping ] -> [ Heavy DropMarker ]
down [ Heavy Dropping | Empty ] -> [ Empty | Heavy Dropping ]
[ DropMarker ] -> [ ]
down [ DropWall1 | Empty ] -> [ DropWall1 | random DropMix1 ] again
down [ DropWall2 | Empty ] -> [ DropWall2 | random DropMix2 ] again
down [ DropWall3 | Empty ] -> [ DropWall3 | random DropMix3 ] again
down [ DropWall4 | Empty ] -> [ DropWall4 | random DropMix4 ] again

(gem drop win)
right [ GemPill GemTray | Wall ] -> win

[ OldPos ] -> [ ]

==============
WINCONDITIONS
==============

No Marked
Some DropWallMarked

=======
LEVELS
=======

message collect orbs by matching 3
message match 3 to restore move-energy
message level 1: collect all marked orbs

wuuuuu#
#jjjjj#
#iiiii#
#iiiii#
#iiiii#
#iiiii#
#ii@ii#
#######

message level 2: collect all marked orbs

wuuuuuu#
#jjjjjj#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iii@ii#
########

message collect gray gems by getting them to the bottom
message level 3: collect 8 gems

oqqqqqqq#
wuuuuuuu#
#kkkkkkk#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iii@iii#
#########

message if you are next to 3 matching skulls you die
message skulls can be destroyed by getting them to the bottom
message level 4: collect all marked orbs

wuuuuuu#
#llllll#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iii@ii#
########

message level 5: collect 7 gems

oqqqqqqq#
wuuuuuuu#
#mmmmmmm#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iii@iii#
#########

message thanks for playing



title Extended Body Example: 1 Player, 1 Extended Object
author increpare
homepage www.puzzlescript.net

(
    Example for
    https://www.puzzlescript.net/Documentation/rigidbodies.html#one_one
)

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]
[ > Crate ] [ stationary Crate ] -> [ > Crate ] [ > Crate ]
[ > Crate | Wall ] -> cancel

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======

######
#....#
#.#..#
#.*@.#
#.O@.#
#.p..#
######


title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

debug

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======


####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..


######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


title One rigid body and wee crates
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BigBlock
Orange
00000
0...0
0...0
0...0
00000

LittleBlock
Orange
.....
.000.
.0.0.
.000.
.....


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = BigBlock
@ = BigBlock and Target
b = LittleBlock
O = Target

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, BigBlock, LittleBlock

======
RULES
======

[ > Player | LittleBlock ] -> [ > Player | > LittleBlock ]

[ > LittleBlock | LittleBlock ] -> [ > LittleBlock | > LittleBlock ]

rigid [ > LittleBlock | BigBlock ] -> [ > LittleBlock | > BigBlock ]
+ rigid [ > Player | BigBlock ] -> [ > Player | > BigBlock ]
+ rigid [ moving BigBlock | BigBlock ] -> [ moving BigBlock | moving BigBlock ]
+ [ > BigBlock | LittleBlock ] -> [ > BigBlock | > LittleBlock ]
+ [ > LittleBlock | LittleBlock ] -> [ > LittleBlock | > LittleBlock ]


==============
WINCONDITIONS
==============

=======
LEVELS
=======

...............
..........#....
...............
..#***bb.......
..p*...........
...**......#...
..b*...#.......
...............
...............
..#......b.....
.........#.....
...............
...............



title BROKEN Naive Extended Bodies
author increpare
homepage www.puzzlescript.net

(
naive/broken implementation of rigid bodies
see https://www.puzzlescript.net/Documentation/rigidbodies.html#Introduction
)

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BigBlock
Orange Yellow
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = BigBlock
@ = BigBlock and Target
O = Target


=======
SOUNDS
=======

BigBlock MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, BigBlock

======
RULES
======

[ >  Player | BigBlock ] -> [  >  Player | > BigBlock  ]
[ moving BigBlock | BigBlock ] -> [moving BigBlock|moving BigBlock]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

.#######.
#.......#
#..***..#
#..p*...#
#.......#
.#######.


title 2D Whale World
author increpare
homepage www.increpare.com

background_color orange
text_color darkblue

color_palette mastersystem

run_rules_on_level_start
require_player_movement

(
    
This game is a port of the Whale section of my puzzle game English Country Tune (www.englishcountrytune.com), in only 8 lines of code.

)

========
OBJECTS
========

Background
blue

Void
orange

Player
lightblue

Whale
brown
00000
00000
00000
00000
00000

Wall
black
00000
0...0
0...0
0...0
00000

HBeam
yellow
.....
.....
0.0.0
.....
.....

VBeam
yellow
..0..
.....
..0..
.....
..0..

=======
LEGEND
=======

Beam = HBeam or VBeam
. = Background
# = Wall
P = Player
W = Whale
0 = Void

=========
SOUNDS
=========

whale destroy 62981708
player move 69405107
whale move 32823307
endlevel 99636708
restart 92555303
startgame 60661308
CloseMessage 123434
ShowMessage 123434

================
COLLISIONLAYERS
================

Background
void
Player, Wall, Whale
HBeam
VBeam

======
RULES
======

(While we allow whales to move onto the void, player's aren't)
[ > player | void ] -> [ player | void ] 

(Beams detect motion)
horizontal [ > Player | VBeam ] -> [ > Player | > VBeam ] 
vertical [ > Player | HBeam ] -> [ > Player | > HBeam ] 

(If beams detected motion, transfer that to the whales)
[ Whale | ... | perpendicular Beam ] -> [ perpendicular Whale | ... | perpendicular Beam ] 

(Remove whales, if necessary)
late [ Whale Void ] -> [ Void ] 

(Remove beams)
[ Beam ] -> [ ] 

(Place HVeams and VBeams)
late horizontal [ Whale | ... | ] -> [ Whale | ... | HBeam ] 
late vertical [ Whale | ... | ] -> [ Whale | ... | VBeam ] 

==============
WINCONDITIONS
==============

no Whale

=======
LEVELS
=======

message Push a whale off to free it.

0000000000000000
0########0000000
0.......#0000000
0###.W..###00000
0.........#00000
0#####.##.###000
0000#...#...#000
0000#...#...#000
0000#...#...###0
0000#.P.#.....#0
0000#...#.....#0
0000#####...W##0
0000000000....#0
0000000000#####0
0000000000000000

message level 2 of 8

00000000000
0000####000
000##..##00
0###....##0
0#.......#0
0###.W.###0
000#P...000
000#####000
00000000000

message level 3 of 8

0000000000000000
00###00000000000
00#.#####0000000
00#.#...##000000
00#......#000000
00#..##.#######0
00#..#........#0
00#..#........#0
0##..######...#0
0#........#.W.#0
0##.......#..P#0
00######..#####0
00000000..000000
0000000000000000

message level 4 of 8

0000000000000000
000000#########0
0######.......#0
0.............#0
0.....#.#####.#0
0######.#.....#0
00000##.#...P.#0
00000#........#0
00000##.#.W...#0
000000#.......#0
000000###.#...#0
00000000#######0
0000000000000000

message level 5 of 8

00000000000000000
0000############0
0000#.#........#0
0000#..........#0
0####..###.....#0
0......#.#.....#0
0####..#W#.#W#.#0
0..........#.#.#0
0####.....P###.#0
0...#.#........#0
0##...##########0
00#####0000000000
00000000000000000

message level 6 of 8

00000000000000000
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.....#0
0000000###...###0
0000000#.#...#000
0000000#.#.#.#000
0#######.#.#.#000
0#...........#000
0#.#.W...W...#000
0#...........#000
0#.....P.....#000
0#...........#000
0#############000
00000000000000000

message level 7 of 8

000000000#000000
00000####.####00
0####.........#0
0........#....#0
0####....W....#0
0000#.........#0
0000#.#W.P.W#..#
0####.........#0
0........W....#0
0####....#....#0
00000#........#0
000000########00
0000000000000000

message level 8 of 8

00000000000
0########00
0#...#..#00
0##.....000
0#......#00
0#..WW..##0
0#..WW...#0
0##...P.##0
0#...#.##00
0#######000
00000000000

message all the 2d whales are freed


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Sokoban Example
author ExampleAuthor

========
OBJECTS
========

Background
LightBlue
00000
00000
00000
00000
00000

Wall
DarkGrey Grey
11111
11111
11111
11111
11111

Player
Yellow Black
..0..
.010.
00100
.010.
..0..

Crate
Brown
.....
.111.
.111.
.111.
.....

Target
Green
.....
..2..
.222.
..2..
.....

CrateOnTarget
DarkGreen LightGreen
.....
.121.
.111.
.121.
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
C = Crate
T = Target
O = CrateOnTarget

=======
SOUNDS
=======

Crate MOVE 34391103

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate, CrateOnTarget

======
RULES
======

[ > Player | Crate ] -> [ > Player | > Crate ]
[ Crate | Target ] -> [ CrateOnTarget | Target ]
[ Player | CrateOnTarget ] -> [ > Player | > Crate ]

==============
WINCONDITIONS
==============

All CrateOnTarget on Target

=======
LEVELS
=======

#######
#.....#
#..P..#
#.CTC.#
#####.#

```
produced the following console output:
=================================
line 35 : Trying to access color number 1 from the color palette of sprite CRATE, but there are only 1 defined in it.
line 36 : Trying to access color number 1 from the color palette of sprite CRATE, but there are only 1 defined in it.
line 37 : Trying to access color number 1 from the color palette of sprite CRATE, but there are only 1 defined in it.
line 43 : Trying to access color number 2 from the color palette of sprite TARGET, but there are only 1 defined in it.
line 44 : Trying to access color number 2 from the color palette of sprite TARGET, but there are only 1 defined in it.
line 45 : Trying to access color number 2 from the color palette of sprite TARGET, but there are only 1 defined in it.
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.