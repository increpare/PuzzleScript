SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title IceCrates
author Tyler Glaiel
homepage twitter.com/tylerglaiel
run_rules_on_level_start true
noaction

========
OBJECTS
========

Background
DarkBlue White LightBlue
22112
21122
11222
12221
22211




Wall_0000
DarkBlue Gray DarkGray DarkGray Gray
10001
00000
00000
00000
30003

Wall_0001
DarkBlue Gray DarkGray DarkGray Gray
11111
00000
00000
00000
30003

Wall_0010
DarkBlue Gray DarkGray DarkGray Gray
10002
00002
00002
00002
30002

Wall_0011
DarkBlue Gray DarkGray DarkGray Gray
11111
00002
00002
00002
30002

Wall_0100
DarkBlue Gray DarkGray DarkGray Gray
10001
00000
00000
00000
33333

Wall_0101
DarkBlue Gray DarkGray DarkGray Gray
11111
00000
00000
00000
33333

Wall_0110
DarkBlue Gray DarkGray DarkGray Gray
10002
00002
00002
00002
33333

Wall_0111
DarkBlue Gray DarkGray DarkGray Gray
11111
00002
00002
00002
33333

Wall_1000
DarkBlue Gray DarkGray DarkGray Gray
40001
40000
40000
40000
40003

Wall_1001
DarkBlue Gray DarkGray DarkGray Gray
11111
40000
40000
40000
40003

Wall_1010
DarkBlue Gray DarkGray DarkGray Gray
40002
40002
40002
40002
40002

Wall_1011
DarkBlue Gray DarkGray DarkGray Gray
11111
40002
40002
40002
40002

Wall_1100
DarkBlue Gray DarkGray DarkGray Gray
40001
40000
40000
40000
33333

Wall_1101
DarkBlue Gray DarkGray DarkGray Gray
11111
40000
40000
40000
33333

Wall_1110
DarkBlue Gray DarkGray DarkGray Gray
40002
40002
40002
40002
33333

Wall_1111
DarkBlue Gray DarkGray DarkGray Gray
11111
40002
40002
40002
33333



PlayerStill
Red Orange DarkGrey Gray Black
.000.
01110
04140
01210
.333.

PlayerL
Red Orange DarkGrey Gray Black
.000.
04110
01410
02110
.333.

PlayerR
Red Orange DarkGrey Gray Black
.000.
01140
01410
01120
.333.

PlayerU
Red Orange DarkGrey Gray Black
.000.
04140
01110
01210
.333.

PlayerD
Red Orange DarkGrey Gray Black
.000.
01110
01110
04240
.333.


Crate
Brown Yellow Orange
11111
10002
10002
10002
22222


Water1
Blue LightBlue
00000
01100
10011
00000
01100

Water2
Blue LightBlue
00000
00110
11001
00000
00110

Water3
Blue LightBlue
00000
00011
11100
00000
00011

Water4
Blue LightBlue
00000
10001
01110
00000
10001

Water5
Blue LightBlue
00000
11000
00111
00000
11000

Water6
Blue LightBlue
00000
01100
10011
00000
01100

FilledWater
LightBrown LightBlue White
11111
10002
10002
10002
22222

Goal
Black Green DarkGreen
..12.
.112.
1112.
...2.
...2.



StillCrate
Orange



=======
LEGEND
=======

Wall = Wall_0000 or Wall_0001 or Wall_0010 or Wall_0011 or Wall_0100 or Wall_0101 or Wall_0110 or Wall_0111 or Wall_1000 or Wall_1001 or Wall_1010 or Wall_1011 or Wall_1100 or Wall_1101 or Wall_1110 or Wall_1111

Water = Water1 or Water2 or Water3 or Water4 or Water5 or Water6

. = Background
# = Wall_1111
P = PlayerStill
* = Crate
W = Water1
G = Goal
(@ = Crate and Target
O = Target)

Player = PlayerStill or PlayerL or PlayerR or PlayerU or PlayerD
Obstacle = Wall or StillCrate or Water

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
FilledWater
Goal
(Target)
Player, Wall, Crate, StillCrate, Water

======
RULES
======

(     0001

1000         0010

      0100
)

(make pretty walls)
Right [Wall | Wall_1111 | Wall] -> [Wall | Wall_0101 | Wall]
Right [Wall_1111 | Wall] -> [Wall_1101 | Wall]
Right [Wall | Wall_1111] -> [Wall | Wall_0111]


Down [Wall | Wall_1111 | Wall] -> [Wall | Wall_1010 | Wall]
Down [Wall_1111 | Wall] -> [Wall_1011 | Wall]
Down [Wall | Wall_1111] -> [Wall | Wall_1110]


Down [Wall | Wall_0101 | Wall] -> [Wall | Wall_0000 | Wall]
Down [Wall_0101 | Wall] -> [Wall_0001 | Wall]
Down [Wall | Wall_0101] -> [Wall | Wall_0100]


Down [Wall | Wall_1101 | Wall] -> [Wall | Wall_1000 | Wall]
Down [Wall_1101 | Wall] -> [Wall_1001 | Wall]
Down [Wall | Wall_1101] -> [Wall | Wall_1100]


Down [Wall | Wall_0111 | Wall] -> [Wall | Wall_0010 | Wall]
Down [Wall_0111 | Wall] -> [Wall_0011 | Wall]
Down [Wall | Wall_0111] -> [Wall | Wall_0110]


(animate water)
[Water5]->[Water6]
[Water4]->[Water5]
[Water3]->[Water4]
[Water2]->[Water3]
[Water1]->[Water2]

[Water6]->[Water1]


(game logic)

[ LEFT  PlayerStill ] -> [ PlayerL ]
LEFT [ PlayerL | Crate ] -> [ PlayerL | LEFT Crate ] again
LEFT [ > Crate | Crate ] -> [ > Crate | > Crate ] again
LEFT [ > Crate | Water ] -> [ | FilledWater]
LEFT [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
LEFT [ PlayerL | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerL ] -> [ LEFT PlayerL ] again

[ RIGHT  PlayerStill ] -> [ PlayerR ]
RIGHT [ PlayerR | Crate ] -> [ PlayerR | RIGHT Crate ] again
RIGHT [ > Crate | Crate ] -> [ > Crate | > Crate ] again
RIGHT [ > Crate | Water ] -> [ | FilledWater]
RIGHT[ > Crate | Obstacle ] -> [StillCrate | Obstacle]
RIGHT [ PlayerR | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerR ] -> [ RIGHT PlayerR ] again

[ UP  PlayerStill ] -> [ PlayerU ]
UP [ PlayerU | Crate ] -> [ PlayerU | UP Crate ] again
UP [ > Crate | Crate ] -> [ > Crate | > Crate ] again
UP [ > Crate | Water ] -> [ | FilledWater]
UP [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
UP [ PlayerU | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerU ] -> [ UP PlayerU ] again

[ DOWN  PlayerStill ] -> [ PlayerD ]
DOWN [ PlayerD | Crate ] -> [ PlayerD | DOWN Crate ] again
DOWN [ > Crate | Crate ] -> [ > Crate | > Crate ] again
DOWN [ > Crate | Water ] -> [ | FilledWater]
DOWN [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
DOWN [ PlayerD | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerD ] -> [ DOWN PlayerD ] again

[StillCrate]->[Crate]


==============
WINCONDITIONS
==============

Some PlayerStill on Goal

=======
LEVELS
=======



message Level 1: Get to the Goal

#######
#g.#..#
#.....#
#.....#
#.#.p.#
###...#
#######

message Level 2: You must land ON the goal

#########
#########
#...g...#
#.......#
#....#p.#
#.......#
#....#..#
##....#.#
#########

message Level 3: Push Crates

#########
####.####
#.......#
#..#...g#
##......#
#...*.###
#.....###
###....p#
..##....#
...######


message Level 4: Fill the Water Hole

###########
#.........#
####......#
#g..W..p..#
####...#..#
#..#***.#.#
#..#......#
#........##
##...##..##
###########

message Level 5

#############
#......#....#
#...........#
#........p..#
##....w.....#
#..**wgw....#
#.....w....##
#.....*.....#
#.....*.....#
#...........#
#....#......#
#############

message Level 6

##############.
#...###......#.
#.#...#....####
#.#...w..**...#
#.....#.......#
#####w#......##
.##..........#.
.##..........#.
###.*........#.
.###.g....p..#.
.#.##........#.
##..##.......#.
.#############.

message You are win congratulations


title Sokobond: The Demake
author Jonah Ostroff
homepage www.sokobond.com
text_color #202020
background_color #FDFDFD
key_repeat_interval 0.25
run_rules_on_level_start
noaction
youtube 2R0sTlruOZc

========
OBJECTS
========

Background
#FFFFFF #F8F8F8
00000
01010
00000
01010
00000

Player
#FFBBEE
00000
0...0
0...0
0...0
00000

Wall
Yellow White
00000
00000
00000
00000
00000

Hydrogen
Red Black
.....
.111.
.101.
.111.
.....

Nitrogen
Green Black
.....
.111.
.101.
.111.
.....

Oxygen
Blue Black
.....
.111.
.101.
.111.
.....

Carbon
Yellow Black
.....
.111.
.101.
.111.
.....

Helium
White Black
.....
.111.
.101.
.111.
.....

1Electron
LightGray
.....
.0...
.....
.....
.....

2Electron
LightGray
.....
...0.
.....
.0...
.....

3Electron
LightGray
.....
.0.0.
.....
.0...
.....

4Electron
LightGray
.....
.0.0.
.....
.0.0.
.....

BondU
Black
..0..
.....
.....
.....
.....

BondL
Black
.....
.....
0....
.....
.....

BondR
Black
.....
.....
....0
.....
.....

BondD
Black
.....
.....
.....
.....
..0..


BondUL
Black
..0..
.....
0....
.....
.....

BondUR
Black
..0..
.....
....0
.....
.....

BondUD
Black
..0..
.....
.....
.....
..0..

BondLR
Black
.....
.....
0...0
.....
.....

BondLD
Black
.....
.....
0....
.....
..0..

BondRD
Black
.....
.....
....0
.....
..0..

BondULR
Black
..0..
.....
0...0
.....
.....

BondULD
Black
..0..
.....
0....
.....
..0..

BondURD
Black
..0..
.....
....0
.....
..0..

BondLRD
Black
.....
.....
0...0
.....
..0..

BondULRD
Black
..0..
.....
0...0
.....
..0..

Temp1
Red

Temp2 (These are placeholders for various things.)
Green

Temp3
Blue

Temp4
Yellow

=======
LEGEND
=======

Atom = Hydrogen or Oxygen or Nitrogen or Carbon or Helium
Orbital = 1Electron or 2Electron or 3Electron or 4Electron
UBond = BondU or BondUL or BondUR or BondUD or BondULR or BondULD or BondURD or BondULRD
LBond = BondL or BondUL or BondLR or BondLD or BondULR or BondULD or BondLRD or BondULRD
RBond = BondR or BondUR or BondLR or BondRD or BondULR or BondURD or BondLRD or BondULRD
DBond = BondD or BondUD or BondLD or BondRD or BondULD or BondURD or BondLRD or BondULRD
1Bond = BondU or BondL or BondR or BondD
2Bond = BondUL or BondUR or BondUD or BondLR or BondLD or BondRD
3Bond = BondULR or BondULD or BondURD or BondLRD
Bond = 1Bond or 2Bond or 3Bond or BondULRD
Temps = Temp1 or Temp2 or Temp3 or Temp4
AtomStuff = Bond or Orbital

. = Background
# = Wall
H = Hydrogen and 1Electron
O = Oxygen and 2Electron
N = Nitrogen and 3Electron
C = Carbon and 4Electron
E = Helium
0 = Helium  and Player
1 = Hydrogen and 1Electron and Player
2 = Oxygen and 2Electron and Player
3 = Nitrogen and 3Electron and Player
4 = Carbon and 4Electron and Player
P = Player

=======
SOUNDS
=======

Sfx1 64050702 (Bonding sound)
EndLevel 96545300 (End level)

================
COLLISIONLAYERS
================

Background
Player
Bond
Wall, Atom
Orbital
Temps

======
RULES
======

(This is the old way I did movement, and it was super inefficient.)
([> Player Atom] -> [> Player > Atom]

Up [ Moving Atom UBond | Atom] -> [ Moving Atom UBond | Moving Atom]
+ Left [ Moving Atom LBond | Atom] -> [ Moving Atom LBond | Moving Atom]
+ Right [ Moving Atom RBond | Atom] -> [ Moving Atom RBond | Moving Atom]
+ Down [ Moving Atom DBond | Atom] -> [ Moving Atom DBond | Moving Atom]
+ [> Atom | Atom] -> [> Atom | > Atom])

[Up Player] -> [Up Player Temp1]
[Left Player] -> [Left Player Temp2]
[Right Player] -> [Right Player Temp3]
[Down Player] -> [Down Player Temp4]

Up [Temps UBond | no Temps] -> [Temps Ubond | Temps]
+ Left [Temps LBond | no Temps] -> [Temps Lbond | Temps]
+ Right [Temps RBond | no Temps] -> [Temps Rbond | Temps]
+ DOwn [Temps DBond | no Temps] -> [Temps Dbond | Temps]
+ Up [Temp1 | Atom no Temp1] -> [Temp1 | Atom Temp1]
+ Left [Temp2 | Atom no Temp2] -> [Temp2 | Atom Temp2]
+ Right [Temp3 | Atom no Temp3] -> [Temp3 | Atom Temp3]
+ Down [Temp4 | Atom no Temp4] -> [Temp4 | Atom Temp4]

[Temp1 Atom] -> [Up Atom]
[Temp2 Atom] -> [Left Atom]
[Temp3 Atom] -> [Right Atom]
[Temp4 Atom] -> [Down Atom]

[ > Atom | Wall] -> Cancel

[ > Atom AtomStuff] -> [ > Atom > AtomStuff]

Late Right [Orbital no Temps no RBond|Orbital no Temps no LBond] -> [Orbital Temp1|Orbital Temp2 Sfx1] (Bond horizontally.)
+ Late [Temp1 no Bond] -> [Temp3 BondR]
+ Late [Temp1 BondU] -> [Temp3 BondUR]
+ Late [Temp1 BondL] -> [Temp3 BondLR]
+ Late [Temp1 BondD] -> [Temp3 BondRD]
+ Late [Temp1 BondUL] -> [Temp3 BondULR]
+ Late [Temp1 BondUD] -> [Temp3 BondURD]
+ Late [Temp1 BondLD] -> [Temp3 BondLRD]
+ Late [Temp1 BondULD] -> [Temp3 BondULRD]
+ Late [Temp2 no Bond] -> [Temp3 BondL]
+ Late [Temp2 BondU] -> [Temp3 BondUL]
+ Late [Temp2 BondR] -> [Temp3 BondLR]
+ Late [Temp2 BondD] -> [Temp3 BondLD]
+ Late [Temp2 BondUR] -> [Temp3 BondULR]
+ Late [Temp2 BondUD] -> [Temp3 BondULD]
+ Late [Temp2 BondRD] -> [Temp3 BondLRD]
+ Late [Temp2 BondURD] -> [Temp3 BondULRD]
+ Late [Temp3 1Electron] -> []
+ Late [Temp3 2Electron] -> [1Electron]
+ Late [Temp3 3Electron] -> [2Electron]
+ Late [Temp3 4Electron] -> [3Electron]

Late Down [Orbital no Temps no DBond|Orbital no Temps no UBond] -> [Orbital Temp1|Orbital Temp2 Sfx1] (Bond vertically.)
+ Late [Temp1 no Bond] -> [Temp3 BondD]
+ Late [Temp1 BondU] -> [Temp3 BondUD]
+ Late [Temp1 BondL] -> [Temp3 BondLD]
+ Late [Temp1 BondR] -> [Temp3 BondRD]
+ Late [Temp1 BondUL] -> [Temp3 BondULD]
+ Late [Temp1 BondUR] -> [Temp3 BondURD]
+ Late [Temp1 BondLR] -> [Temp3 BondLRD]
+ Late [Temp1 BondULR] -> [Temp3 BondULRD]
+ Late [Temp2 no Bond] -> [Temp3 BondU]
+ Late [Temp2 BondL] -> [Temp3 BondUL]
+ Late [Temp2 BondR] -> [Temp3 BondUR]
+ Late [Temp2 BondD] -> [Temp3 BondUD]
+ Late [Temp2 BondLR] -> [Temp3 BondULR]
+ Late [Temp2 BondLD] -> [Temp3 BondULD]
+ Late [Temp2 BondRD] -> [Temp3 BondURD]
+ Late [Temp2 BondLRD] -> [Temp3 BondULRD]
+ Late [Temp3 1Electron] -> []
+ Late [Temp3 2Electron] -> [1Electron]
+ Late [Temp3 3Electron] -> [2Electron]
+ Late [Temp3 4Electron] -> [3Electron]

==============
WINCONDITIONS
==============

No Orbital

=======
LEVELS
=======

Message This is a demake of Sokobond by Alan Hazelden and Harry Lee.

Message Get the full version at www.sokobond.com!

#########
####....#
####....#
#....#H.#
#...O#..#
#.1.....#
#....####
#########

Message Water atoms are icosahedral.

######
#H..O#
#....#
#1.###
######

Message The blue tint seen in large bodies of water comes from the pigment in the oxygen atoms.

########
###...##
#2.H.H.#
###...##
########

Message The Earth's surface and the human body are both 70% water. That CAN'T be a coincidence, right?

#######
#..O..#
#..#..#
#.1#H.#
#..#..#
#..O..#
#######

Message "One hydrogen per oxide" is defined as the speed at which atoms move.

#######
#.H.3.#
#.....#
#.H.H.#
#######

Message Ammonia is an inflammatory condition of the lungs.

#######
#.....#
#.....#
#H#H#H#
#.....#
#..3..#
#######

Message Hang on, I was thinking of "pneumonia".

#########
####4####
###...###
##.H.H.##
#.......#
##.H.H.##
###...###
####.####
#########

Message 90% of all the methane in the world is produced in Arizona.

#########
##H...H##
#...4...#
##H...H##
#########

Message Methane contains the name "Ethan". Do you think it was discovered by a guy named Ethan?

########
#......#
#...H..#
#O.H..3#
#...H..#
#......#
########

Message Hydroxylamine contains almost every vowel of the alphabet almost exactly once.

#########
#.......#
#..H.H..#
#.2...C.#
#..H.H..#
#.......#
#########

Message Methanol occurs naturally in peppermint oils.

#########
#.......#
#.1...E.#
###.H.###
###...###
###.O.###
#########

Message Helium is named after the Greek god Helios, who first discovered its existence.

#########
#.......#
#.E.E.E.#
###H.1###
###.H.###
###...###
###.N.###
#########

Message Inhaling helium contracts the ear drum, causing pitches to sound higher. Your voice is perceived normally by everyone else.

#######
###..##
##..H.#
#..N..#
#.H..H#
##..0.#
#######

Message The first helium balloons were used at the wedding of Queen Victoria and Prince Albert, popularizing the term "noble gas".

#######
#.....#
#..N..#
#..0..#
#H.H.H#
#.#.#.#
#.....#
#######

Message Helium does not form chemical bonds with other elements, but it's the bonds of friendship that really matter.

########
#......#
#...H#N#
#......#
##H#H.0#
##.....#
####...#
########

Message Scientists have been searching for centuries to discover the missing elements between hydrogen and helium on the periodic table.

Message Thanks for playing! Go get the full version, which has lots of cool stuff that I couldn't write in PuzzleScript: www.sokobond.com

title Ebony & Ivory
author Guilherme Töws
homepage zarat.us

========
OBJECTS
========

Background
Purple

Gray
GRAY

White
WHITE

Black
BLACK

PlayerRed
Red
.....
.000.
.000.
.000.
.....

PlayerGold
Yellow
.....
.000.
.000.
.000.
.....


=======
LEGEND
=======

. = White
, = Black
# = Gray
: = PlayerRed and White
; = PlayerRed and Black
Player = PlayerRed or PlayerGold

=======
SOUNDS
=======

SFX0 72488907

================
COLLISIONLAYERS
================

Background
Black, White, Gray
Player

======
RULES
======

[ PlayerGold ] -> [ PlayerRed ]
[ >  Player White | Black ] -> [  > Player White | > Black ]
[ >  Player Black | White ] -> [  > Player Black | > White ]
[ > Black | White ] -> [ White | Black ] SFX0
[ > White | Black ] -> [ Black | White ] SFX0
[ >  Player White |  Black ] -> [  Player White |  Black ]
[ >  Player Black |  White ] -> [  Player Black |  White ]
[ >  Player |  Gray ] -> [  Player |  Gray ]
late [ Player | PlayerRed ] -> [ Player | PlayerGold ]

==============
WINCONDITIONs
==============

No PlayerRed

=======
LEVELS
=======

########
#..,,,,#
#.:.,.,#
#...,,,#
#.,.,;,#
#....,,#
########

(
level ideas
push battery horizontally
have to assemble and then disassemble a circuit, in order to complete it
add a piece to a circut, then break the circuit from another point
level that starts with a closed circuit
level with very dangerous + block
)
title Robot Arm
author increpare
homepage www.increpare.com

run_rules_on_level_start
color_palette c64

run_rules_on_level_start

norepeat_action

========
OBJECTS
========

Background .
darkblue

Player P
Black orange grey Blue
.111.
.111.
22222
13331
.3.3.

R0_Up 0
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Right
grey lightgrey
.111.
10001
10001
10001
.111.


R1_Up 1
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Right
grey lightgrey
.111.
10001
10001
10001
.111.


R2_Up 2
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Right
grey lightgrey
.111.
10001
10001
10001
.111.

R3 3
grey lightgrey
.....
..0..
.010.
..0..
.....

Connector_Up
grey lightgrey
.101.
.111.
.....
.....
.....

Connector_Down
grey lightgrey
.....
.....
.....
.111.
.101.

Connector_Left
grey lightgrey
.....
11...
01...
11...
.....

Connector_Right
grey lightgrey
.....
...11
...10
...11
.....

Moved
transparent

Parent
transparent

GrandParent
transparent

NewRot
transparent

NewRot2
transparent

force
transparent

explosion
red yellow
.101.
10101
01010
10101
.101.

explosionb
red yellow
.101.
10101
01010
10101
.101.

explosion2
yellow red
.101.
10101
01010
10101
.101.

Wall #
darkgrey grey lightgrey
00000
01110
01010
01110
00000

water ,
blue lightblue
00000
00010
00000
00000
01000

Fruit F
Red Green LightRed
..1..
.000.
00020
00000
.000.


FruitPicked G
Red Green LightRed grey grey
..4..
.030.
43334
00300
.040.

DeadFruit
black black black black black
..4..
.030.
43334
00300
.040.

EndPoint E
darkgreen Yellow black green
30003
02220
02220
02220
30003


=======
LEGEND
=======
R0 = R0_up or R0_down or R0_left or R0_right
R1 = R1_up or R1_down or R1_left or R1_right
R2 = R2_up or R2_down or R2_left or R2_right
RobotPiece = R0 or R1 or R2 or R3
* = RobotPiece or Player
connector = connector_up or connector_down or connector_left or connector_right

=======
SOUNDS
=======

sfx0 43004308 (explosion)
sfx1 69392707
sfx2 57370907 (push machine)
sfx3 62083508 (rotate machine)
sfx4 90419908 (grab)
sfx5 50782902 (drop in hole)
sfx6 76878101 (empty grab)
sfx7 13941101 (dead fruit)
sfx8 42541302 (release)
Player move 88476108
startgame 30513908
endlevel 5524308
endgame 5524308
showmessage 41852908
closemessage 41852908

================
COLLISIONLAYERS
================
Background
water
EndPoint
Player
Moved
Fruit
FRUITPICKED
deadfruit
R0_up, R0_down, R0_left, R0_right
R1_up, R1_down, R1_left, R1_right
R2_up, R2_down, R2_left, R2_right
connector_up
connector_down
connector_left
connector_right
R3
parent
GrandParent
newrot
newrot2
force
wall
explosion, explosion2, explosionb

======
RULES
======

[ connector ] -> [ ]

[ > player | fruit ] -> cancel

[ > player | water ] -> cancel

[ > player | ] -> [ > player | > force ]

[ > player | robotpiece | wall ] -> cancel

(place movement arrows)
up [ R0_Up | ] -> [ up R0_Up | up Parent ]
up [ R1_Up | ] -> [ up R1_Up | up Parent ]
up [ R2_Up | ] -> [ up R2_Up | up Parent ]

down [ R0_down | ] -> [ down R0_down | down Parent ]
down [ R1_down | ] -> [ down R1_down | down Parent ]
down [ R2_down | ] -> [ down R2_down | down Parent ]

left [ R0_left | ] -> [ left R0_left | left Parent ]
left [ R1_left | ] -> [ left R1_left | left Parent ]
left [ R2_left | ] -> [ left R2_left | left Parent ]

right [ R0_right | ] -> [ right R0_right | right Parent ]
right [ R1_right | ] -> [ right R1_right | right Parent ]
right [ R2_right | ] -> [ right R2_right | right Parent ]


( force propagation like this isn't very nice )
( [ > force < parent | ] -> [ < parent | > force ] )

[ R3 > force < parent ] [ > R0 ] [ v R1 ] [ R2 ] -> [ R3 < parent ] [ > R0 ] [ v R1 ] [ r2 > force ]
[ R3 > force < parent ] [ > R0 ] [ ^ R1 ] [ R2 ] -> [ R3 < parent ] [ > R0 ] [ ^ R1 ] [ r2 > force ]

[ > force < parent no R0] [R0]-> [ < parent ] [ > force R0 ]
[ > force R3 perpendicular parent ] [ R2 < parent ] [ R0 ] -> [ R3 perpendicular parent ] [ R2 < parent ] [ > force R0 ]

[ > force R2 perpendicular parent ] [ R1 < parent ] [ R0 ] -> [ R2 perpendicular parent ] [ R1 < parent ] [ > force R0 ]


[ > force moving R0 | ] -> [ | moving R0] sfx2

[ > force moving R1 perpendicular parent ] [ R0 ] -> [ moving R1 perpendicular parent ] [ > R0 ] sfx3
[ > force moving R2 perpendicular parent ] [ R1 ] -> [ moving R2 perpendicular parent ] [ > R1 ] sfx3
[ > force 		R3 perpendicular parent ] [ R2 ] -> [ R3 perpendicular parent ] [ > R2 ] sfx3


(rebuild arm)

(add new parents)

[ > R1 ] [ R2 ] -> [ > R1 ] [ R2 > NewRot ]
[ > R0 ] [ R1 ] [ R2 ] -> [ > R0 ] [ R1 > NewRot ] [ R2 > NewRot2 ]

[ > Parent R1 ] [ R2 ] -> [ > Parent R1 ] [ > GrandParent R2 ]

[ ^ Parent > NewRot > RobotPiece ] -> [ V RobotPiece ]
[ ^ Parent > NewRot v RobotPiece ] -> [ < RobotPiece ]
[ ^ Parent > NewRot < RobotPiece ] -> [ ^ RobotPiece ]
[ ^ Parent > NewRot ^ RobotPiece ] -> [ > RobotPiece ]

[ ^ Parent < NewRot > RobotPiece ] -> [ ^ RobotPiece ]
[ ^ Parent < NewRot v RobotPiece ] -> [ > RobotPiece ]
[ ^ Parent < NewRot < RobotPiece ] -> [ V RobotPiece ]
[ ^ Parent < NewRot ^ RobotPiece ] -> [ < RobotPiece ]


[ ^ GrandParent > NewRot2 > R2 ] -> [ V R2 ]
[ ^ GrandParent > NewRot2 v R2 ] -> [ < R2 ]
[ ^ GrandParent > NewRot2 < R2 ] -> [ ^ R2 ]
[ ^ GrandParent > NewRot2 ^ R2 ] -> [ > R2 ]

[ ^ GrandParent < NewRot2 > R2 ] -> [ ^ R2 ]
[ ^ GrandParent < NewRot2 v R2 ] -> [ > R2 ]
[ ^ GrandParent < NewRot2 < R2 ] -> [ V R2 ]
[ ^ GrandParent < NewRot2 ^ R2 ] -> [ < R2 ]

[ NewRot ] -> [ ]
[ NewRot2 ] -> [ ]
[ Parent ] -> [ ]
[ GrandParent ] -> [ ]


(change sprites)
[ up R0 ] -> [ up R0_Up ]
[ up R1 ] -> [ up R1_Up ]
[ up R2 ] -> [ up R2_Up ]

[ down R0 ] -> [ down R0_down ]
[ down R1 ] -> [ down R1_down ]
[ down R2 ] -> [ down R2_down ]

[ left R0 ] -> [ left R0_left ]
[ left R1 ] -> [ left R1_left ]
[ left R2 ] -> [ left R2_left ]

[ right R0 ] -> [ right R0_Right ]
[ right R1 ] -> [ right R1_Right ]
[ right R2 ] -> [ right R2_Right ]

(work from the base up when placing)
up [ up R0 | no R1 ] [ moving R1 ] -> [ up R0 | moving R1 ] [ ]
down [ down R0 | no R1 ] [ moving R1 ] -> [ down R0 | moving R1 ] [ ]
left [ left R0 | no R1 ] [ moving R1 ] -> [ left R0 | moving R1 ] [ ]
right [ right R0 | no R1 ] [ moving R1 ] -> [ right R0 | moving R1 ] [ ]

up [ up R1 | no R2 ] [ moving R2 ] -> [ up R1 | moving R2 ] [ ]
down [ down R1 | no R2 ] [ moving R2 ] -> [ down R1 | moving R2 ] [ ]
left [ left R1 | no R2 ] [ moving R2 ] -> [ left R1 | moving R2 ] [ ]
right [ right R1 | no R2 ] [ moving R2 ] -> [ right R1 | moving R2 ] [ ]


up [ up R2 | no R3 ] [ R3 ] -> [ up R2 | R3 ] [ ]
down [ down R2 | no R3 ] [ R3 ] -> [ down R2 | R3 ] [ ]
left [ left R2 | no R3 ] [ R3 ] -> [ left R2 | R3 ] [ ]
right [ right R2 | no R3 ] [ R3 ] -> [ right R2 | R3 ] [ ]




up [ up R2 | no R3 ] [ R3 ] -> [ R2_up | R3 ] [ ]
down [ down R2 | no R3 ] [ R3 ] -> [ R2_down | R3 ] [ ]
left [ left R2 | no R3 ] [ R3 ] -> [ R2_left | R3 ] [ ]
right [ right R2 | no R3 ] [ R3 ] -> [ R2_right | R3 ] [ ]


[ > RobotPiece no moved ] -> [ RobotPiece ]


up [ R0_Up | ] -> [ R0_Up connector_up | connector_down ]
up [ R1_Up | ] -> [ R1_Up connector_up | connector_down ]
up [ R2_Up | ] -> [ R2_Up connector_up | connector_down ]

down [ R0_down | ] -> [ R0_down connector_down | connector_up ]
down [ R1_down | ] -> [ R1_down connector_down | connector_up ]
down [ R2_down | ] -> [ R2_down connector_down | connector_up ]

left [ R0_left | ] -> [ R0_left connector_left | connector_right ]
left [ R1_left | ] -> [ R1_left connector_left | connector_right ]
left [ R2_left | ] -> [ R2_left connector_left | connector_right ]

right [ R0_right | ] -> [ R0_right connector_right | connector_left ]
right [ R1_right | ] -> [ R1_right connector_right | connector_left ]
right [ R2_right | ] -> [ R2_right connector_right | connector_left ]

[RobotPiece Wall no explosion no explosion2 ] -> [ RobotPiece Wall explosion ] sfx0

[ R0 R2 no explosion no explosion2] -> [ R0 R2 explosion ] sfx0
[ R0 R3 no explosion no explosion2 ] -> [ R0 r3 explosion ] sfx0
[ R1 R3 no explosion no explosion2 ] -> [ R1 R3 explosion ] sfx0

[ explosion2 ] -> [ explosionb ] again
[ explosion ] -> [ explosion2] again
[ explosionb ] -> [explosion] again

[ > player  | wall ] -> cancel

[FruitPicked ] [ R3 no FruitPicked ] -> [ ] [ R3 FruitPicked ]

[ action player ] [ R3 Fruit no fruitpicked ] -> [ player ] [ R3 Fruitpicked] sfx4
[ action player ] [ R3 fruitpicked no fruit ] -> [ player ] [ r3 fruit ] sfx8

[action player ] [ r3 no fruit no fruitpicked ] -> sfx6


[ fruit endpoint ] -> [endpoint] sfx5
[ fruit water ] -> [ deadfruit water ] sfx7
late [R0 water ] -> cancel
[R0 fruit ] -> cancel

==============
WINCONDITIONS
==============

no fruit
no fruitpicked
no deadfruit

=======
LEVELS
=======

message press x to grip and ungrip the mechanical arm
message put fruit in hole

message Level 1 of 3

###################
###################
###################
###..,........,.###
###..,...3....,.###
###..,...2....,.###
###.F,.E.1.,,,F,###
###..,...0....,.###
###..,..P.....,.###
###..,........,.###
###################
###################
###################

message Level 2 of 3

##############
##############
##############
###..3.....###
###..2.....###
###..1.,,,,###
###.E0.,...###
###....,FF.###
###.P..,...###
##############
##############
##############

message Level 3 of 3

###################
###################
###################
########........###
###..3.#...##.f.###
###..2..........###
###..1...#....#.###
###.e0..........###
###..p..#...#.f.###
#########.......###
###################
###################
###################

message congratulations


title Simple Action Example
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.


Blood
DarkRed red white
.01.0
.1202
2.0.1
02.1.
.1.0.

Sheep O
black white gray
..11.
01111
01112
.212.
.0.0.


=======
LEGEND
=======

. = Background
# = Wall
P = Player


=======
SOUNDS
=======


Sheep Create 76935307
SFx0 52519108

================
COLLISIONLAYERS
================

Background
Blood
Player, Wall, Sheep

======
RULES
======

random [ no Sheep ] -> [ Sheep ] again

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#################
#...............#
#...............#
#...............#
#...............#
#.......P.......#
#...............#
#...............#
#...............#
#################



USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Forest Journey
author YourName
homepage yourwebsite.com

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Wall
brown darkbrown
11111
11111
11111
11111
11111

Player
black white
.000.
00100
00100
00100
.000.

Treasure
gold yellow
.....
.000.
.0.0.
.000.
.....

Monster
red black
.....
.0.0.
00.00
.0.0.
.....

Hero
blue orange darkblue
.000.
03330
02320
03330
.000.

=======
LEGEND
=======

. = Background
# = Wall
P = Player
T = Treasure
M = Monster
H = Hero

=======
SOUNDS
=======

sfx0 67117309
sfx1 36772507

================
COLLISIONLAYERS
================

Background
Player, Wall, Treasure, Monster, Hero

======
RULES
======

[ Player | Treasure ] -> [ Player | Background ] sfx1

[ Player | Monster ] -> restart sfx0

[ > Player | Hero ] [ Monster | ... ] -> [ > Player | Background ] [ ... | Player ] sfx1

==============
WINCONDITIONS
==============

All Treasure on Background

=======
LEVELS
=======

#P.....
#..#..M
#..#..#
#..###.
#T.#TH#
########

message Collect all the treasure and avoid monsters!
#P..T..
#..#..M
#..#..#
#..###.
#T.#.H#
########


```
produced the following console output:
=================================
line 34 : Was looking for color for object TREASURE, got "gold " instead.
line 52 : Trying to access color number 3 from the color palette of sprite HERO, but there are only 3 defined in it.
line 53 : Trying to access color number 3 from the color palette of sprite HERO, but there are only 3 defined in it.
line 54 : Trying to access color number 3 from the color palette of sprite HERO, but there are only 3 defined in it.
line 107 : Maps must be rectangular, yo (In a level, the length of each row must be the same).
line 115 : Maps must be rectangular, yo (In a level, the length of each row must be the same).
line 90 : An ellipsis on the right must be matched by one in the corresponding place on the left.
line 90 : There's no point in putting an ellipsis at the very start or the end of a rule
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. Return your code in full, inside a ```plaintext code block.