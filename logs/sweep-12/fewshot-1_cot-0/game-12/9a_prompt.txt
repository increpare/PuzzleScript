SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Notsnake
author Terry Cavanagh
homepage www.distractionware.com

color_palette c64
require_player_movement

========
OBJECTS
========

Background
blue

Player
lightblue

Trail
purple

=======
LEGEND
=======

. = Background
P = Player
O = Trail

=======
SOUNDS
=======

startgame 50287705
sfx0 660507
sfx1 41058704
endgame 74955903

================
COLLISIONLAYERS
================

Background
Trail
Player

======
RULES
======

[ > Player | No Trail ] -> [ Trail | Player ] sfx0
[ > Player | Trail ] -> [ | Player ] sfx1

==============
WINCONDITIONS
==============

no Trail

=======
LEVELS
=======

OOOOOOOO
OOOOOOOO
O..POO.O
OOOOOOOO
OOOOOOOO


title It Dies In The Light
author Christopher Wells
homepage www.tophwells.com

noaction
run_rules_on_level_start
again_interval 0.05

========
OBJECTS
========

BackgroundNeutral
LIGHTGray Gray
11011
10101
01110
10101
11011

BackgroundDark
Black

Wall
Lightblue Blue
00010
11111
01000
11111
00010

LivePlayer
Black LightRed White Blue
.000.
.111.
12321
.232.
.222.

Corpse
LightGrey
.000.
.0.0.
0.0.0
..0..
.0.0.

Crate
Orange LightBrown Brown
.222.
21012
20102
21012
.222.

GoldCrate
White Yellow Orange
.222.
21012
20002
21012
.222.

GlassCrate
White
.000.
0...0
0...0
0...0
.000.

Prism
LightBlue White
.000.
00110
00010
00000
.000.

ActivePrism
LightBlue White Yellow
.000.
02120
01110
02120
.000.

Glass
White
00000
0...0
0...0
0...0
00000

BeamVert
White Yellow
.101.
.101.
.101.
.101.
.101.

BeamHor
White Yellow
.....
11111
00000
11111
.....

BeamCross
White Yellow
.101.
11011
00000
11011
.101.

Shadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

TempShadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

=======
LEGEND
=======

. = BackgroundNeutral
# = Wall
P = LivePlayer
C = Crate
G = GoldCrate
S = Shadow
X = Prism
O = Glass

Background = BackgroundNeutral or BackgroundDark
Player = LivePlayer or Corpse
Light = BeamVert or BeamHor or BeamCross
Hlight = BeamHor or BeamCross
Vlight = BeamVert or BeamCross
Opaque = Player or Crate or Wall or GoldCrate
Pushable = Crate or GoldCrate or Prism or GlassCrate


=======
SOUNDS
=======

SFX0 93002904

================
COLLISIONLAYERS
================

Background
BeamVert, BeamHor, BeamCross, Shadow, TempShadow
Player, Corpse, Wall, Crate, GoldCrate, GlassCrate, Prism, ActivePrism, Glass

======
RULES
======

[> Corpse] -> RESTART
[Light] -> []
[ActivePrism] -> [Prism]
[ >  Player | Pushable ] -> [  >  Player | > Pushable  ]
late HORIZONTAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamHor]
late VERTICAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamVert]
late VERTICAL [GoldCrate|no Opaque BeamHor] -> [GoldCrate | BeamCross]
late HORIZONTAL [Hlight|no Opaque no Light] -> [Hlight|BeamHor]
+ late HORIZONTAL [Hlight|no Opaque BeamVert] -> [Hlight|BeamCross]
+ late VERTICAL [Vlight|no Opaque no Light] -> [Vlight|BeamVert]
+ late VERTICAL [Vlight|no Opaque BeamHor] -> [Vlight|BeamCross]
+ late [Light Prism] ->[BeamCross ActivePrism]
late [Shadow Pushable] -> [Pushable]
late [TempShadow] -> [Shadow]
late [Shadow | no Light no Wall no Pushable no Glass no Shadow] -> [shadow | Tempshadow] again
late [Shadow] -> [Shadow BackgroundDark]
late [TempShadow] -> [TempShadow BackgroundDark]
late [no Shadow no TempShadow] -> [no Shadow BackgroundNeutral]
late [Shadow Player] -> [Shadow Corpse]

==============
WINCONDITIONS
==============

no Shadow

=======
LEVELS
=======

......####.
..#####ss#.
###ssssss#.
#..ssscss##
#..#s#s#ss#
#.g#s#ssss#
#p.#s#ssss#
#..css#sss#
###########

........########.
........#...#.C#.
...######...GC.##
...#..CsssssO.C.#
...#P.Csss#sO.CC#
...#..Csss#sO#..#
########ss#s....#
#ssssssOss#s#####
#sssssssss###....
#########s#......
........###......

##########
###G#G#G##
##P......#
#G.......#
##..C....#
#G.......#
##..C....#
#G.......#
##......S#
##########

........########
........#......#
#########..#o#.#
#........gooxo.#
#g#####c#.sso#s#
#.ssssss#.ss.ss#
##soooss#.ss##s#
##c.p.c###ss#ss#
##.....#ssss#ss#
#...g.......#ss#
#########.xx#ss#
........##sssss#
.........#######

MESSAGE Earth is safe once again.


title Ebony & Ivory
author Guilherme TÃ¶ws
homepage zarat.us

========
OBJECTS
========

Background
Purple

Gray
GRAY

White
WHITE

Black
BLACK

PlayerRed
Red
.....
.000.
.000.
.000.
.....

PlayerGold
Yellow
.....
.000.
.000.
.000.
.....


=======
LEGEND
=======

. = White
, = Black
# = Gray
: = PlayerRed and White
; = PlayerRed and Black
Player = PlayerRed or PlayerGold

=======
SOUNDS
=======

SFX0 72488907

================
COLLISIONLAYERS
================

Background
Black, White, Gray
Player

======
RULES
======

[ PlayerGold ] -> [ PlayerRed ]
[ >  Player White | Black ] -> [  > Player White | > Black ]
[ >  Player Black | White ] -> [  > Player Black | > White ]
[ > Black | White ] -> [ White | Black ] SFX0
[ > White | Black ] -> [ Black | White ] SFX0
[ >  Player White |  Black ] -> [  Player White |  Black ]
[ >  Player Black |  White ] -> [  Player Black |  White ]
[ >  Player |  Gray ] -> [  Player |  Gray ]
late [ Player | PlayerRed ] -> [ Player | PlayerGold ]

==============
WINCONDITIONs
==============

No PlayerRed

=======
LEVELS
=======

########
#..,,,,#
#.:.,.,#
#...,,,#
#.,.,;,#
#....,,#
########

title Random Robots
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background (special, automatically placed in its own layer)
green darkgreen
11111
01111
11101
11111
10111

Player (Required by game)
pink
..0..
00000
..0..
.000.
.0.0.

Robot
gray black red
.000.
.200.
...0.
00000
01010

=======
LEGEND
=======

. = Background
P = Player
* = Robot

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Player, Robot

======
RULES
======

[ stationary Robot ] -> [ randomDir Robot ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

...........
.....*.....
...........
.....*.....
...........
.....*.....
..P........
.....*.....
...........


title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate move 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..

######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


title horizontal Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
blue white
00000
00000
01110
00000
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

horizontal [ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

#########
#.......#
#.....@.#
#.P.*.O.#
#.......#
#.......#
#########

.#######.
.#.....#.
.#O##..##
##.##.*.#
#.*..**.#
#.OOO.#.#
#.P.....#
#########


title Ponies Jumping Synchronously
author vytah

background_color #990044
text_color white

========
OBJECTS
========


Background  (special, automatically placed in its own layer)
lightblue

JumpVariableA
lightblue
0...0
.000.
.0.0.
.000.
0...0

JumpVariableA1
lightblue
0...0
..0..
..0..
..0..
0...0

JumpVariableA2
lightblue
0...0
.0.0.
.0.0.
.0.0.
0...0

JumpVariableT
lightblue
..0..
.000.
.0.0.
.000.
.....

JumpVariableT1
lightblue
..0..
..0..
..0..
..0..
.....

JumpVariableT2
lightblue
..0..
.0.0.
.0.0.
.0.0.
.....

JumpVariableB
lightblue
.....
.000.
.0.0.
.000.
..0..

JumpVariableB1
lightblue
.....
..0..
..0..
..0..
..0..

JumpVariableB2
lightblue
.....
.0.0.
.0.0.
.0.0.
..0..

Dirt
brown darkbrown
00000
01000
00000
00010
00000

Tunnel
brown darkbrown
00000
01000
.....
.....
.....


Grass
brown lightgreen green darkBrown
11211
21020
00000
00030
00000

Exit
pink red
.1.1.
10101
10001
.101.
..1..

WoodenWall
Brown orange
.111.
.001.
.111.
.100.
.111.

Teleport
Brown darkBrown pink white
23332
02220
00000
00010
00000

Fire
red orange yellow
..0..
.00..
0110.
01210
.020.

TwiLeft
purple
.0...
00...
.0000
.0.0.
.0.0.

TwiRight
purple
...0.
...00
0000.
.0.0.
.0.0.

TeleportingTwilight
purple
...0.
...00
0000.
.0.0.
.0.0.

RdLeft
#00dddd
.0...
00...
.0000
.0.0.
.0.0.

RdRight
#00dddd
...0.
...00
0000.
.0.0.
.0.0.

AbLeft
yellow red
..1..
.01..
00...
.0000
.0.0.

AbRight
yellow red
..1..
..10.
...00
0000.
.0.0.

AjLeft
orange
.0...
00...
.0000
.0.0.
.0.0.

AjRight
orange
...0.
...00
0000.
.0.0.
.0.0.

DeadPony
lightGray darkGray
.111.
10001
10101
10001
10101

Boulder
lightGray darkGray
.....
.111.
10001
10001
.111.

=======
LEGEND
=======

Applejack=AjLeft or AjRight
RainbowDash=RdLeft or RdRight
Twilight=TwiLeft or TwiRight
AppleBloom=AbLeft or AbRight
(NotPegasus=Twilight or Applejack or AppleBloom or TeleportingTwilight)
Player=Twilight or Applejack or AppleBloom or RainbowDash
Obstacle=Grass or Dirt or DeadPony or WoodenWall or Teleport or Boulder
JumpObstacle=Obstacle or Player or Tunnel
JumpObstacleForFillies=Obstacle or Player
JumpVariablePositiveA=JumpVariableA1 or JumpVariableA2
JumpVariablePositiveT=JumpVariableT1 or JumpVariableT2
JumpVariablePositiveB=JumpVariableB1 or JumpVariableB2

. = Background
# = Dirt
~ = Grass
| = WoodenWall
T = TwiRight
A = AjRight
D = RdRight
B = AbRight
J = JumpVariableA
H = JumpVariableT
L = JumpVariableB
E = Exit
^ = Teleport
F = Fire
O = Boulder
- = Tunnel

=========
SOUNDS
=========

sfx0 47251907 (aj push)
sfx1 13930501 (twi zap)
sfx2 99083104 (death)
sfx3 12667901 (twi teleport)
sfx4 60310105 (jump)
sfx5 58764102 (rd smash)
sfx7 74120302 (aj buck)
endlevel 64815700



================
COLLISIONLAYERS
================

Background
JumpVariableA, JumpVariablePositiveA, JumpVariableT,JumpVariablePositiveT, JumpVariableB, JumpVariablePositiveB
Exit, Fire, Tunnel
Player, Obstacle, TeleportingTwilight

======
RULES
======

[> Player |Stationary Player] -> cancel
[> Player |< Player] -> cancel

[> Applejack| Tunnel] -> [Applejack|Tunnel]
[> RainbowDash| Tunnel] -> [RainbowDash|Tunnel]
[> Twilight| Tunnel] -> [Twilight|Tunnel]
Vertical [> AppleBloom|Tunnel] -> [AppleBloom|Tunnel]

[Left TwiRight] -> [Left TwiLeft]
[Right TwiLeft] -> [Right TwiRight]
[Left RdRight] -> [Left RdLeft]
[Right RdLeft] -> [Right RdRight]
[Left AjRight] -> [Left AjLeft]
[Right AjLeft] -> [Right AjRight]
[Left AbRight] -> [Left AbLeft]
[Right AbLeft] -> [Right AbRight]

Right[Action Applejack|WoodenWall] -> [AjLeft|]sfx7
Left[Action Applejack|WoodenWall] -> [AjRight|]sfx7

Down[Action Twilight|Teleport][no Player|Teleport]-> [|Teleport][TeleportingTwilight|Teleport] sfx3
late[TeleportingTwilight]->[TwiRight]


UP [ Up Applejack | No Obstacle No Player no tunnel] [JumpVariableA] -> [ Up Applejack | ] [JumpVariableA2] sfx4
DOWN [ Up Applejack | no obstacle No Player no tunnel ][JumpVariablePositiveA] -> [ Applejack | ][JumpVariablePositiveA]
DOWN [ Up Applejack | no obstacle No Player no tunnel][JumpVariableA2] -> [ Applejack | ][JumpVariableA2]
HORIZONTAL [ > Applejack | NO obstacle No Player no tunnel][JumpVariableA1] -> [ | Applejack ][JumpVariableA]
HORIZONTAL [ > Applejack | NO obstacle No Player no tunnel][JumpVariableA2] -> [ | Applejack ][JumpVariableA1]
HORIZONTAL [ > Applejack | JumpObstacle][JumpVariableA1] -> [ Applejack|JumpObstacle ][JumpVariableA]
HORIZONTAL [ > Applejack | JumpObstacle][JumpVariableA2] -> [ Applejack|JumpObstacle ][JumpVariableA1]
LATE DOWN [ Applejack | NO obstacle No Player no tunnel][JumpVariableA] -> [ | Applejack ][JumpVariableA]
LATE DOWN [ Applejack | Obstacle ][JumpVariablePositiveA] -> [ Applejack | Obstacle ][JumpVariableA]


UP [ Up Twilight | No Obstacle No Player no tunnel] [JumpVariableT] -> [ Up Twilight | ] [JumpVariableT2] sfx4
DOWN [ Up Twilight | no obstacle No Player no tunnel ][JumpVariablePositiveT] -> [ Twilight | ][JumpVariablePositiveT]
DOWN [ Up Twilight | no obstacle No Player no tunnel][JumpVariableT2] -> [ Twilight | ][JumpVariableT2]
HORIZONTAL [ > Twilight | NO obstacle No Player no tunnel][JumpVariableT1] -> [ | Twilight ][JumpVariableT]
HORIZONTAL [ > Twilight | NO obstacle No Player no tunnel][JumpVariableT2] -> [ | Twilight ][JumpVariableT1]
HORIZONTAL [ > Twilight | JumpObstacle][JumpVariableT1] -> [ Twilight|JumpObstacle ][JumpVariableT]
HORIZONTAL [ > Twilight | JumpObstacle][JumpVariableT2] -> [ Twilight|JumpObstacle ][JumpVariableT1]
LATE DOWN [ Twilight | NO obstacle No Player no tunnel][JumpVariableT] -> [ | Twilight ][JumpVariableT]
LATE DOWN [ Twilight | Obstacle ][JumpVariablePositiveT] -> [ Twilight | Obstacle ][JumpVariableT]


UP [ Up AppleBloom | No Obstacle No Player no tunnel] [JumpVariableB] -> [ Up AppleBloom | ] [JumpVariableB2] sfx4
DOWN [ Up AppleBloom | no obstacle No Player no tunnel ][JumpVariablePositiveB] -> [ AppleBloom | ][JumpVariablePositiveB]
DOWN [ Up AppleBloom | no obstacle No Player no tunnel][JumpVariableB2] -> [ AppleBloom | ][JumpVariableB2]
HORIZONTAL [ > AppleBloom | NO obstacle No Player][JumpVariableB1] -> [ | AppleBloom ][JumpVariableB]
HORIZONTAL [ > AppleBloom | NO obstacle No Player][JumpVariableB2] -> [ | AppleBloom ][JumpVariableB1]
HORIZONTAL [ > AppleBloom | JumpObstacleForFillies][JumpVariableB1] -> [ AppleBloom|JumpObstacleForFillies ][JumpVariableB]
HORIZONTAL [ > AppleBloom | JumpObstacleForFillies][JumpVariableB2] -> [ AppleBloom|JumpObstacleForFillies ][JumpVariableB1]
LATE DOWN [ AppleBloom | NO obstacle No Player no tunnel][JumpVariableB] -> [ | AppleBloom ][JumpVariableB]
LATE DOWN [ AppleBloom | Obstacle ][JumpVariablePositiveB] -> [ AppleBloom | Obstacle ][JumpVariableB]
)

late [Player Fire] -> [DeadPony Fire] sfx2

[> Applejack|Boulder|no Obstacle No Player] -> [> Applejack| > Boulder |] sfx0
[> RainbowDash|Boulder|no Obstacle No Player] -> [> RainbowDash||] sfx5
Right [Action TwiRight|Boulder] -> [TwiRight|] sfx1
Left [Action TwiLeft|Boulder] -> [TwiLeft|] sfx1

[Boulder Fire] -> [Boulder]

late down [Boulder|Player] -> [|DeadPony] sfx2
late down [Boulder| no Obstacle no Tunnel] -> [|Boulder no Fire]
late [Boulder Fire] -> [Boulder]

==============
WINCONDITIONS
==============

some Player
all Exit on Player
no DeadPony


=======
LEVELS
=======

(message #1. Grab the Crystal Heart.)

..........H
...........
.........E.
..T....~~~~
~~~~~~#####
###########


message #2. Applejack bucks and pushes.

..........J
..~~~~~~~~~
...########
.A.|.o...E#
######.####
###########

message #3. Twilight teleports and zaps.

...........H
............
............
.T....E.O...
~^~FFF~~~~^~
############

message #4. Rainbow Dash flies and smashes.

#########
....#..E#
....O..##
....#..##
.D..#..##
#########

message #5. Rocks fall, everyone dies.

.........J
..........
...~~~~~.~
~~O..O...#
##|A.O..E#
##########

message #6. Cooperate with friends.

J.....###
......###
...D..#.E
....#..O#
.A..O..|#
~~~######
#########

message #7. Cooperate with family.

##.......JL#####
---..O.A.O.#...#
###~.~~~~~.#..E#
###.F..B..F-.###
####.#####.#####
################


message #8. Help a filly get a cutie mark!
~~~~~..........L
#####.........D.
###E-....O......
######...O......
#######.###...B.
############~~~~

message Aww... Still no cutie mark...

message #9. Explore dangerous caves!

.........##############
.......###O############
JHL..#####O############
...#######O############
..#####..-O------O-E###
######..##O######O#####
#####..###|...A..O.....
####..####O###^.#######
####.-----O-------...B.
##########O############
..........O..........T.
############^##########

message #10. Friendship is magic!

JH.........###
.......O.#.#OE
DAT....|.#..O#
~~~.~~~.~###O#
.......F.#..O#
########^#^###

message #11. Evil enchantress.
~~~~~...............JHL
#####~~~~~~~~~~........
################.......
###......###...........
###..O.O.F.....#.#..D..
#E-..#B#.|O........A.T.
#############.~~~~~~~~~
#######################


message #12. Equestrian Games.

###############################
#########O#####################
#########O#####################
###......O..................JHL
###..O.#.O..............D......
#E-..#B#.O.....................
#########O#####################
#........|.....................
#########O#####..|.|.|.|.|.....
#........O....##.#.#.#.#.#.A...
############...################
#############..................
###############...F........T...
###############################

message Congratulations!

message The Mushroom Kingdom is now safe!

message I mean, the Crystal Empire.

title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

debug

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======


####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..


######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Sliding Puzzle
author Game Designer

========
OBJECTS
========

Background
LightBlue
.....
.....
.....
.....
.....

Player
Yellow
.....
..0..
.000.
.0.0.
.....

Box
Orange
.....
.....
..0..
.000.
.....

Wall
Black
.....
.....
.....
.....
.....

Target
Red
.....
.....
.....
..0..
.000.

=======
LEGEND
=======

= Background
P = Player
B = Box
T = Target
# = Wall

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Player, Box, Wall

======
RULES
======

# Player Movement
[right Player | ] -> [> Player | ]
[left Player | ] -> [< Player | ]
[up Player | ] -> [^ Player | ]
[down Player | ] -> [v Player | ]

# Box Movement
[right Player | Box no Wall] -> [> Player | Box]
[left Player | Box no Wall] -> [< Player | Box]
[up Player | Box no Wall] -> [^ Player | Box]
[down Player | Box no Wall] -> [v Player | Box]
[right Player Box | ] -> [> Player Box | >]
[left Player Box | ] -> [< Player Box | <]
[up Player Box | ] -> [^ Player Box | ^]
[down Player Box | ] -> [v Player Box | v]

==============
WINCONDITIONS
==============

all Box on Target

=======
LEVELS
=======

.....
.P.B.
...T.
.....
.....

```
produced the following console output:
=================================
line 52 : Only comments should go after a bunch of equals signs ('===') on a line.
line 74 : Objects cannot appear outside of square brackets in rules, only directions can.
line 74 : Name "movement", referred to in a rule, does not exist.
line 80 : Objects cannot appear outside of square brackets in rules, only directions can.
line 80 : Name "movement", referred to in a rule, does not exist.
line 100 : Key "." not found. Do you need to add it to the legend, or define a new object?
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. Return your code in full, inside a ```plaintext code block.