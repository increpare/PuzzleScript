SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Several Rigid Bodies
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
darkgreen

Target
YELLOW

Player
PINK

RedCrate q
RED

GreenCrate w
Green

BlueCrate e
Blue

SmallCrate r
Purple
.....
.000.
.000.
.000.
.....

Wall
DARKBROWN

=======
LEGEND
=======

. = Background
# = Wall
P = Player
bigcrate = redcrate or greencrate or bluecrate
Crate = smallcrate or bigcrate
O = Target

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

startloop

[ > Player | Smallcrate ] -> [ > Player | > SmallCrate ]

[ >  Player | RedCrate ] -> [  >  Player | > RedCrate  ]
+ rigid [ moving RedCrate | RedCrate ] -> [ moving RedCrate | moving RedCrate ]
+ [ >  Crate | RedCrate ] -> [  >  Crate | > RedCrate  ]

[ >  Player | GreenCrate ] -> [  >  Player | > GreenCrate  ]
+ rigid [ moving GreenCrate | GreenCrate ] -> [ moving GreenCrate | moving GreenCrate ]
+ [ >  Crate | GreenCrate ] -> [  >  Crate | > GreenCrate  ]


[ >  Player | BlueCrate ] -> [  >  Player | > BlueCrate  ]
+ rigid [ moving BlueCrate | BlueCrate ] -> [ moving BlueCrate | moving BlueCrate ]
+ [ >  Crate | BlueCrate ] -> [  >  Crate | > BlueCrate  ]

[ > Crate | SmallCrate ] -> [  > Crate | > SmallCrate ]

endloop

==============
WINCONDITIONS
==============

=======
LEVELS
=======

...............
...............
...............
.....#.........
...............
...r.r.........
..P....#.......
..qq..w.eer....
..q.wwweer.....
..q.#..........
...............
...............
...............



title Cake Monsters
author Matt Rix
homepage www.magicule.com
color_palette whitingjp
text_color #FF5588
background_color #050A0A
noaction
youtube Z6ih1aKeETk (tycho!)

========
OBJECTS
========

(-----------------------)
(----MONSTER COLOURS----)
(-----------------------)

RedMon
#D8144D #B00F3F BLACK WHITE
00000
020.3
000..
00000
1..1.

YellowMon
#F3F333 #C7C829 BLACK WHITE
00000
020.3
000..
00000
1..1.

BlueMon
#0366E3 #0A52BB BLACK WHITE
00000
020.3
000..
00000
1..1.

PurpleMon
#9E14E2 #800FBA BLACK WHITE
00000
020.3
000..
00000
1..1.

OrangeMon
#E68A25 #BB711E BLACK WHITE
00000
020.3
000..
00000
1..1.

GreenMon
#1CED55 #15C346 BLACK WHITE
00000
020.3
000..
00000
1..1.

TrashMon
#7C6953 #6D5239 BLACK WHITE
00000
020.3
000..
00000
1..1.


(------------------------)
(------CAKE COLOURS------)
(------------------------)

RedCake
#D8144D #B00F3F
.000.
00000
00000
10001
.111.

YellowCake
#F3F333 #C7C829
.000.
00000
00000
10001
.111.

BlueCake
#0366E3 #0A52BB
.000.
00000
00000
10001
.111.


PurpleCake
#9E14E2 #800FBA
.000.
00000
00000
10001
.111.

OrangeCake
#E68A25 #BB711E
.000.
00000
00000
10001
.111.

GreenCake
#1CED55 #15C346
.000.
00000
00000
10001
.111.

TrashCake
#7C6953 #6D5239
.000.
00000
00000
10001
.111.

(-----------------------)
(------OTHER STUFF------)
(-----------------------)

Destroyer
#001111 #223333 #384949
.222.
20202
12021
10101
.111.

Background
#152020 #192525
01101
10110
01101
11010
01010


Wall
#334444 #384949 #445555 #475959 #4A6B6B
34443
23332
12221
01110
00000

Blackness
#050A0A


=======
LEGEND
=======


. = Background
_ = Blackness
# = Wall
X = Destroyer

R = RedMon
Y = YellowMon
B = BlueMon
P = PurpleMon
O = OrangeMon
G = GreenMon
T = TrashMon

Monster = RedMon or YellowMon or BlueMon or PurpleMon or OrangeMon or GreenMon or TrashMon
Player = Monster

PrimaryMon = RedMon or YellowMon or BlueMon
SecondaryMon = PurpleMon or OrangeMon or GreenMon

(each cake char is the next letter in the alphabet after the monster char)
(except for orange, sadly)
S = RedCake
Z = YellowCake
C = BlueCake
Q = PurpleCake
A = OrangeCake
H = GreenCake
U = TrashCake

Cake = RedCake or YellowCake or BlueCake or PurpleCake or OrangeCake or GreenCake or TrashCake

=======
SOUNDS
=======

sfx0 8478107 (move)
sfx1 18590508 (eat other monster)
sfx2 61437309 (eat cake)
sfx3 89161102 (monster destroyed)
startlevel 563108
endlevel 76028308
undo 82948709
restart 22851101

================
COLLISIONLAYERS
================

Background
Blackness, Wall, Destroyer
Monster,Cake



======
RULES
======

(------------------------)
(----MONSTER MOVEMENT----)
(------------------------)

(movement sound)
[ > Monster ] -> [ > Monster ] sfx0

(stop the monster if it hits a wall)
[ > Monster | Wall ] -> [ Monster | Wall]

(if monster hits a destroyer, remove the monster)
[ > Monster | Destroyer ] -> [ | Destroyer] sfx3

(monster eats cakes of the same color)
[ > RedMon | RedCake] -> [ | RedMon] sfx2
[ > BlueMon | BlueCake] -> [ | BlueMon] sfx2
[ > YellowMon | YellowCake] -> [ | YellowMon] sfx2
[ > PurpleMon | PurpleCake] -> [ | PurpleMon] sfx2
[ > OrangeMon | OrangeCake] -> [ | OrangeMon] sfx2
[ > GreenMon | GreenCake] -> [ | GreenMon] sfx2
[ > TrashMon | TrashCake] -> [ | TrashMon] sfx2

(stop the monster if it hits a cake of a different color)
(note: this is necessary to make sure the monster is marked as stationary)
[ > RedMon | Cake no RedCake] -> [ RedMon | Cake no RedCake]
[ > BlueMon | Cake no BlueCake] -> [ BlueMon | Cake no BlueCake]
[ > YellowMon | Cake no YellowCake] -> [ YellowMon | Cake no YellowCake]
[ > PurpleMon | Cake no PurpleCake] -> [ PurpleMon | Cake no PurpleCake]
[ > OrangeMon | Cake no OrangeCake] -> [ OrangeMon | Cake no OrangeCake]
[ > GreenMon | Cake no GreenCake] -> [ GreenMon | Cake no GreenCake]
[ > TrashMon | Cake no TrashCake] -> [ TrashMon | Cake no TrashCake]

(--------------------------)
(---MONSTER COLOR MIXING---)
(--------------------------)

(red+blue = purple)
[ > BlueMon | stationary RedMon] -> [ | PurpleMon] sfx1
[ > RedMon | stationary BlueMon] -> [ | PurpleMon] sfx1

(red+yellow = orange)
[ > RedMon | stationary YellowMon] -> [ | OrangeMon] sfx1
[ > YellowMon | stationary RedMon] -> [ | OrangeMon] sfx1

(blue+yellow = green)
[ > BlueMon | stationary YellowMon] -> [ | GreenMon] sfx1
[ > YellowMon | stationary BlueMon] -> [ | GreenMon] sfx1

(primary color + secondary color = brown aka trash)
[ > PrimaryMon | stationary SecondaryMon] -> [ | TrashMon] sfx1
[ > SecondaryMon | stationary PrimaryMon] -> [ | TrashMon] sfx1

(green+orange = trash)
[ > GreenMon | stationary OrangeMon] -> [ | TrashMon] sfx1
[ > OrangeMon | stationary GreenMon] -> [ | TrashMon] sfx1

(purple+orange = trash)
[ > PurpleMon | stationary OrangeMon] -> [ | TrashMon] sfx1
[ > OrangeMon | stationary PurpleMon] -> [ | TrashMon] sfx1

(green+purple = trash)
[ > GreenMon | stationary PurpleMon] -> [ | TrashMon] sfx1
[ > PurpleMon | stationary GreenMon] -> [ | TrashMon] sfx1

(trash+anything = trash)
[ > TrashMon | stationary Monster] -> [ | TrashMon] sfx1
[ > Monster | stationary TrashMon] -> [ | TrashMon] sfx1

(monster + monster of the same color = monster of the same color)
[ > Monster | stationary Monster] -> [ | Monster] sfx1


==============
WINCONDITIONS
==============

No Cake


=======
LEVELS
=======


message WELCOME TO CAKE MONSTERS!
message MONSTERS LIKE EATING CAKE

_______
#######
#.....#
#.r...#
#...s.#
#.....#
#######
_______
(diff 0)

message YOU MOVE ALL OF THE MONSTERS

######_######
#....#_#z...#
#.r..#_#....#
#..s.#_#....#
#....#_#...y#
######_######
_____________
######_######
#.c..#_#....#
#....#_#...h#
#..b.#_#g...#
#....#_#....#
######_######
(diff 0)

message MONSTERS ONLY LIKE THEIR OWN CAKE
message REMEMBER: Z TO UNDO, R TO RESTART
_________
#########
#r.z....#
#######.#
#.......#
#.sy....#
#########
_________
(diff 1)

message MONSTERS MIX WHEN THEY GET EATEN
_________
#########
#.......#
#.#####.#
#.r.q.b.#
#.#####.#
#.......#
#########
_________
(diff 1)


message BROWN + ANY COLOR = BROWN
__________
##########
#........#
#.rybpog.#
#........#
#........#
#.szcqah.#
#........#
#........#
#.uuuuuu.#
#........#
##########
__________
(diff 1)


message HAVE FUN!
############
#y........c#
#b........z#
#####..#####
____#..#____
____#..#____
____#hh#____
____####____
(diff 1)

(----------------------------)


_____
#####
#RCQ#
#.CS#
#Q.B#
#####
_____
(diff 2)




______
######
#R...#
#B...#
#Q.QQ#
#CSCS#
######
______
(diff 2)

_______
#######
#R.H.B#
#.....#
#.....#
#Y.Q.B#
#######
_______
(diff 2)

_______
#######
#CCHCB#
#.....#
#YZHZZ#
#######
_______
(diff 2)


______
######
#R..B#
#S.C.#
#.A.C#
#Y.C.#
######
______
(diff 2)


message PIECE OF CAKE, RIGHT?


#########
#ccccccc#
#bcccccc#
######cc#
_____#ch#
######zz#
#yzzzzzz#
#yzzzzzz#
######zz#
_____#sa#
######ss#
#rssssss#
#sssssss#
#########
(diff 3, fun)

_______
#######
#R.B.Y#
#Y.B.R#
#R.B.Y#
#Y.B.R#
#AHQHA#
#######
_______
(diff 3)


_______
#######
#AR.BA#
#.#.#.#
#H...H#
##.A.##
#HY#YH#
#######
_______
(diff 3)



message X TILES DESTROY MONSTERS
_________
_###_###_
#...#...#
#.q.x.p.#
#...x...#
_#..x..#_
__#...#__
___#.#___
____#____
_________
(diff 0, destroyerz)


_____
#####
#RAR#
#RXY#
#YAY#
#####
_____
(diff 1, destroyerz)

______
######
#BHHB#
#YXXY#
#YXXY#
#BHHB#
######
______
(diff 1 destroyerz)

_______
#######
#RQXQR#
#SQXQS#
#BQXQB#
#######
_______
(diff 1 destroyerz)

___________
#####_#####
#sss#_#qqq#
#sss###qqq#
#x.......x#
##x.rxb.x##
#x.......x#
#qqq###ccc#
#qqq#_#ccc#
#####_#####
___________
(diff 2 destroyerz)

___________
###########
#...#q#.b.#
#sxr#.#xx.#
#.x.....c.#
###########
___________
(diff 3 destroyerz)



message YOU'RE CAKING THIS LOOK EASY!

______
######
#RZSZ#
#YSZS#
#..SZ#
#..ZS#
######
______
(diff 3)


#######
#Y#B#Y#
#.#R#.#
#.#.#.#
#.....#
#.###.#
#HHAHH#
#######
(diff 3, fun!)



####__####
#qc####cb#
#c......c#
##.####.##
_#.#xx#.#_
_#.c.r#.#_
##.####.##
#c......c#
#qc####cq#
####__####
(diff 3)




_#########_
_#rrr.sss#_
_#.......#_
_#yyy.zzz#_
_#.......#_
##bbb.ccc##
#.........#
#.q..a..h.#
#.........#
###########

______
######
#RA.Y#
#....#
#HH..#
#SBCY#
######
______
(diff 4)

message LET'S CAKE IT TO THE NEXT TIER!


#############
#...#.h.#...#
#.r.#...#.y.#
#...c#c#s...#
###c.....s###
#..#.#h#.#..#
#z.h.z.c.s.c#
#..#.#s#.#..#
###......z###
#....#z#z...#
#.b.#...#.g.#
#...#.s.#...#
#############
(diff 3, easy but fun)


_____
#####
#B.B#
#RRY#
#.Q.#
#S.S#
#CHC#
#####
_____
(diff 5 - fun!)


______
######
#HYBH#
#YBYB#
#BBBB#
#HHHH#
######
______
(diff 4)




______
######
#BR.Y#
#..A.#
#SCZA#
#CSZA#
######
______
(diff 4)




______
######
#CZG.#
#ZCR##
###..#
#SHY##
#HSB.#
######
______
(diff 5 - very fun!)


message YOU'RE GETTING BATTER!

______
######
#YYYY#
#...R#
#AAAA#
#ZZZZ#
######
______
(diff 5 - fun but surprisingly hard)


_______
#######
#Y..YA#
#.BB.H#
#R..RQ#
#Y..YH#
#######
_______
(diff 4)


message ICING ON THE CAKE!

______
######
#ZBBZ#
#YBYB#
#....#
#ZHCZ#
######
______
(diff 5)




_______
#######
#A.S.A#
#.Z.Z.#
#SYRYS#
#.ZYZ.#
#A.S.A#
#######
_______
(diff 5 - not too hard)



message WILL YOU CAKE IT OUT ALIVE?
______
######
#ZZZZ#
#SSSS#
#CCCC#
#YRB.#
######
______
(diff 6 - fun but tricky)




message THE FINAL CHALLENGE!
message DOUGH YOU HAVE WHAT IT CAKES?
_____
#####
#AYA#
#...#
#CBC#
#SZY#
#RZS#
#CBC#
#...#
#HOH#
#####
_____
(diff 8 - a pretty tough one)



message WELL, YOU REALLY TOOK THE CAKE!
message CONGRATS, YOU WIN! :)




title Gobble Rush!
author Mark Richardson
again_interval 0.05
noaction
require_player_movement
run_rules_on_level_start


========
OBJECTS
========

Background
Black

Exit
White Black
01010
10101
01010
10101
01010

Wall
Brown

Hole
Brown
00000
00.00
0...0
0...0
0...0

Player
Pink Blue Brown Red DarkBlue
.222.
.101.
33333
.444.
44.44

Enemy
LightBrown
.....
0..0.
.00..
0000.
0..0.

Alert
Red
....0
....0
.....
....0
.....

Chicken
#EA3 #FC9 #FEA
.....
2....
.110.
01100
.000.

Lettuce
#6C3 #5A2 #482 #361 #240
.2.2.
24342
12421
01310
.002.

LoS
White
.....
.....
.....
.....
.....

MoveU
White
.....
.....
.....
.....
.....

MoveD
White
.....
.....
.....
.....
.....

MoveL
White
.....
.....
.....
.....
.....

MoveR
White
.....
.....
.....
.....
.....

CanMove
White
.....
.....
.....
.....
.....

Level0
White #F00
.....
.....
.111.
.....
.....

Level1
White #F00
00000
.....
.111.
.....
.....

Level2
White #F00
.....
00000
.111.
.....
.....

Level3
White #F88
.....
.....
01110
.....
.....

Level4
White #F00
.....
.....
.111.
00000
.....

Level5
White #F00
.....
.....
.111.
.....
00000


=======
LEGEND
=======

. = Background
X = Exit
# = Wall
H = Hole
P = Player
Q = Player and Exit
E = Enemy
F = Enemy and Exit
C = Chicken
D = Chicken and Exit
L = Lettuce
M = Lettuce and Exit
0 = Level0
1 = Level1
2 = Level2
3 = Level3
4 = Level4
5 = Level5

Move = MoveU or MoveD or MoveL or MoveR
Obstacle = Wall or Enemy
Food = Player or Chicken


=======
SOUNDS
=======

SFX0            97542903 (enemy alerted)
Player  Destroy 41368102 (player eaten)
Chicken Destroy 74663702 (chicken eaten)
Lettuce Destroy 74663702 (lettuce eaten)
Enemy   Create  81259707 (enemy moving)
EndLevel        22595303


================
COLLISIONLAYERS
================

Background
Exit, Hole, Level0, Level1, Level2, Level3, Level4, Level5
Wall, Player, Enemy, Chicken, Lettuce
LoS, Move
Alert, CanMove


======
RULES
======

(Prevent illegal moves)
[ > Player | Hole ] -> cancel

(Tell alert enemies to move)
[ Enemy Move ] -> [ Enemy CanMove Move ]

(Stop enemies)
late up    [ Enemy CanMove MoveU |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late left  [ Enemy CanMove MoveL |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late right [ Enemy CanMove MoveR |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD | Enemy CanMove MoveU ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy CanMove MoveL ] -> [ Enemy | Enemy    ]
late up    [ Enemy CanMove MoveU | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late down  [ Enemy CanMove MoveD | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late left  [ Enemy CanMove MoveL | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy      no Move  ] -> [ Enemy | Enemy    ]

(Move enemies)
late up    [ Enemy CanMove MoveU | no Obstacle         ] -> [       | Enemy MoveU ] again
late down  [ Enemy CanMove MoveD | no Obstacle         ] -> [       | Enemy MoveD ] again
late left  [ Enemy CanMove MoveL | no Obstacle         ] -> [       | Enemy MoveL ] again
late right [ Enemy CanMove MoveR | no Obstacle         ] -> [       | Enemy MoveR ] again
late       [ Enemy CanMove       ]                       -> [ Enemy ]

(Remove alerts)
late       [ Enemy Alert         ]                       -> [ Enemy ]

(Create line of sight)
late [ Food no CanMove ] -> [ Food CanMove ]
late [ Move ] [ CanMove ] -> [ Move ] [ ]

(Chase player)
late [ Player CanMove ] -> [ Player LoS ]
late [ Player LoS | no Wall no LoS ] -> [ Player LoS | LoS ]
late [ Player Los | ... | LoS | no Wall no LoS ] -> [ Player LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveU Alert | ... | Player LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveD Alert | ... | Player LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveL Alert | ... | Player LoS ] SFX0
late right [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveR Alert | ... | Player LoS ] SFX0
late [ LoS ] -> [ ]

(Chase chickens)
startloop
late random [ Chicken CanMove ] -> [ Chicken LoS ]
late [ Chicken LoS | no Wall no LoS ] -> [ Chicken LoS | LoS ]
late [ Chicken Los | ... | LoS | no Wall no LoS ] -> [ Chicken LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveU Alert | ... | Chicken LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveD Alert | ... | Chicken LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveL Alert | ... | Chicken LoS ] SFX0
late right [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveR Alert | ... | Chicken LoS ] SFX0
late [ LoS ] -> [ ]
endloop


==============
WINCONDITIONS
==============

some Exit on Player
no Alert
no Move


=======
LEVELS
=======

..#####....
..#X..#...3
..#...###.0
..#E....#.0
..###...#.0
....#..P#.0
....#####..

..#######..
..#P....#.4
..#.....#.0
..#####.#.0
..#EX...#.0
..###...#.0
....#####..

..#######..
..#.....#.5
..#..#..#.0
..#.....#.0
..#.P##E#.0
..#..#XE#.0
..#######..

..#######..
..#.....#.0
..#.E...#.1
..#.E...#.0
..#.E...#.0
..#XE.P.#.0
..#######..

..#######..
..#..#.X#.0
..#..E..#.2
..##.#E##.0
..#.....#.0
..#P.#..#.0
..#######..

..#######..
..#X...P#.0
..##.#..#.3
..#...#.#.0
..#.....#.0
..#.E#.E#.0
..#######..

..######...
..#P.#.##.0
..#.X..E#.4
..##.#..#.0
..#.....#.0
..##..E.#.0
...######..

...####....
..##..##..0
..#.P..##.5
..#..X.E#.0
..##...##.0
...##E##..0
....###....

..#######..
..#XE...#.0
..#EE..##.0
..#..P..#.1
..#.....#.0
..#.#...#.0
..#######..

..#######..
..#P..#X#.0
..#.....#.0
..##....#.2
..#.....#.0
..#E..#E#.0
..#######..

..#######..
..#X...P#.0
..#.###.#.0
..#.....#.3
..#E###.#.0
..#....C#.0
..#######..

..#######..
..#P....#.0
..#..#.E#.0
..#.....#.4
..##.C.##.0
...##X##..0
....###....

..#######..
..#....C#.0
..##X#.##.0
..#EH..#..5
..##...#..0
...#.PC#..0
...#####...

...######..
...#.#..#.0
..##Q..E#.0
..#...#.#.0
..#..#..#.1
..#.E.C.#.0
..#######..

.....####..
...###.E#.0
...#P...#.0
..##..L.#.0
..#..LXL#.2
..#E..L.#.0
..#######..

...######..
..##LLCX#.0
..#LLCLC#.0
..#LCL.L#.0
..#ELLPL#.3
..#LLC#L#.0
..#######..

..#######..
..#....P#.0
..#E.#E.#.0
..#.....#.0
..##LLL##.4
...##X##..0
....###....

..#######..
..##LXL##.0
..#..L..#.0
..#..#..#.0
..#E...E#.5
..##.P.##.0
..#######..

..#######..
..#H.P..#.0
..#XH...#.0
..#..H.E#.0
..#...H.#.0
..#.E...#.1
..#######..

..#######..
..#.E.E.#.0
..#P....#.0
..#..X.E#.0
..#L..L.#.0
..#.E.EL#.2
..#######..

..#######..
..#L.L.L#.0
..#L.L.L#.0
..#L.P.L#.0
..#L.L.L#.0
..#L.L.L#.3
..##X#X##..


title Drop Swap
author Aaron Steed
homepage www.robotacid.com

key_repeat_interval 0.23
again_interval 0.05
noaction
noundo
background_color Black
text_color Grey
run_rules_on_level_start

========
OBJECTS
========

Background
Black

Player
#ffffff #000000 #626263 #3c3b3c
.222.
21112
23132
20102
.222.

DeadPlayer
#ffffff #000000 #626263 #3c3b3c
.222.
21112
21112
23132
.222.

BaseWall
#222222 #333333 #444444 #ffffff
11110
12220
12200
12000
00000

APill
#ff0000 #ff7374 #ff0000 #ff0000
.111.
11110
11010
11100
.000.

BPill
#00de00 #cffa92 #ff0000 #ff0000
.111.
10010
10110
11100
.000.

CPill
#7a35fc #b56bfd #ff0000 #ff0000
.111.
10110
11010
11100
.000.

DPill
#0094fc #79b5fd #ff0000 #ff0000
.111.
10100
11010
10100
.000.

EPill
#d1c200 #fff919 #ffffff #ff0000
.111.
10010
10010
11110
.000.

FPill
#ff33b1 #ff76d2 #ff0000 #ff0000
.111.
10100
11110
10110
.000.

AllPill
#eeee66 #ffffff #ffffcc #ffffff
.112.
11112
11012
21120
.220.

NoPill
#ffffff #000000 #ffde85 #ff0000
.000.
00000
21012
.000.
..2..

Bomb
#6e6e6e #000000 #ff0000 #fcf26b
.020.
02320
01210
01110
.000.

GemPill
#ffffff #000000 #626263 #3c3b3c
..0..
.002.
00022
.223.
..2..

Count
#ffffff #000000 #5a595a #ff0000
.....
.000.
.000.
.000.
.....

Marked
#ffffff #000000
.....
..1..
.101.
..1..
.....

CountTray
#333333

GemTray
#333333

StartGem
red

Collect
White

Debris1
#ffffff #0739f5 #1f0f42 #ffffff
.0.0.
00.00
..0..
00.00
.0.0.

Debris2
#ffffff #0739f5 #1f0f42 #ffffff
.....
.0.0.
..0..
.0.0.
.....

Empty
Black

OldPos
Black

StartCount
Black

DropWall1
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall2
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall3
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropWall4
#222222 #333333 #444444 #ffffff
11110
12220
12200
12200
12200

DropMarker
Blue

Init
Purple

=======
LEGEND
=======

. = Background
@ = Player
p = DeadPlayer
# = BaseWall
a = APill
b = BPill
c = CPill
d = DPill
e = EPill
f = FPill
n = NoPill
x = AllPill
u = Count and CountTray
w = Count and CountTray and StartCount
g = GemPill
q = GemTray
o = GemTray and StartGem
p = Bomb
i = Init
j = DropWall1
k = DropWall2
l = DropWall3
m = DropWall4


MatchPill = APill or BPill or CPill or DPill or EPill or FPill or AllPill
Pill = MatchPill or NoPill or GemPill or Bomb
Debris = Debris1 or Debris2
AMatch = APill or AllPill
BMatch = BPill or AllPill
CMatch = CPill or AllPill
DMatch = DPill or AllPill
EMatch = EPill or AllPill
FMatch = FPill or AllPill
Wall = BaseWall or DropWall1 or DropWall2 or DropWall3 or DropWall4
Item = Pill or Debris or Wall or Player
Heavy = Pill or Player
Dropping = Marked or DropMarker
DropMix1 = APill or BPill or CPill or DPill or EPill
DropMix2 = APill or BPill or CPill or DPill or EPill or GemPill
DropMix3 = APill or BPill or CPill or DPill or EPill or NoPill
DropMix4 = APill or BPill or CPill or DPill or EPill or FPill or GemPill
DropMix5 = APill or BPill or CPill or DPill or EPill or FPill
DropWallMarked = DropWall1 or DropWall3

=======
SOUNDS
=======

sfx0 54236904 (illegal)
sfx1 5160507 (swap)
sfx2 19008103 (allpill)
sfx3 50665503 (crush 3)
sfx4 80820507 (land)
sfx5 2030908 (blast)
sfx6 3032303 (bomb)
sfx7 83704102 (dead)
sfx8 7194508 (gem collect)
EndLevel 16709508 (win)

================
COLLISIONLAYERS
================


Collect, StartCount, StartGem
Background
OldPos, CountTray, GemTray
Player, Wall, Pill, Empty, Count, DeadPlayer, Bomb, Init
Debris, Marked, DropMarker

======
RULES
======

(init)
[ DropWall1 ] [ Init ] -> [ DropWall1 ] [ random DropMix1 Marked ]
[ DropWall2 ] [ Init ] -> [ DropWall2 ] [ random DropMix1 ]
[ DropWall3 ] [ Init ] -> [ DropWall3 ] [ random DropMix1 Marked ]
[ DropWall4 ] [ Init ] -> [ DropWall4 ] [ random DropMix5 ]

(debris clean up)
[ Debris2 ] -> [ Empty ] again
[ Debris1 ] -> [ Debris2 ] again

(player - pill swapping)
[ > Player | Pill ] -> [ Pill OldPos | Player ] sfx1
[ Player Marked | OldPos ] -> [ Player | OldPos Marked ]

(blocked move)
[ > Player | No Pill ] -> [ Player | ] sfx0

(pill combos)
[ AMatch | AMatch | AMatch ] -> [ AMatch Collect | AMatch Collect | AMatch Collect ]
[ BMatch | BMatch | BMatch ] -> [ BMatch Collect | BMatch Collect | BMatch Collect ]
[ CMatch | CMatch | CMatch ] -> [ CMatch Collect | CMatch Collect | CMatch Collect ]
[ DMatch | DMatch | DMatch ] -> [ DMatch Collect | DMatch Collect | DMatch Collect ]
[ EMatch | EMatch | EMatch ] -> [ EMatch Collect | EMatch Collect | EMatch Collect ]
[ FMatch | FMatch | FMatch ] -> [ FMatch Collect | FMatch Collect | FMatch Collect ]
[ NoPill | NoPill | NoPill ] -> [ NoPill Collect | NoPill Collect | NoPill Collect ]

(bomb activate)
[ OldPos Bomb ] -> sfx5
up [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
right [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
down [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
left [ OldPos Bomb | Pill ] -> [ OldPos Bomb | Pill > Collect ]
[ OldPos Bomb ] -> [ OldPos Empty ]

(blast)
up [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
right [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
down [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
left [ Pill > Collect | Pill ] -> [ Pill Collect | Pill > Collect ]
[ > Collect ] -> [ Collect ]
[ GemPill Collect ] -> [ GemPill ]

(reward matches)
(junction)
Right [ Collect | Collect ] -> [ > Collect | > Collect ]
Down [ Collect | Collect ] -> [ > Collect | > Collect ]
[ Down Collect | Right Collect ] [ Collect OldPos ] -> [ Collect | Collect ] [ Bomb OldPos ] sfx6
(4: create AllPill)
[ MatchPill Collect | MatchPill Collect | MatchPill Collect | MatchPill Collect ] [ Collect OldPos ] -> [ MatchPill Collect | MatchPill Collect | MatchPill Collect | MatchPill Collect ] [ AllPill OldPos ] sfx2

(count moves)
(subtract on move)
random right [ OldPos ] [ Count | No Count ] -> [ OldPos ] [ | ]
(fill on Debris)
[ Collect ] [ CountTray ] -> [ Collect ] [ CountTray Count ]

(dead?)
[ DeadPlayer ] -> cancel
[ No Count StartCount CountTray ] [ Player ] -> [ No Count StartCount CountTray ] [ DeadPlayer ] sfx7
[ Player | NoPill Collect ] -> [ DeadPlayer | NoPill ]
[ DeadPlayer ] [ CountTray Count ] -> [ DeadPlayer ] [ CountTray ] sfx7

(destroy matched)
[ APill Collect ] -> [ Debris1 ] sfx3 again
[ BPill Collect ] -> [ Debris1 ] sfx3 again
[ CPill Collect ] -> [ Debris1 ] sfx3 again
[ DPill Collect ] -> [ Debris1 ] sfx3 again
[ EPill Collect ] -> [ Debris1 ] sfx3 again
[ FPill Collect ] -> [ Debris1 ] sfx3 again
[ AllPill Collect ] -> [ Debris1 ] sfx3 again
[ Player ] [ NoPill Collect ] -> [ Player ] [ Debris1 ] sfx3 again

(destroy NoPills)
down [ NoPill | Wall ] -> [ Debris1 | Wall ] again

(collect gems)
down [ GemPill | Wall ] -> [ GemPill Collect | Wall ]
[ GemPill Collect ] [ StartGem No GemPill ] -> [ Debris1 ] [ StartGem GemPill ] again sfx8
right [ GemPill Collect ] [ GemPill GemTray | No GemPill GemTray ] -> [ Debris1 ] [ GemPill GemTray | GemPill GemTray ] again sfx8

(drop)
[ Heavy No Dropping ] -> [ Heavy DropMarker ]
down [ Heavy Dropping | Empty ] -> [ Empty | Heavy Dropping ]
[ DropMarker ] -> [ ]
down [ DropWall1 | Empty ] -> [ DropWall1 | random DropMix1 ] again
down [ DropWall2 | Empty ] -> [ DropWall2 | random DropMix2 ] again
down [ DropWall3 | Empty ] -> [ DropWall3 | random DropMix3 ] again
down [ DropWall4 | Empty ] -> [ DropWall4 | random DropMix4 ] again

(gem drop win)
right [ GemPill GemTray | Wall ] -> win

[ OldPos ] -> [ ]

==============
WINCONDITIONS
==============

No Marked
Some DropWallMarked

=======
LEVELS
=======

message collect orbs by matching 3
message match 3 to restore move-energy
message level 1: collect all marked orbs

wuuuuu#
#jjjjj#
#iiiii#
#iiiii#
#iiiii#
#iiiii#
#ii@ii#
#######

message level 2: collect all marked orbs

wuuuuuu#
#jjjjjj#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iii@ii#
########

message collect gray gems by getting them to the bottom
message level 3: collect 8 gems

oqqqqqqq#
wuuuuuuu#
#kkkkkkk#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iii@iii#
#########

message if you are next to 3 matching skulls you die
message skulls can be destroyed by getting them to the bottom
message level 4: collect all marked orbs

wuuuuuu#
#llllll#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iiiiii#
#iii@ii#
########

message level 5: collect 7 gems

oqqqqqqq#
wuuuuuuu#
#mmmmmmm#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iiiiiii#
#iii@iii#
#########

message thanks for playing



USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Crops & Castles
author YourName
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen

Player
blue
..0..
.000.
00.00
..0..
.....

Soil
brown
.....
.....
..0..
.....
.....

Seed
yellow
.....
..0..
.....
.....
.....

Sprout
lightyellow
.....
.....
..0..
.....
.....

Crop
green
.....
..0..
.....
.....
.....

Castle
darkgray
.000.
0...0
0...0
0...0
.000.

Wall
darkbrown
.111.
11111
.111.
.....
.....

=======
LEGEND
=======

. = Background
P = Player
s = Soil
S = Seed
R = Sprout
C = Crop
# = Wall
H = Castle

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Castle, Wall
Player, Soil, Seed, Sprout, Crop

======
RULES
======

[ Player | Soil ] -> [ Player | Seed ] 
[ Player | Seed ] -> [ Player | Sprout ]
[ Player | Sprout ] -> [ Player | Crop ]

==============
WINCONDITIONS
==============

all Sprout on Crop

=======
LEVELS
=======

#.###..#####
##..C..#S..#
#S..S..#...H
##.P....####

..C...######
##..S..#S..#
##.#R..#...#
#H..S..##.P#
###########.

######
#S..H#
#R..S#
##PC.#
######

```
produced the following console output:
=================================
line 37 : Was looking for color for object SPROUT, got "lightyellow" instead.
line 40 : Trying to access color number 0 from the color palette of sprite SPROUT, but there are only 0 defined in it.
line 62 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 63 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 64 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 75 : Name "S" already in use (on line line 74).
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. First, reason about your task and determine the best plan of action. Then, write your code.  The game should be a simplified `demake` of the following game idea: **Crops & Castles:** Harvest enchanted produce to gain spells and power up your medieval kingdom in this strategic farming and tower defense hybrid.. Return your code in full, inside a ```plaintext code block.