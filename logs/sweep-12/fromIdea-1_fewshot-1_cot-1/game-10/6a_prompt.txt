SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Tunnel Rat
author James Noeckel
noundo
again_interval 0.07
youtube SG1uBb104Is
========
OBJECTS
========
Background
#4c352b #4e382f #533c30
01010
02211
20010
00012
12102

PlayerS
#a65200 red #6f3c0a
.0.0.
.000.
21012
20002
22022

PlayerU
#a65200 red #6f3c0a
.0.0.
.101.
20002
22022
.2.2.

inflow
yellow orange white
00000
00000
22222
11111
11111

exit
green
.0.0.
0.0.0
.0.0.
0.0.0
.0.0.

tempwall
blue

DirtM
#82642b #876b35 #927538
01010
02211
20010
00012
12102

DirtU
#82642b #876b35 #927538 #b19154
22222
33333
00000
01012
12102


Rock
#e0e0e0 #a4a4a4 #8a8a8a #7c7c7c
.000.
01112
11123
11223
.233.

enemy
white #ff7070 black #880000 red
01414
14343
14343
14443
43232

h_grav
black
.....
.....
..0..
.....
.....

h_step
red
.....
.....
..0..
.....
.....

(h_dead
black
)
pickupoverlay
pink

enemyoverlay
pink

destroy
red
0...0
.0.0.
..0..
.0.0.
0...0
scrolling
blue
.....
.....
..0..
.....
.....

Shoes
#ff11f7 #9711ff #641d9a
...0.
...10
...01
.1111
.2222

Eraser
#00ff12 #99ffa0 #008509
..10.
.1000
10000
.2000
..20.

Unraser
#00ff12 #99ffa0 #008509
.01..
0001.
00001
0002.
.02..

Shoesworn
purple pink
.....
.....
.....
.....
10.01


=======
LEGEND
=======
# = Dirtm
. = Background
P = playerS
o = Rock
s = shoes
x = enemy
@ = dirtm and destroy
$ = dirtm and inflow
e = exit and Dirtm
% = unraser

dirt = dirtm or dirtu
Player = PlayerS or PlayerU
Helpers = h_grav or scrolling or h_step
Pickups = shoes or Eraser or Unraser
Heldpickups = shoesworn
Solid = Dirt or Player or Rock or Pickups or enemy
Heavy = Rock or Pickups or enemy
overlays = pickupoverlay or enemyoverlay
Everything = Solid or tempwall or overlays

=======
SOUNDS
=======
SFX1 36137902
SFX2 78903905
SFX3 14420703
SFX4 25525902
SFX5 49701704
SFX6 98046907
SFX7 16284302
SFX8 96668708
SFX9 86449100
================
COLLISIONLAYERS
================

helpers
Background
tempwall, solid
Heldpickups
overlays
destroy, inflow, exit


======
RULES
======

up [ > PlayerU ] -> cancel
down [ > PlayerU ] -> [ PlayerS ]

(digging/jumping up)
up [ > PlayerS | no Solid | no Solid no inflow ] -> [ | | PlayerU scrolling ] SFX2
up [ > PlayerS | no Solid | Dirt no inflow ] -> [ | | PlayerU scrolling ] SFX7
up [ > PlayerS | no Solid no inflow ] -> [ | PlayerU scrolling ] SFX2
up [ > PlayerS | Dirt no inflow ] -> [ | PlayerU scrolling ] SFX7

(scrolling and terraingen)
[ scrolling ] [ Everything destroy ] -> [ scrolling ] [ destroy ]
[ scrolling ] [ inflow no Player ] -> [ scrolling ] [ inflow tempwall ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow enemyoverlay ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow enemyoverlay ]



startloop
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ ]
random [ tempwall ] -> [ ]
random down [ tempwall | solid ] -> [ rock | Solid ]
random down [ tempwall | solid ] -> [ rock | Solid ]
endloop


[ pickupoverlay rock ] -> [ random pickups]
[ enemyoverlay rock ] -> [ enemy ]

random down [ Solid inflow | rock | rock ] -> [ rock inflow | rock | rock ]
[ no Solid | inflow Solid | no Solid ] -> [ | inflow | ]
[ no Solid | inflow Solid | inflow Solid | no Solid ] -> [ | inflow | inflow | ]


down [ scrolling ] [ Everything ] -> [ scrolling ] [ > Everything ]


(gravity)
down [ Heavy ] -> [ down Heavy ] again

(up [ > PlayerS | no Solid ] [ Everything destroy ] -> [ > PlayerS scrolling | ] [ destroy ]
up [ > PlayerS | Dirt ] [ Everything destroy ] -> [ > PlayerS scrolling | dirt ] [ destroy ]
down [ Everything ] [ Player scrolling ] -> [ > Everything ] [ PlayerU scrolling ]
)

(movement in general)
horizontal [ > PlayerU | Dirt ] -> [ | PlayerS ] SFX1
horizontal [ > PlayerU ] -> [ > PlayerS ]

[ action PlayerU ] -> [ PlayerS ]
[ > Player | Dirt ] -> [ | Player ] SFX1


(use pickup)

up [ action PlayerS shoesworn | Solid | no inflow no exit ] -> [ | Solid | PlayerS ] SFX4
up [ action PlayerS shoesworn | | Solid | no inflow no exit ] -> [ | | Solid | PlayerS ] SFX4
up [ action PlayerS shoesworn | | | | no inflow no exit ] -> [ | | | | PlayerU ] SFX4

(pushing)
Horizontal [ > Player | Heavy ] -> [ > Player | > Heavy ] SFX6
Horizontal [ > Heavy | Heavy ] -> [ > Heavy | > Heavy ]
Horizontal [ > Enemy | Dirt ] -> [ > Enemy | ] SFX1
Horizontal [ > Enemy | pickups | Solid ] -> [ > Enemy | | Solid ] SFX4
([Enemy h_dead no h_grav] -> message flattened to death)
(down [ Enemy h_dead | destroy ] -> [ Enemy | destroy ] message flattened to death)
([ > Enemy | Player ] -> [ | Enemy h_dead ] SFX5)
([ moving Enemy h_dead ] -> [ moving Enemy moving h_dead ])
[ moving Enemy h_grav ] -> [ moving Enemy moving h_grav ]
down [ > Enemy h_grav | Solid no Player no Enemy ] -> [ | Enemy ] SFX4
down [ > Enemy | Player ] -> [ > Enemy | ] SFX4




(pickup)

[ > Player | shoes ] -> [ | stationary Player shoesworn ] SFX3

[ > Player | Eraser ] [ Solid no Player no Pickups ] -> [ > Player | Eraser ] [ DirtM ]
startloop
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Rock ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
endloop
[ > Player | Pickups ] -> [ | stationary Player ] SFX8

(steps)
up [ PlayerS | no Solid ] -> [ PlayerS | h_step ]
[ moving PlayerS ] [ h_step ] -> [ moving PlayerS ] [ moving h_step ]

(late steps)
late down [ h_step | Player ] -> [ | Player ]
late [h_grav] [h_step] -> [h_grav] []
late down [ h_step no Solid | no Player ] [ PlayerS ] -> [ PlayerS | ] [ ]
late down [ h_step Dirt | no Player ] [ PlayerS ] -> [ PlayerS | ] [ ] SFX1

(player gravity)
late down [ PlayerS | h_grav ] -> [ | PlayerS ]
late down [ PlayerS | no Solid ] -> [ PlayerS | h_grav ]

late [ Player no shoesworn] [ shoesworn ] -> [ Player shoesworn ] [ ]

(enemy gravity)
late down [ enemy | no Solid ] -> [ enemy h_grav | ]
late down [ enemy | Player ] -> [ enemy h_grav | ]


(cleanup)
late [scrolling] -> []
late [overlays] -> []
late [h_step] -> []

(beautify)
late up [ Dirtm | no Dirt ] -> [ DirtU | ]
late up [ DirtU | Dirt ] -> [ Dirtm | Dirt ]

(death)
[ Player destroy ] -> [ destroy ] SFX4

(life)
late [ Player exit ] [ exit no Player ] -> [ Player exit ] [ ] SFX9
==============
WINCONDITIONS
==============
all exit on player
=======
LEVELS
=======

message Survive. x to use held item.
$$$$$$$$$$$$$$$$$$$
eeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeee
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
#########P#########
###################
###################
###################
###################
###################
###################
@@@@@@@@@@@@@@@@@@@

message Is that a light at the end of the tunnel?
$$$$$$$$$$$$$$$$$$$$$$$$$
eeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeee
o.......................o
o.......................o
o..x.x.x.x.xpx.x.x.x.x..o
o#.#.#.#.#.#x#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.......................o
o.......................o
o.......................o
o.......................o
o......#................o
o.....##..............#.o
o....###...%...#..#..##.o
###..############.#######
########.##.#############
####.#####..#############
########.....############
#########################
#########################
@@@@@@@@@@@@@@@@@@@@@@@@@

title Colour Chained
author Dennis Au
youtube _VzrmRkLfxM
run_rules_on_level_start
again_interval 0.015
noundo

(version 201310152126 - added some harder levels, added sfx for rotate and drop, decided to use noundo)
(version 201310142256 - tweaked scoring, added pop animation and reworked code)

========
OBJECTS
========
Background
Black

P1 p
Black
0...0
.....
.....
.....
0...0

P2 q
Black
0...0
.....
.....
.....
0...0

hasN
Orange
0....
.....
.....
.....
....0

Remove
White
.....
.....
.....
.....
.....


NP1 n
White
.....
.....
.....
.....
.....

NP2 m
White
.....
.....
.....
.....
.....

LoseFlag
Grey Black LightGrey
.....
10120
.....
02010
.....

PieceGen
Black

HBorder -
DarkGrey
.....
.....
0...0
.....
.....

VBorder |
DarkGrey
..0..
.....
.....
.....
..0..

(pieces)
C1 R
Red LightGrey Black
.000.
00010
00000
00000
.000.

C2 G
Green LightGrey Black
.000.
00010
00000
00000
.000.

C3 B
Blue LightGrey Black
.000.
00010
00000
00000
.000.

C4 Y
Yellow LightGrey Black
.000.
00010
00000
00000
.000.

(Numbers)
No1 1
DarkGrey
..0..
.00..
..0..
..0..
.000.

No2 2
DarkGrey
.00..
0..0.
..0..
.0...
0000.

No3 3
DarkGrey
000..
...0.
.00..
...0.
000..

No4 4
DarkGrey
..0..
.00..
0.0..
0000.
..0..

No5 5
DarkGrey
0000.
0....
000..
...0.
000..

No6 6
DarkGrey
.00..
0....
000..
0..0.
.00..

No7 7
DarkGrey
0000.
...0.
..0..
.0...
0....

No8 8
DarkGrey
.00..
0..0.
.00..
0..0.
.00..

No9 9
DarkGrey
.00..
0..0.
.000.
...0.
.00..

No0 0
DarkGrey
.00..
0..0.
0..0.
0..0.
.00..

Pop
LightGrey White
...1.
..101
...1.
.....
.....

Inc
Black

PlayArea
Green


=======
LEGEND
=======
. = Background
u = PieceGen
+ = Inc

Player = P1 or P2
Piece = C1 or C2 or C3 or C4
PieceB = Piece

NP = NP1 or NP2
Border = HBorder or VBorder
Score = No1 or No2 or No3 or No4 or No5 or No6 or No7 or No8 or No9 or No0

Obstacle = Piece or Score
Match3Logic = hasN or Remove or Pop

=======
SOUNDS
=======
startlevel 17589703

(death)
sfx0 45317502

(match3)
sfx1 530500

(piece drop)
sfx2 75273507

(piece rotate)
sfx3 21774107

================
COLLISIONLAYERS
================
PlayArea
Background
Player, NP, PieceGen, Border
Piece, Score, Inc,
Match3Logic, LoseFlag

======
RULES
======
(set preview area)
[] -> [PlayArea]
Down [NP|PlayArea] -> [NP|]
Vertical [No PlayArea| PlayArea] -> [|]

(match 3 rules)
Right [C1|C1] -> [C1 hasN|C1 hasN]
Right [C2|C2] -> [C2 hasN|C2 hasN]
Right [C3|C3] -> [C3 hasN|C3 hasN]
Right [C4|C4] -> [C4 hasN|C4 hasN]

Vertical [C1 hasN|C1] -> [Remove C1| Remove C1]
Vertical [C2 hasN|C2] -> [Remove C2| Remove C2]
Vertical [C3 hasN|C3] -> [Remove C3| Remove C3]
Vertical [C4 hasN|C4] -> [Remove C4| Remove C4]

[Remove C1| C1] -> [Remove C1| Remove C1]
[Remove C2| C2] -> [Remove C2| Remove C2]
[Remove C3| C3] -> [Remove C3| Remove C3]
[Remove C4| C4] -> [Remove C4| Remove C4]

[C1|C1|C1] -> [Remove C1|Remove C1|Remove C1]
[C2|C2|C2] -> [Remove C2|Remove C2|Remove C2]
[C3|C3|C3] -> [Remove C3|Remove C3|Remove C3]
[C4|C4|C4] -> [Remove C4|Remove C4|Remove C4]

[hasN] -> []

[PlayArea Remove Piece][P1] -> [PlayArea Pop][P1] sfx1
random [Pop][inc] -> [][left inc] again


(down drops pieces)
Down [> Player Piece|No Piece] -> [Player|> Piece] sfx2
Down [> Player No Piece] -> Cancel


(x rotates clockwise)
[Up P1|P2] -> [> P1|v P2] sfx3
[Action P1|P2] -> [> P1|v P2] sfx3
[Moving Player Piece] -> [Moving Player Moving Piece]
[> Player| Border] -> cancel


(gravity)
Down [PlayArea Piece No Player|No Obstacle][stationary inc] -> [PlayArea|> Piece][stationary inc] again


(explicit loss if piece ends on border)
[Piece Border][stationary inc][P1] -> [Piece Border LoseFlag][inc][] sfx0
[LoseFlag|No LoseFlag] -> [LoseFlag|LoseFlag] again


(scoring)

left [> inc| score] -> [> inc| > score]
left [> No9| score] -> [No0|> score]
left [> No9| border] -> [No0| border]

left [> No0] -> [No1]
left [> No1] -> [No2]
left [> No2] -> [No3]
left [> No3] -> [No4]
left [> No4] -> [No5]
left [> No5] -> [No6]
left [> No6] -> [No7]
left [> No7] -> [No8]
left [> No8] -> [No9]


(preview area)

startloop
(for endless mode)
[PieceGen No Piece] -> [PieceGen Random Piece]
(antigrav)
Up [Piece No PlayArea No NP| No Obstacle] -> [|> Piece]
(get next piece)
[P1 no Piece][P2 no Piece][NP1 Piece|NP2 PieceB]-> [P1 Piece][P2 PieceB][NP1|NP2]
endloop


==============
WINCONDITIONS
==============
No Piece
No Pop

=======
LEVELS
=======
(Empty Level Template

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
..|000000+

)

nm|..pq..|
RR|......|
..|------|
..|......|
..|......|
..|......|
..|..Y...|
..|..RR..|
..|R.YY..|
..|000000+

nm|..pq..|
GR|......|
..|------|
..|......|
..|......|
..|....B.|
..|...BG.|
..|...RG.|
..|.R.RB.|
..|000000+

nm|..pq..|
RR|......|
BB|------|
BR|......|
..|......|
..|......|
..|......|
..|....B.|
..|..RRB.|
..|000000+


nm|..pq..|
BG|......|
RB|------|
..|......|
..|......|
..|......|
..|......|
..|..GB..|
..|RRGB..|
..|000000+

nm|..pq..|
BG|......|
GB|------|
..|......|
..|......|
..|......|
..|...G..|
..|..BB..|
..|..GG.B|
..|000000+

nm|..pq..|
RG|......|
GB|------|
BR|......|
..|......|
..|......|
..|...G..|
..|...B..|
..|..RRG.|
..|000000+

nm|..pq..|
GR|......|
RY|------|
BG|......|
YB|......|
..|......|
..|..B...|
..|..RB..|
..|.GYB..|
..|000000+

nm|..pq..|
RG|......|
YY|------|
YG|......|
BB|......|
..|BY....|
..|YB.G..|
..|YRRG..|
..|BGGBBY|
..|000000+

nm|..pq..|
rb|......|
bb|------|
by|......|
ry|......|
..|....r.|
..|...rb.|
..|.bybyb|
..|bybyrr|
..|000000+

nm|..pq..|
br|......|
ry|------|
yy|......|
..|....b.|
..|...gb.|
..|...yy.|
..|.bygb.|
..|byrgrr|
..|000000+


nm|..pq..|
by|......|
ry|------|
ry|......|
yg|....y.|
..|..rgby|
..|b.gbyg|
..|rrgbyg|
..|bbyyrr|
..|000000+


message Thank you for playing.
message Music: Puzzle Pieces - Desert of Lost Endings by Nick Tanski (nicholastanski.bandcamp.com)

(endless mode)
message Endless Mode unlocked!

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
uu|000000+

(CC BY-NC-SA 3.0)

title BROKEN Rigid Body example
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(

BROKEN Example Game FOR ILLUSTRATION PURPOSES ONLY. DO NOT USE.

Example for
https://www.puzzlescript.net/Documentation/rigidbodies.html#many_many

)

========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

Shadow
Black
..0..
0.0..
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
S = Shadow
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Shadow or Movable 

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

[ > player ] [ stationary shadow ] -> [ > player ] [ < shadow ]

( 1. Propagate movements forward )
[ > Mover | stationary Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ stationary Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ stationary Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ stationary Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | stationary Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]

	(the next lines deal with directional conflicts)
+ [ ^ Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ ^ Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ ^ Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ v Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ v Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ v Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ < Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ < Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ < Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ > Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ > Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ > Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

(also one space removed)
+ [ > Mover | |  < Mover ] -> [ stationary Mover | |  < Mover ] 

+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | stationary Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ stationary Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ stationary Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ stationary Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | stationary Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]


==============
WINCONDITIONS
==============

=======     
LEVELS
=======

#########
#.......#
#..p...p#
#.......#
#.......#
#..***..#
#.......#
#s...S..#
#.......#
#########

#########
#.......#
#.......#
#.......#
#...s...#
#..+++..#
#...p...#
#.......#
#.......#
#########


title tiny treasure hunt 1.0
author Weeble
homepage www.twitter.com/weeble
run_rules_on_level_start

========
OBJECTS
========
LowFloorRaw
BLACK

LowFloor1
#111411 #191d19 #202020 #252725
01011
12310
23320
02321
02110

LowFloor2
#111411 #191d19 #202020 #252725
01001
22312
12331
01310
10101

WallFacade
#555555 #666666 #777777
21221
10011
.....
.....
.....

HighFloor
#909090 #999999 #bbbbbb #cccccc
33232
31012
20002
31012
32222

LowPlayer
#686868 #707070 #787878 #808080
.....
.....
.232.
.121.
.0.0.

HighPlayer
#e8e8e8 #f0f0f0 #f8f8f8 #ffffff
.232.
.121.
.0.0.
.....
.....

Crate
#999944 #88883a #777733
10001
00000
10001
22222
22222

HighCrate
#dddd55 #eeee50 #cccc48
10001
00000
10001
22222
22222

BurntCrate
#222222 #111111 #000000
10001
00000
10001
22222
22222

MeltingIce
White LightBlue #9999ff #330000
.33..
3333.
31013
11330
21112


StaticIce
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeN
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeE
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeS
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

IceCubeW
White LightBlue #9999ff
10002
1...0
0...1
10012
21122

FirePit1
#990000 #770000 #550000 #330000
02111
13321
02321
32110
23121

FirePit2
#990000 #770000 #550000 #330000
10311
21233
11021
23213
20122


Pillar
#cccccc #dddddd #eeeeee #ffffff #bbbbbb #aaaaaa
32123
33333
02120
22122
01310

IceCubeShadow
RED
.....
.....
..0..
.....
.....

Coin
WHITE #eeee55 #aaaa33
.000.
01112
01212
01112
.222.


StairsNorth
#333333 #444444 #555555 #666666 #777777
44444
43334
32223
21112
10001
=======
LEGEND
=======
. = LowFloorRaw
" = HighFloor
@ = LowPlayer and LowFloorRaw
$ = Coin and HighFloor
£ = Coin
H = HighCrate and HighFloor
: = WallFacade and FirePit1 and LowFloorRaw
~ = WallFacade and LowFloorRaw
# = Crate and LowFloorRaw
W = Crate and LowFloorRaw and WallFacade
! = FirePit1 and LowFloorRaw
I = Pillar and HighFloor
% = StaticIce and LowFloorRaw
& = StaticIce and LowFloorRaw and WallFacade
/ = StairsNorth and LowFloorRaw
FirePit = FirePit1 or FirePit2
LowFloor = LowFloor1 or LowFloor2
Background = LowFloor or HighFloor or LowFloorRaw
Player = LowPlayer or HighPlayer
Obstacle = StairsNorth
BlocksLow = Crate or HighFloor or StaticIce or Pillar or BurntCrate
Pushable = Crate or StaticIce
MovingIce = IceCubeE or IceCubeS or IceCubeW or IceCubeN
IceCube = StaticIce or MovingIce
Grounded = IceCube or LowPlayer or Crate

=======
SOUNDS
=======

Coin DESTROY 77169700
Crate MOVE 24442507
SFX0 98605308 ( Hiss )
SFX1 89033504 ( Snap )
SFX2 70543502 ( Plink )
SFX3 34905302 ( Slam )
SFX4 93355705 ( Squeak )
SFX5 52776702 ( Grind )
SFX6 86238705 ( Bounce )

================
COLLISIONLAYERS
================

Background
StairsNorth, FirePit
WallFacade
Crate, IceCube, MovingIce, LowPlayer, MeltingIce, BurntCrate
Pillar, HighPlayer, HighCrate, Coin
IceCubeShadow

======
RULES
======

(Make stuff pretty)
[ LowFloorRaw ] -> [ random LowFloor ]
[ FirePit ] -> [ random FirePit ]

(Pushing stuff)
[ > LowPlayer | Pushable ] -> [ > LowPlayer | > Pushable ]
[ > HighPlayer | HighCrate ] -> [ > HighPlayer | > HighCrate ]

(Don't walk under pillars. Probably redundant.)
[ > Grounded | Pillar ] -> [ Grounded | Pillar ]

(Ice melts in lava)
[ MeltingIce FirePit ] -> [ ]
[ IceCube FirePit ] -> [ MeltingIce FirePit ] sfx0 again

(Ice slides)
RIGHT [ > StaticIce ] -> [ > IceCubeE ] sfx2
DOWN [ > StaticIce ] -> [ > IceCubeS ] sfx2
LEFT [ > StaticIce ] -> [ > IceCubeW ] sfx2
UP [ > StaticIce ] -> [ > IceCubeN ] sfx2
[ MovingIce no IceCubeShadow ] -> [ MovingIce IceCubeShadow ]
RIGHT [ IceCubeE ] -> [ > IceCubeE ] again
DOWN [ IceCubeS ] -> [ > IceCubeS ] again
LEFT [ IceCubeW ] -> [ > IceCubeW ] again
UP [ IceCubeN ] -> [ > IceCubeN ] again

(Stop things from overlapping the stairs)
[ > IceCube | Obstacle ] -> [ StaticIce | Obstacle ]
[ > Crate | Obstacle ] -> [ Crate | Obstacle ]

(Lava kills you)
late [ LowPlayer FirePit ] -> [ FirePit ] sfx5 message Ouch, hot!

(More ice rules)
late [ MovingIce IceCubeShadow ] -> [ StaticIce ] sfx5
late [ IceCubeShadow ] -> [ ]

(Crates get charred in lava)
late [ Crate FirePit ] -> [ BurntCrate FirePit ] sfx5

(Player collects coins)
[ > HighPlayer | Coin HighFloor ] -> [ | HighPlayer HighFloor ]
[ > LowPlayer | Coin LowFloor ] -> [ | LowPlayer LowFloor ]

(Player can climb stairs)
UP [ > LowPlayer StairsNorth | HighFloor ] -> [ StairsNorth | HighPlayer HighFloor ] sfx6

(Stop things from getting pushed up onto ledges)
[ > Grounded | HighFloor ] -> [ Grounded | HighFloor ]

(Players and crates fall)
late [ HighPlayer no BlocksLow ] -> [ LowPlayer ] sfx1 again
late [ HighCrate no BlocksLow ] -> [ Crate ] sfx1 again

==============
WINCONDITIONS
==============

No Coin

=======
LEVELS
=======

message 1. the outer walls

""""""!!!"""
"h""""..!"$"
""""""#.!"""
""""""..!"""
i~~/i/..!:::
"..."...!!!!
i"""i.......
"/~~"!!...#.
i.@.i!!.....

message 2. cold storage

..........£
.!!!!!!!!!.
.!!!!!!!!!.
.!!.%%%.!!.
.!!%...%!!.
.!!%.@.%!!.
.!!%...%!!.
.!!.%%%.!!.
.!!!!!!!!!.
.!!!!!!!!!.
...........


message 3. bifrost

!!.@.""""!!
!!%.."~/"!!
!!.%.&..~!!
!!%..%...!!
!!.%.%.%.!!
!!%..%..%!!
!!.%.%.%.!!
!!...%..%!!
!!...%.%.!!
!!$.."..%!!
!!"""".%.!!


message 4. clutter

""""""""""$
"""""""""""
~~~~W~W~~::
.%@.#..#.!!
....#.#..!!
!!!!"""""..
!!!!"""""..
....~/~~~..
...........

message 5. arena

!"!!!!!!!!!"
!~.."..""..:
!...~../~$.!
!"......@~.!
!~...".....!
!....~.%...!
!....%.....!
!."....%...!
!.~......."!
!.."......~!
!".~..."...!
!:!!!!!:!!!!


message 6. the gauntlet


..""."."."..!!!
..w~."#".~#.!"!
""...~.~#.."!~!
~&..@......~!£!
""....#"""."!.!
~~...#."/"#~!"!
.......~."..!:!


message 7. throne room

...#."$".#...
..#.."""..#..
!!.#.:::.#.!!
$"!...!...!"$
""!.!!!!!.!""
~~!.!h"h!.!~~
.#!!!"""!!!#.
.....h"h.....
"!!.."""..!!"
""!..~/~..!""
"""...@..."""
:~~.%.%.%.~~:
!...........!

message Well done!


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Crops & Knights
author YourName
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen

Player
blue
..0..
.000.
00.00
..0..
.....

Soil
brown
.....
.....
..0..
.....
.....

Seed
yellow
.....
..0..
.....
.....
.....

Sprout
yellowgreen
.....
.....
..0..
.....
.....

Crop
green
.....
..0..
.....
.....
.....

Castle
darkgray
.000.
0...0
0...0
0...0
.000.

Wall
darkbrown lightbrown
11111
11111
11111
11111
11111

=======
LEGEND
=======

. = Background
P = Player
s = Soil
d = Seed
r = Sprout
c = Crop
# = Wall
H = Castle

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Castle, Wall
Player, Soil, Seed, Sprout, Crop

======
RULES
======

[ Player | Soil ] -> [ Player | Seed ] 
[ Player | Seed ] -> [ Player | Sprout ]
[ Player | Sprout ] -> [ Player | Crop ]

==============
WINCONDITIONS
==============

All Crop on Castle

=======
LEVELS
=======

#.###..#####
##......d..#
#d..P..c...H
##........##
#...###..###

..c...######
##...d.....#
##.#r..#...#
#H..d..##.P#
######.#####

######
#d..H#
#r.Pd#
##...#
######

message Level 0: Grow crops on the castle!

#.##H..#####
##......d..#
#d..P......#
##......c..#
#...###..###


message Level 1: Continue your farming strategy!

##c...######
##...d.....#
##.#r..#...#
#H..d..##.P#
######.#####

message Level 2: Protect the castle!

######
#d..H#
#r.Pd#
##...#
######

```
compiled, but a solvability check returned the following error:
 Level 0 is not solvable. Please repair it. Level 1 is not solvable. Please repair it. Level 2 is not solvable. Please repair it. Level 4 is not solvable. Please repair it. Level 6 is not solvable. Please repair it. Level 8 is not solvable. Please repair it.
The game should be a simplified `demake` of the following game idea: **Crops & Castles:** Harvest enchanted produce to gain spells and power up your medieval kingdom in this strategic farming and tower defense hybrid.. Return your code in full, inside a ```plaintext code block.