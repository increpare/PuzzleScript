SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Take Heart Lass
author Kevin Zuhn
homepage www.kevinzuhn.com

========
OBJECTS
========

Background
LightGreen Green
11111
11011
10101
11011
11111

BackFlowers
Green Purple Yellow
10001
00100
01210
00100
10001

Target
RED LightRed
.0.0.
01010
01110
.010.
..0..

Wall
Red DarkGreen
00000
00100
01010
00100
00000

DespairWall
DarkBrown DarkBlue
00000
00100
01010
00100
00000

NewDespairWall
DarkRed DarkBlue
00000
00100
01010
00100
00000

Player
Blue LightRed Yellow DarkBlue
.333.
.323.
20002
.111.
.000.

OldHope
White Pink
11111
11011
10101
11011
11111

NewHope
White LightRed
11111
11011
10101
11011
11111

Crate
Pink White
.0.0.
01010
01110
.010.
..0..

OldDespair
Black DarkBlue
01010
10101
01010
10101
01010

AltOldDespair
Black DarkBlue
10101
01010
10101
01010
10101

NewDespair
DarkBlue DarkGray
01010
10101
01010
10101
01010

AltNewDespair
DarkBlue DarkGray
10101
01010
10101
01010
10101

=======
LEGEND
=======

. = Background
f = BackFlowers
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target
X = OldDespair
Z = AltOldDespair
H = OldHope

Despair = OldDespair or NewDespair or AltOldDespair or AltNewDespair
Hope = OldHope or NewHope
Blocker = Despair or Crate or Target or Wall or Player or DespairWall or NewDespairWall or Hope
HopeBlocker = Crate or Target or Wall or DespairWall or NewDespairWall or Hope


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target, BackFlowers, Hope
Player, Wall, Crate, Despair, NewDespair, DespairWall, NewDespairWall

======
RULES
======

[NewDespair] -> [OldDespair]
[AltNewDespair] -> [AltOldDespair]
[NewDespairWall] -> [DespairWall]
[NewHope] -> [OldHope]
late [OldDespair | No Blocker] -> [OldDespair | AltNewDespair]
late [AltOldDespair | No Blocker] -> [AltOldDespair | NewDespair]
late [OldDespair | Wall] -> [OldDespair | NewDespairWall]
late [DespairWall | Wall] -> [DespairWall | NewDespairWall]
late [OldHope | No HopeBlocker] -> [ OldHope | NewHope]

[> Player | Crate] -> [> Player | > Crate]
[> Crate | Blocker] -> [ Crate | Blocker ]

late [Target | Despair] -> [ Target |  ]
late [Despair Target] -> [Target]
late [Crate | Despair] -> [ Crate |  ]
late [Hope Despair] -> [Hope]
late [Hope | DespairWall] -> [Hope | Wall]
late [Hope | NewDespairWall] -> [Hope | Wall]

==============
WINCONDITIONS
==============

Some Player on Target

=======
LEVELS
=======

message You have love in your heart, Lass.

######
#...x#
#.ff.#
#.ff.#
#o..P#
######

message So your heart can weather Despair.

#########
#x.f...f#
#.#.....#
#.p.f#..#
#.#..#f.#
#xzf...o#
#########

message And you've others who love you.

#########
#x......#
#...#...#
#p..*..##
#...#...#
#x.....o#
#########

message The war can't last forever, Lass.

########
#.#zx#p#
#....*.#
#......#
#o#*.#.#
########

message Think of the time we shared.

###########
#.........#
#.*#.o.####
#..*###...#
#.......*.#
#......#..#
####...####
#x.......p#
###########

message Then bottle your grief up tight.

###########
#o........#
####.##.#.#
#.....*.#.#
#.#.###.#.#
#.#....*..#
#.#*.#.##.#
#x#...p#z.#
###########

message I wish I could be there, Lass.

###########
#...o...zx#
#.#.....#z#
#...#.#...#
#.........#
#..**.**..#
#z........#
#xz......p#
###########

message You're loved. You'll find a way.

###########
#....o....#
#..#####..#
#.#.....#.#
#...*p*...#
#....*....#
#...###...#
#x.......x#
###########

message There is always Hope, Lass.

###########
#........H#
#.......p.#
#x........#
#zx.......#
#xzx......#
#zxzx.....#
#ozxzx....#
###########

message  It may waver, but it stays lit.

###########
#....p....#
###.#*#.###
#x.......x#
###.*.*.###
#HH*.....x#
###.#.#.###
#x.......o#
###########

message Temper your hope with wisdom.

############
#......zxzx#
#.##.##.####
#......*...#
#.*p.#.#.#o#
#...*.*.*#.#
####.###...#
#H.........#
############

message Save no Despair for me, Lass.

##################
#..*.#H#o........#
#...*..#######.#.#
#.##.#########.#*#
#.#.....*....#.#.#
#H#...#.p..#z.*H*#
###...#.#*##...#.#
#...##z.....#*.xz#
#.*.......*...xzx#
#x...#.*....#xzxz#
##################

message For I have hope as well.
message Take Heart, Lass. Goodbye.

title Ebony & Ivory
author Guilherme TÃ¶ws
homepage zarat.us

========
OBJECTS
========

Background
Purple

Gray
GRAY

White
WHITE

Black
BLACK

PlayerRed
Red
.....
.000.
.000.
.000.
.....

PlayerGold
Yellow
.....
.000.
.000.
.000.
.....


=======
LEGEND
=======

. = White
, = Black
# = Gray
: = PlayerRed and White
; = PlayerRed and Black
Player = PlayerRed or PlayerGold

=======
SOUNDS
=======

SFX0 72488907

================
COLLISIONLAYERS
================

Background
Black, White, Gray
Player

======
RULES
======

[ PlayerGold ] -> [ PlayerRed ]
[ >  Player White | Black ] -> [  > Player White | > Black ]
[ >  Player Black | White ] -> [  > Player Black | > White ]
[ > Black | White ] -> [ White | Black ] SFX0
[ > White | Black ] -> [ Black | White ] SFX0
[ >  Player White |  Black ] -> [  Player White |  Black ]
[ >  Player Black |  White ] -> [  Player Black |  White ]
[ >  Player |  Gray ] -> [  Player |  Gray ]
late [ Player | PlayerRed ] -> [ Player | PlayerGold ]

==============
WINCONDITIONs
==============

No PlayerRed

=======
LEVELS
=======

########
#..,,,,#
#.:.,.,#
#...,,,#
#.,.,;,#
#....,,#
########

title Simple Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BlueCrate B
lightblue
00000
0...0
0...0
0...0
00000


OrangeCrate O
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

Crate = OrangeCrate or BlueCrate
. = Background
# = Wall
P = Player


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]


[ > OrangeCrate | OrangeCrate ] -> [ > OrangeCrate | > OrangeCrate ]
[ > OrangeCrate | BlueCrate ] -> [ > OrangeCrate | > BlueCrate ]
[ > BlueCrate | OrangeCrate ] -> [ > BlueCrate | > OrangeCrate ]
[ > BlueCrate | BlueCrate ] -> [ > BlueCrate | > BlueCrate ]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

################
#..............#
#..............#
#.P.BOBOBOBOB..#
#..............#
#..............#
################



(
level ideas
push battery horizontally
have to assemble and then disassemble a circuit, in order to complete it
add a piece to a circut, then break the circuit from another point
level that starts with a closed circuit
level with very dangerous + block
)
title Robot Arm
author increpare
homepage www.increpare.com

run_rules_on_level_start
color_palette c64

run_rules_on_level_start

norepeat_action

========
OBJECTS
========

Background .
darkblue

Player P
Black orange grey Blue
.111.
.111.
22222
13331
.3.3.

R0_Up 0
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R0_Right
grey lightgrey
.111.
10001
10001
10001
.111.


R1_Up 1
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R1_Right
grey lightgrey
.111.
10001
10001
10001
.111.


R2_Up 2
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Down
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Left
grey lightgrey
.111.
10001
10001
10001
.111.

R2_Right
grey lightgrey
.111.
10001
10001
10001
.111.

R3 3
grey lightgrey
.....
..0..
.010.
..0..
.....

Connector_Up
grey lightgrey
.101.
.111.
.....
.....
.....

Connector_Down
grey lightgrey
.....
.....
.....
.111.
.101.

Connector_Left
grey lightgrey
.....
11...
01...
11...
.....

Connector_Right
grey lightgrey
.....
...11
...10
...11
.....

Moved
transparent

Parent
transparent

GrandParent
transparent

NewRot
transparent

NewRot2
transparent

force
transparent

explosion
red yellow
.101.
10101
01010
10101
.101.

explosionb
red yellow
.101.
10101
01010
10101
.101.

explosion2
yellow red
.101.
10101
01010
10101
.101.

Wall #
darkgrey grey lightgrey
00000
01110
01010
01110
00000

water ,
blue lightblue
00000
00010
00000
00000
01000

Fruit F
Red Green LightRed
..1..
.000.
00020
00000
.000.


FruitPicked G
Red Green LightRed grey grey
..4..
.030.
43334
00300
.040.

DeadFruit
black black black black black
..4..
.030.
43334
00300
.040.

EndPoint E
darkgreen Yellow black green
30003
02220
02220
02220
30003


=======
LEGEND
=======
R0 = R0_up or R0_down or R0_left or R0_right
R1 = R1_up or R1_down or R1_left or R1_right
R2 = R2_up or R2_down or R2_left or R2_right
RobotPiece = R0 or R1 or R2 or R3
* = RobotPiece or Player
connector = connector_up or connector_down or connector_left or connector_right

=======
SOUNDS
=======

sfx0 43004308 (explosion)
sfx1 69392707
sfx2 57370907 (push machine)
sfx3 62083508 (rotate machine)
sfx4 90419908 (grab)
sfx5 50782902 (drop in hole)
sfx6 76878101 (empty grab)
sfx7 13941101 (dead fruit)
sfx8 42541302 (release)
Player move 88476108
startgame 30513908
endlevel 5524308
endgame 5524308
showmessage 41852908
closemessage 41852908

================
COLLISIONLAYERS
================
Background
water
EndPoint
Player
Moved
Fruit
FRUITPICKED
deadfruit
R0_up, R0_down, R0_left, R0_right
R1_up, R1_down, R1_left, R1_right
R2_up, R2_down, R2_left, R2_right
connector_up
connector_down
connector_left
connector_right
R3
parent
GrandParent
newrot
newrot2
force
wall
explosion, explosion2, explosionb

======
RULES
======

[ connector ] -> [ ]

[ > player | fruit ] -> cancel

[ > player | water ] -> cancel

[ > player | ] -> [ > player | > force ]

[ > player | robotpiece | wall ] -> cancel

(place movement arrows)
up [ R0_Up | ] -> [ up R0_Up | up Parent ]
up [ R1_Up | ] -> [ up R1_Up | up Parent ]
up [ R2_Up | ] -> [ up R2_Up | up Parent ]

down [ R0_down | ] -> [ down R0_down | down Parent ]
down [ R1_down | ] -> [ down R1_down | down Parent ]
down [ R2_down | ] -> [ down R2_down | down Parent ]

left [ R0_left | ] -> [ left R0_left | left Parent ]
left [ R1_left | ] -> [ left R1_left | left Parent ]
left [ R2_left | ] -> [ left R2_left | left Parent ]

right [ R0_right | ] -> [ right R0_right | right Parent ]
right [ R1_right | ] -> [ right R1_right | right Parent ]
right [ R2_right | ] -> [ right R2_right | right Parent ]


( force propagation like this isn't very nice )
( [ > force < parent | ] -> [ < parent | > force ] )

[ R3 > force < parent ] [ > R0 ] [ v R1 ] [ R2 ] -> [ R3 < parent ] [ > R0 ] [ v R1 ] [ r2 > force ]
[ R3 > force < parent ] [ > R0 ] [ ^ R1 ] [ R2 ] -> [ R3 < parent ] [ > R0 ] [ ^ R1 ] [ r2 > force ]

[ > force < parent no R0] [R0]-> [ < parent ] [ > force R0 ]
[ > force R3 perpendicular parent ] [ R2 < parent ] [ R0 ] -> [ R3 perpendicular parent ] [ R2 < parent ] [ > force R0 ]

[ > force R2 perpendicular parent ] [ R1 < parent ] [ R0 ] -> [ R2 perpendicular parent ] [ R1 < parent ] [ > force R0 ]


[ > force moving R0 | ] -> [ | moving R0] sfx2

[ > force moving R1 perpendicular parent ] [ R0 ] -> [ moving R1 perpendicular parent ] [ > R0 ] sfx3
[ > force moving R2 perpendicular parent ] [ R1 ] -> [ moving R2 perpendicular parent ] [ > R1 ] sfx3
[ > force 		R3 perpendicular parent ] [ R2 ] -> [ R3 perpendicular parent ] [ > R2 ] sfx3


(rebuild arm)

(add new parents)

[ > R1 ] [ R2 ] -> [ > R1 ] [ R2 > NewRot ]
[ > R0 ] [ R1 ] [ R2 ] -> [ > R0 ] [ R1 > NewRot ] [ R2 > NewRot2 ]

[ > Parent R1 ] [ R2 ] -> [ > Parent R1 ] [ > GrandParent R2 ]

[ ^ Parent > NewRot > RobotPiece ] -> [ V RobotPiece ]
[ ^ Parent > NewRot v RobotPiece ] -> [ < RobotPiece ]
[ ^ Parent > NewRot < RobotPiece ] -> [ ^ RobotPiece ]
[ ^ Parent > NewRot ^ RobotPiece ] -> [ > RobotPiece ]

[ ^ Parent < NewRot > RobotPiece ] -> [ ^ RobotPiece ]
[ ^ Parent < NewRot v RobotPiece ] -> [ > RobotPiece ]
[ ^ Parent < NewRot < RobotPiece ] -> [ V RobotPiece ]
[ ^ Parent < NewRot ^ RobotPiece ] -> [ < RobotPiece ]


[ ^ GrandParent > NewRot2 > R2 ] -> [ V R2 ]
[ ^ GrandParent > NewRot2 v R2 ] -> [ < R2 ]
[ ^ GrandParent > NewRot2 < R2 ] -> [ ^ R2 ]
[ ^ GrandParent > NewRot2 ^ R2 ] -> [ > R2 ]

[ ^ GrandParent < NewRot2 > R2 ] -> [ ^ R2 ]
[ ^ GrandParent < NewRot2 v R2 ] -> [ > R2 ]
[ ^ GrandParent < NewRot2 < R2 ] -> [ V R2 ]
[ ^ GrandParent < NewRot2 ^ R2 ] -> [ < R2 ]

[ NewRot ] -> [ ]
[ NewRot2 ] -> [ ]
[ Parent ] -> [ ]
[ GrandParent ] -> [ ]


(change sprites)
[ up R0 ] -> [ up R0_Up ]
[ up R1 ] -> [ up R1_Up ]
[ up R2 ] -> [ up R2_Up ]

[ down R0 ] -> [ down R0_down ]
[ down R1 ] -> [ down R1_down ]
[ down R2 ] -> [ down R2_down ]

[ left R0 ] -> [ left R0_left ]
[ left R1 ] -> [ left R1_left ]
[ left R2 ] -> [ left R2_left ]

[ right R0 ] -> [ right R0_Right ]
[ right R1 ] -> [ right R1_Right ]
[ right R2 ] -> [ right R2_Right ]

(work from the base up when placing)
up [ up R0 | no R1 ] [ moving R1 ] -> [ up R0 | moving R1 ] [ ]
down [ down R0 | no R1 ] [ moving R1 ] -> [ down R0 | moving R1 ] [ ]
left [ left R0 | no R1 ] [ moving R1 ] -> [ left R0 | moving R1 ] [ ]
right [ right R0 | no R1 ] [ moving R1 ] -> [ right R0 | moving R1 ] [ ]

up [ up R1 | no R2 ] [ moving R2 ] -> [ up R1 | moving R2 ] [ ]
down [ down R1 | no R2 ] [ moving R2 ] -> [ down R1 | moving R2 ] [ ]
left [ left R1 | no R2 ] [ moving R2 ] -> [ left R1 | moving R2 ] [ ]
right [ right R1 | no R2 ] [ moving R2 ] -> [ right R1 | moving R2 ] [ ]


up [ up R2 | no R3 ] [ R3 ] -> [ up R2 | R3 ] [ ]
down [ down R2 | no R3 ] [ R3 ] -> [ down R2 | R3 ] [ ]
left [ left R2 | no R3 ] [ R3 ] -> [ left R2 | R3 ] [ ]
right [ right R2 | no R3 ] [ R3 ] -> [ right R2 | R3 ] [ ]




up [ up R2 | no R3 ] [ R3 ] -> [ R2_up | R3 ] [ ]
down [ down R2 | no R3 ] [ R3 ] -> [ R2_down | R3 ] [ ]
left [ left R2 | no R3 ] [ R3 ] -> [ R2_left | R3 ] [ ]
right [ right R2 | no R3 ] [ R3 ] -> [ R2_right | R3 ] [ ]


[ > RobotPiece no moved ] -> [ RobotPiece ]


up [ R0_Up | ] -> [ R0_Up connector_up | connector_down ]
up [ R1_Up | ] -> [ R1_Up connector_up | connector_down ]
up [ R2_Up | ] -> [ R2_Up connector_up | connector_down ]

down [ R0_down | ] -> [ R0_down connector_down | connector_up ]
down [ R1_down | ] -> [ R1_down connector_down | connector_up ]
down [ R2_down | ] -> [ R2_down connector_down | connector_up ]

left [ R0_left | ] -> [ R0_left connector_left | connector_right ]
left [ R1_left | ] -> [ R1_left connector_left | connector_right ]
left [ R2_left | ] -> [ R2_left connector_left | connector_right ]

right [ R0_right | ] -> [ R0_right connector_right | connector_left ]
right [ R1_right | ] -> [ R1_right connector_right | connector_left ]
right [ R2_right | ] -> [ R2_right connector_right | connector_left ]

[RobotPiece Wall no explosion no explosion2 ] -> [ RobotPiece Wall explosion ] sfx0

[ R0 R2 no explosion no explosion2] -> [ R0 R2 explosion ] sfx0
[ R0 R3 no explosion no explosion2 ] -> [ R0 r3 explosion ] sfx0
[ R1 R3 no explosion no explosion2 ] -> [ R1 R3 explosion ] sfx0

[ explosion2 ] -> [ explosionb ] again
[ explosion ] -> [ explosion2] again
[ explosionb ] -> [explosion] again

[ > player  | wall ] -> cancel

[FruitPicked ] [ R3 no FruitPicked ] -> [ ] [ R3 FruitPicked ]

[ action player ] [ R3 Fruit no fruitpicked ] -> [ player ] [ R3 Fruitpicked] sfx4
[ action player ] [ R3 fruitpicked no fruit ] -> [ player ] [ r3 fruit ] sfx8

[action player ] [ r3 no fruit no fruitpicked ] -> sfx6


[ fruit endpoint ] -> [endpoint] sfx5
[ fruit water ] -> [ deadfruit water ] sfx7
late [R0 water ] -> cancel
[R0 fruit ] -> cancel

==============
WINCONDITIONS
==============

no fruit
no fruitpicked
no deadfruit

=======
LEVELS
=======

message press x to grip and ungrip the mechanical arm
message put fruit in hole

message Level 1 of 3

###################
###################
###################
###..,........,.###
###..,...3....,.###
###..,...2....,.###
###.F,.E.1.,,,F,###
###..,...0....,.###
###..,..P.....,.###
###..,........,.###
###################
###################
###################

message Level 2 of 3

##############
##############
##############
###..3.....###
###..2.....###
###..1.,,,,###
###.E0.,...###
###....,FF.###
###.P..,...###
##############
##############
##############

message Level 3 of 3

###################
###################
###################
########........###
###..3.#...##.f.###
###..2..........###
###..1...#....#.###
###.e0..........###
###..p..#...#.f.###
#########.......###
###################
###################
###################

message congratulations


title Heroes of Sokoban II: Monsters
author Jonah Ostroff
text_color yellow
key_repeat_interval 0.25

========
OBJECTS
========

Background
#989898 #C8C8C8
00000
00100
00000
00010
00000

Goal
Brown Yellow
.000.
00000
00010
00000
00000

Wall
Darkgrey #222222
01000
11111
00010
00010
11111

Fighter (Warrior sounds better in-game, but I want different abbreviations for the classes in the editor.)
#FF4444 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

Wizard
#2266FF Pink
.000.
.010.
00000
.000.
00000

Thief
#66DD66 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

Priest
#FFFFAA Pink
.000.
.111.
00000
.000.
00000

SFighter
#880000 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

SWizard
#000088 Pink
.000.
.010.
00000
.000.
00000

SThief
#006600 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

SPriest
#B8B800 Pink
.000.
.111.
00000
.000.
00000

Crate
Orange #552200
.111.
10001
10001
10001
.111.

YellowSwitch
Yellow Black
.....
.111.
.101.
.111.
.....

YellowOpen
Yellow
0...0
.....
.....
.....
0...0

YellowDoor
Yellow #AA7722
01010
10001
00000
10001
01010

PurpleSwitch
#6611CC Black
.....
.111.
.101.
.111.
.....

PurpleDoor
#6611CC #220088
01010
10001
00000
10001
01010

PurpleOpen
#6611CC
0...0
.....
.....
.....
0...0

MonsterDoor
DarkGrey #222222 Red
21002
22122
20212
20012
21112

Warpball
Blue

ShadowDoor
Purple

DragonLeft
Green Red Orange Yellow DarkGreen
.....
1100.
3210.
1100.
...4.

DragonRight
Green Red Orange Yellow DarkGreen
.....
.0011
.0123
.0011
.4...

Goblin
Green DarkBrown DarkGreen
0.2.0
00000
..0..
.111.
.1.1.

Dying
White

Saved
#D8D800
..0..
.000.
..0..
..0..
.....

HasSaved
Yellow
.....
.....
.....
.....
.....

Corpse
#CCC
.000.
.000.
00000
.0.0.
.0.0.

LFireball
Orange

RFireball
Orange

DidNotMove
Purple

=======
LEGEND
=======

Dragon = DragonLeft or DragonRight
Player = Fighter or Wizard or Thief or Priest
SPlayer = Swizard or Sthief or SFighter or SPriest
Hero = Player or Splayer
Healer = Priest or SPriest (Unlike the other heroes, priests must function even when inactive. "Healer" is the generic term for an active or inactive priest.)
ClosedDoor = PurpleDoor or YellowDoor or MonsterDoor
OpenDoor = YellowOpen or PurpleOpen
Switch = PurpleSwitch or YellowSwitch
Monster = Dragon or Goblin
Moveable = Crate or SPlayer or Monster
Static = Wall or ClosedDoor
Weighing = Crate or Hero or Monster
Vulnerable = Hero or Monster
Invulnerable = Crate or Static
Fireball = LFireball or RFireball
. = Background
# = Wall
F = Fighter
W = Wizard
T = Thief
P = Priest
1 = SFighter
2 = SThief
3 = SWizard
4 = SPriest
* = Crate
G = Goal
[ = YellowDoor
] = PurpleDoor
{ = YellowSwitch
} = PurpleSwitch
L = DragonLeft
R = DragonRight
O = Goblin
M = MonsterDoor

=======
SOUNDS
=======

Moveable move 82056307
Sfx0 21221308 (teleport)
Endlevel 36315908
Sfx1 66399906 (switch player)
Sfx2 92172900 (close door)
Sfx3 15129100 (open door)
Sfx4 69860105 (saved)
Sfx5 63194902 (kill enemy)
Sfx6 81996702 (dying player)
EndGame 86793500

================
COLLISIONLAYERS
================

Background
Warpball, Dying
Goal, Switch, OpenDoor, ShadowDoor
ClosedDoor, Hero, Crate, Wall, Monster, Corpse
RFireball, Saved, DidNotMove
LFireball, HasSaved

======
RULES
======
[Saved] [Wall] -> [] [Wall HasSaved] (Remembering whether we saved someone last round by attaching a note to some wall.)

[Corpse] -> Restart

(Adds a DidNotMove to where the player currently is, to cancel moves where they bump into a wall.)

[Player] -> [Player DidNotMove]

[ >  Fighter | Moveable ] -> [  >  Fighter | > Moveable  ]
[ > Moveable | Moveable ] [ Fighter] -> [ > Moveable | > Moveable ] [ Fighter] (Fighters push.)

[ < Thief | Moveable ] -> [ < Thief | < Moveable ] (Thieves pull.)

[ > Wizard ] -> [ Wizard > Warpball]
[ > Warpball | no Moveable no Static] -> [ | > Warpball]
[ > Warpball | Static] [Wizard] -> [ | Static ] [> Wizard]
[ > Warpball | Moveable ] [Wizard] -> [ | Wizard Sfx0] [Moveable] (Wizards telexport. What they really do is shoot a "warpball", which causes them to move normally if it hits a wall and warp if it hits something they can warp with.)

(The following mess is for changing characters.)
[ Action Fighter] [SThief] -> [SFighter] [Thief Sfx1]
[ Action Thief] [SWizard] -> [SThief] [Wizard Sfx1]
[ Action Wizard] [SPriest] -> [SWizard] [Priest Sfx1]
[ Action Priest] [SFighter] -> [SPriest] [Fighter Sfx1]

[ Action Fighter] [no SThief] [SWizard] -> [SFighter] [no SThief] [Wizard Sfx1]
[ Action Thief] [no Swizard] [SPriest] -> [SThief] [no SWizard] [Priest Sfx1]
[ Action Wizard] [no SPriest] [SFighter] -> [SWizard] [no SPriest] [Fighter Sfx1]
[ Action Priest] [no SFighter] [SThief] -> [SPriest] [no SFighter] [Thief Sfx1]

[ Action Fighter] [no SThief] [no SWizard] [SPriest] -> [SFighter] [no SThief] [no SWizard] [Priest Sfx1]
[ Action Thief] [no SWizard] [no SPriest] [SFighter] -> [SThief] [no SWizard] [no SPriest] [Fighter Sfx1]
[ Action Wizard] [no SPriest] [no SFighter] [SThief] -> [SWizard] [no SPriest] [no SFighter] [Thief Sfx1]
[ Action Priest] [no SFighter] [no SThief] [SWizard] -> [SPriest] [no SFighter] [no SThief] [Wizard Sfx1]

(Cancels the move if the player is in the same place that they started. Notice that switching characters negates this. Only matters in levels where one dragon has multiple targets.)

Late [Player DidNotMove] -> Cancel
Late [DidNotMove] -> []

(Now enemies attack.)

Late [DragonLeft] -> [LFireball DragonLeft]
Late [DragonRight] -> [RFireball DragonRight]

Late RIGHT [RFireball | No Vulnerable no Invulnerable] -> [ | RFireball]
Late LEFT [LFireball | No Vulnerable no Invulnerable] -> [ | LFireball]
Late RIGHT [RFireball | Vulnerable] -> [ | Dying Vulnerable]
Late Right [RFireball | Invulnerable] -> [ | Invulnerable]
Late Left [LFireball | Vulnerable] -> [ | Dying Vulnerable]
Late LEFT [LFireball | Invulnerable] -> [ | Invulnerable]

Late [Goblin | Vulnerable] -> [Goblin | Dying Vulnerable]

(Vulnerable objects that are attacked are designated as "Dying", but heroes can be saved by the Priest. Then the stuff that didn't get saved dies.)

Late [Dying Healer] -> [Saved Healer]
Late [Healer | Dying Hero] -> [Healer | Saved Hero]
Late [Dying Monster] -> [Sfx5]
Late [Dying Hero] -> [Corpse Sfx6]

(Doors opening.)

late [Weighing  YellowSwitch] [YellowDoor] -> [Weighing  YellowSwitch] [ShadowDoor]
late [YellowSwitch no Weighing] [YellowOpen] -> [YellowSwitch] [YellowDoor sfx2]
late [YellowSwitch no Weighing] [ShadowDoor] -> [YellowSwitch] [YellowDoor]
late [ShadowDoor] -> [YellowOpen sfx3]

late [Weighing PurpleSwitch] [PurpleDoor] -> [Weighing PurpleSwitch] [ShadowDoor]
late [PurpleSwitch no Weighing] [PurpleOpen] -> [PurpleSwitch] [PurpleDoor sfx2]
late [PurpleSwitch no Weighing] [ShadowDoor] -> [PurpleSwitch] [PurpleDoor]
late [ShadowDoor] -> [PurpleOpen sfx3]

late [MonsterDoor] -> [ShadowDoor]
late [ShadowDoor] [Monster] -> [MonsterDoor] [Monster]
late [ShadowDoor] -> [sfx3]

(Looks for a HasSaved on a wall and moves it to the Priest. Then, if someone was saved this turn, plays the sound only if the Priest doesn't have the HasSaved note. Finally, cleans that up.)

late [Wall HasSaved] [Healer] -> [Wall] [Healer HasSaved]
late [Saved] [Healer no HasSaved] -> [Saved sfx4] [Healer]
late [HasSaved] -> []

==============
WINCONDITIONS
==============

All Hero on Goal
All Goal on Hero

=======
LEVELS
=======

Message Welcome back.

Message [You've played the original, yes?]

Message [If not, this might be confusing.]

#############
#.......[...#
#.*.F.{.[.G.#
#############
#.......[...#
#.*.2.{.[.G.#
#############
#.......[...#
#.*.3.{.[.G.#
#############

Message Watch out for goblins.

#############
#F.O.......O#
#...O.......#
#.......O...#
#O..........#
#....O......#
#O.......O..#
#.O.....O.G.#
#############

#############
###O###O#####
#W.*****...O#
#..*****....#
#####O###O..#
#O########..#
#*G...O.O...#
##..O..O.O..#
#############

Message Goblins attack each other too.

#############
#.......#...#
#...*...#.G.#
#.F...O.#...#
#...*...##O##
#...........#
#############

Message Dragons breath fire.

###############
#.............#
#..T..###.....#
#.....L.#.....#
#.......#.....#
#.............#
#.....#.......#
#.....#.R..G..#
#.....###.....#
#.............#
###############

Message Fire hurts enemies.

##############
#...#....O.RG#
#.T.#......R.#
#...#R*L...R.#
#R*.#...#..R.#
#...#...#..R.#
#...O.*.#..R.#
#.......#....#
##############

###########
#3.O.O.O.T#
#.#########
#......G.G#
#.#########
#R.O.O.O.O#
###########

Message Think fast!

#############
#R.O.O.O.O.T#
###########{#
###########]#
#G#3.[.}.G#G#
#]###########
#{###########
#1..O...O..L#
#############

Message Sorry about that one.

#######
##G*G##
##.G.##
#R...##
##...##
##...##
##...##
##...L#
##...##
##F23##
#######

Message Kill monsters to open the M wall.

###########
#L...R#...#
#.....#...#
#.....M.G.#
#.T.*.#...#
#.....#...#
###########

#############
#.......#...#
#..O.O..#...#
#R......M.G.#
#.*.F.*.#...#
#.......#...#
#############

#############
#.......#...#
#.{.*.{.#...#
#..W.O..M.G.#
#.{.*.[.#...#
#.......#...#
#############

Message Yellow priest is protected.

###########
#...#O#O#O#
#.P.......#
#...**O**.#
#********.#
#R..G.....#
###########

###########
#W#######G#
#.#O#O#O#.#
#.........#
#.##O#O##.#
#4#######G#
###########

Message Heroes next to a priest are safe.

############
#...#.O#O###
#.F.#......#
#...#.##O..#
#.4...O#G.G#
#...#.##.O.#
############

############
#.#..T..#4##
#.#.{.*...L#
#.#.....#..#
#G[.*.{...L#
#.#.....#..#
#.#.{.*...L#
#.#.....#G##
############

###########
#W...O#...#
#.....#.G.#
#..4..M...#
#.....#.G.#
#O...O#...#
###########

###########
#.T.##O#O##
#.........#
#.4.#O#O..#
########.##
#G..####.O#
#G#.O###.##
###.###O..#
#O..O#....#
##...*....#
###########

###########
#{*F#.4#.3#
#{*.#..#..#
###[#[###.#
#R[.......#
####O#.##.#
######.##.#
#G.G.G.#O*#
###########

###########
#.T.####O##
#.3......O#
#.4.###O.##
#####O##.##
#.G..*.O.##
#G.G#O##.##
###########

###########
##O#O#O#O##
#T[.[.[.[.#
##{#{#{#{.#
#.........#
#.3G*G*G4.#
#.........#
###########

Message The final challenge.

#############
#...#O.O#...#
#.F.#G.G#.2.#
#...#.O.#...#
##.###*###.##
#R*L.....R*L#
#.#.......#.#
#R*L.....R*L#
##.###M###.##
#...#...#...#
#.3.#G.G#.4.#
#...#...#...#
#############

Message Thanks for playing!

USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Olive Odyssey
author ChatGPT
homepage www.example.com

========
OBJECTS
========

Background
Green
.....
.....
.....
.....
.....

Player
Yellow Green
.....
..0..
.111.
.0.0.
.....

Olive
DarkGreen Yellow
.....
.....
.111.
.....
.....

MagicDish
DarkBlue 
.....
11111
11111
11111
.....

Wall
Brown
00000
00000
00000
00000
00000

RecipeBook
Red
.....
.....
.111.
.....
.....

=======
LEGEND
=======

. = Background
P = Player
O = Olive
D = MagicDish
W = Wall
R = RecipeBook

=======
SOUNDS
=======

Olive PICKUP 44735502

================
COLLISIONLAYERS
================

Background
Player, Olive, MagicDish, RecipeBook, Wall

======
RULES
======

[ > Player | Olive ] -> [ > Player ]

[ RecipeBook | Player] -> [ MagicDish | Player ]

[ > Player | MagicDish ] -> [ > Player ]

==============
WINCONDITIONS
==============

All MagicDish

=======
LEVELS
=======

# Level 1: Introduction
message Welcome to Olive Odyssey! Gather olives and make a magic dish.
...WWW...
...W.W...
P..WO.W..
...W.W...
...WWW...

# Level 2: Challenge
message Great job! Now find more olives and the recipe book.
WWW...WWW
W.O.O.O.W
W...P...R
W.O.D.O.W
WWW...WWW

# Level 3: Complex Paths
message You're a master chef now! Solve the final puzzle.
WWWWWWWWW
W......OW
W.WW.WW.W
W.W.PW..R
W.WW.WW.W
W......OW
WWWWWWWWW

message Congratulations! You've completed Olive Odyssey!

```
produced the following console output:
=================================
line 36 : Trying to access color number 1 from the color palette of sprite MAGICDISH, but there are only 1 defined in it.
line 37 : Trying to access color number 1 from the color palette of sprite MAGICDISH, but there are only 1 defined in it.
line 38 : Trying to access color number 1 from the color palette of sprite MAGICDISH, but there are only 1 defined in it.
line 53 : Trying to access color number 1 from the color palette of sprite RECIPEBOOK, but there are only 1 defined in it.
line 72 : Was expecting a soundverb here (MOVE, DESTROY, CANTMOVE, or the like), but found something else.
line 101 : Key "#" not found. Do you need to add it to the legend, or define a new object?
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors.  The game should be a simplified `demake` of the following game idea: **Olive Odyssey:** Uncover ancient secrets and complex recipes by harvesting ingredients and cooking them into magical, story-altering dishes.. Return your code in full, inside a ```plaintext code block.