SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Collapse
author Terry Cavanagh
homepage www.distractionware.com

color_palette pastel
youtube 4XglYW89WLQ

background_color Black
text_color LightRed

noaction

flickscreen 16x10

========
OBJECTS
========

Exit D
Black
.....
.....
.....
.....
.....

OutdoorBackground
lightred

IndoorBackground
white lightgray
11011
11011
11011
11011
11011


Wall W
Yellow Orange
00000
00010
00000
01000
00000

SolidWall Q
#FF0000 #992222
00000
00001
00111
01111
11111

Door X
DarkBlue White Blue
00200
10201
00200
10201
00200

Jettrail1
DarkGray
..0..
.000.
00.00
.000.
..0..


Jettrail2
DarkGray
.....
..0..
.0.0.
..0..
.....

Key
Blue
.000.
.0.0.
.000.
..0..
.00..

Flower F
DarkBlue Green blue
.22..
2002.
.22..
..1..
..1..

Mine M
Red #BB0000
10001
01110
11011
01110
10001

Blood
#FF0000 #AA0000
10101
01110
11011
01110
10101

Blood2
#FF0000 #AA0000
01010
10101
01010
10101
01010


PlayerDead
Red Black
10001
10001
00000
10001
10101

PlayerGround P
Black
.000.
.000.
00000
.000.
.0.0.

PlayerHover
Black
.000.
00000
.000.
.000.
0...0

PlayerHoverLeft
Black
.000.
0000.
.000.
.000.
..0.0

PlayerHoverRight
Black
.000.
.0000
.000.
.000.
0.0..

Temp
black

=======
LEGEND
=======

Background = OutdoorBackground or IndoorBackground
Player = PlayerGround or PlayerHover or PlayerHoverLeft or PlayerHoverRight or PlayerDead
InGamePlayer = PlayerGround or PlayerHover
FlyingPlayer = PlayerHoverLeft or PlayerHoverRight
Obstacle = Wall or Mine or SolidWall or Door
ObstacleExMine = Wall or SolidWall or Door

. = OutdoorBackground
, = IndoorBackground
# = Wall
P = Player
k = Key and IndoorBackground

=======
SOUNDS
=======

sfx0 53720504 (jump up)
sfx1 14370308 (bomb)
sfx2 41983504 (jetpack)
sfx3 86827507 (fall)
sfx4 56160703 (door)
sfx5 98568902 (blockpush)
sfx6 77665108 (collapse)

================
COLLISIONLAYERS
================

Background
Jettrail1, Jettrail2, Exit
Player, Wall, Solidwall, temp, playerhoverleft, playerhoverright, mine, Key, Flower, Door
blood, blood2

======
RULES
======

right [ moving Playerdead] -> [PlayerDead]

[> IngamePlayer | mine ] -> [ > PlayerDead | blood ] sfx1
Vertical [ PlayerGround | mine ] -> [ playerdead | blood2 ] sfx1
Horizontal [flyingplayer | mine ] -> [ playerdead | blood2 ] sfx1

Horizontal [> PlayerGround | Key] [Door] -> [> PlayerGround | Key] []
Horizontal [> PlayerGround | Key]-> [> PlayerGround | ] sfx4

Horizontal [> PlayerGround | Flower] [Door] -> [> PlayerGround | Flower] []
Horizontal [> PlayerGround | Flower]-> [> PlayerGround | ] sfx6

UP [Up PlayerGround | No Obstacle | No Obstacle] -> [ | | PlayerHover ] sfx0
UP [Up PlayerGround | No Obstacle] -> [ | PlayerHover ] sfx0


right [right PlayerHover] -> [PlayerHoverRight]
left [left PlayerHover] -> [PlayerHoverLeft]
up [up PlayerHover] -> [PlayerHover]
down [down PlayerHover] -> [PlayerGround]

down [JetTrail2] -> []
down [JetTrail1] -> [JetTrail2]

(random rule here is a hack workaround)
random right [ PlayerHoverRight | No Obstacle] -> [ JetTrail1 | PlayerHoverRight] again sfx2
horizontal [ PlayerHoverRight | ObstacleExMine] -> [ PlayerGround | ObstacleExMine]
down [ PlayerHoverRight | ObstacleExMine] -> [ PlayerGround | ObstacleExMine]

random left [ PlayerHoverLeft | No Obstacle] -> [JetTrail1 | PlayerHoverLeft] again sfx2
horizontal [ PlayerHoverLeft | ObstacleExMine] -> [ PlayerGround | ObstacleExMine]
down [ PlayerHoverLeft | ObstacleExMine] -> [ PlayerGround | ObstacleExMine]

horizontal [> PlayerGround | Wall] -> [> PlayerGround | > wall] sfx5
horizontal [> Wall | Wall] -> [> Wall | > wall]
horizontal [> Wall | Mine] -> [> Wall | > Mine]

down [stationary wall] -> [ down wall] again
down [stationary mine] -> [ down mine] again

[blood | no blood ] -> [blood | blood2] again
[blood2 | no blood ] -> [blood2 | blood] again

late down [  PlayerGround | No Obstacle ] -> [ JetTrail1 |  temp] again sfx3
late down [temp] -> [playerground]

==============
WINCONDITIONS
==============
No Flower
All Player on Exit

=======
LEVELS
=======

MESSAGE The last flower...
MESSAGE Will I find it on this planet?

qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
q,,,,,,,,,,,,,,qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
q,,,,,,,,,,,,,,,,,,,,,,,q,,,,,,,,,,,,qqqqqqqqqqq
q,,,,,,,,qq,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,x,D
q,,,,,,,,qqqqqqqqqqqqq,,K,,,,,,,,,,,,,,,,,,,,x,D
qqq,,,,,,qqqqqqqqqqqqq,,qqqqqqqqqqq,,,,,,,,,,x,D
qqq,p,,,,qqqqqqqqqqqqq,,,,,,,,,,,,,,,,,,qqq,,x,D
qqqqq,,,,qqqqqqqqqqqqq,,,,,,,,,,,,,,,,,,qqqqqqqq
qqqqqmmmmqqqqqqqqqqqqqmqqmmmmmmmmmmmmmqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq

qq................q........q..........w....qmmmmmmq.............q
qq..................w.................w....qmmmmmmq.............q
qq...............q..w.................wm....qmmmmmq.............q
qqq..............q..w.................ww....qmmmmqq...........f.q
qqq..............qwww.......w.........ww.....qmmmq...........wwwq
q.........ww......wqwmmw....w.........ww..w..qwqqq...........wwwq
DP........ww......q.mqwww...w........wwwwwwwwwwwww...........wwwq
qww.......ww........qqqqq...w.wwwww..wwwwwwwwwqwww..........wwwwm
qwwwwm..wwwwwwwwwwwww.qqqqmmw.wwwwww.wwwwwwwwwqqww...q...wwwmwwwq
qwwwwwwqwwwwmwwwwwmww.wqqqwwwwwwwwwwmwwwwwwwwwqqqqwwwwwwwwqwwwwwq
mxxxxxxxxxxxxxxxxxxxxxxqxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxq
m....................q.q................................m.......q
m......................q................................q.......q
m......................q........................................q
m......................q........................................q
m......................q........................w...............q
m...............w......q........w............w..w...............q
mmm.....m..m....w.mmmm.mmm...m..w....mm..m...wmmw..m.mm.....m...q
mwmmmmmmm.mmwmmmmmmmmmmmmwmmmmmmmwmmmmwmmmmmmmmmmmmmmmmm.mmmmmm.q
mmwmmmmwmmmmmmmmmwmmmwmmmmmmmwmmmmmmmmmmwmmmmmmmmmmmmmmmmmmmmmmmq

MESSAGE Collapse
MESSAGE Music [Cryptobiosis by Sync24]
MESSAGE Thanks for playing

title Extended Body Example: 1 Player, Multiple Extended Objects
author Scott Hughes

(

Usable in the case where there's only a single player that's pushing stuff around.

Example for
https://www.puzzlescript.net/Documentation/rigidbodies.html#one_many

)

=======
OBJECTS
=======

Background
white

Player
pink

Box1
red

Box2
green

Box3
blue

Box4
orange

Wall
grey

======
LEGEND
======

. = Background
@ = Player
1 = Box1
2 = Box2
3 = Box3
4 = Box4
# = Wall

Box = Box1 or Box2 or Box3 or Box4

======
SOUNDS
======

===============
COLLISIONLAYERS
===============

Background
Player, Box, Wall

=====
RULES
=====

[ > Player | Box ] -> [ > Player | > Box ]

startloop

(Propagate movements through crates of different types.)
[ moving Box1 | Box1 ] -> [ moving Box1 | moving Box1 ]
[ moving Box2 | Box2 ] -> [ moving Box2 | moving Box2 ]
[ moving Box3 | Box3 ] -> [ moving Box3 | moving Box3 ]
[ moving Box4 | Box4 ] -> [ moving Box4 | moving Box4 ]

(Extend the movements between crates of different types.)
[ > Box | Box ] -> [ > Box | > Box ]

endloop

(Just cancel the whole turn if something can't move.)
[ > Box | Wall ] -> cancel

=============
WINCONDITIONS
=============

======
LEVELS
======

################
#....###.......#
#....#.....##..#
#...........#..#
#...@..222..#..#
##.....2.......#
#...3.....1....#
#..33.....1....#
#..3.....11....#
#....4........##
#...444...##...#
#..#.....##....#
################


title It Dies In The Light
author Christopher Wells
homepage www.tophwells.com

noaction
run_rules_on_level_start
again_interval 0.05

========
OBJECTS
========

BackgroundNeutral
LIGHTGray Gray
11011
10101
01110
10101
11011

BackgroundDark
Black

Wall
Lightblue Blue
00010
11111
01000
11111
00010

LivePlayer
Black LightRed White Blue
.000.
.111.
12321
.232.
.222.

Corpse
LightGrey
.000.
.0.0.
0.0.0
..0..
.0.0.

Crate
Orange LightBrown Brown
.222.
21012
20102
21012
.222.

GoldCrate
White Yellow Orange
.222.
21012
20002
21012
.222.

GlassCrate
White
.000.
0...0
0...0
0...0
.000.

Prism
LightBlue White
.000.
00110
00010
00000
.000.

ActivePrism
LightBlue White Yellow
.000.
02120
01110
02120
.000.

Glass
White
00000
0...0
0...0
0...0
00000

BeamVert
White Yellow
.101.
.101.
.101.
.101.
.101.

BeamHor
White Yellow
.....
11111
00000
11111
.....

BeamCross
White Yellow
.101.
11011
00000
11011
.101.

Shadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

TempShadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

=======
LEGEND
=======

. = BackgroundNeutral
# = Wall
P = LivePlayer
C = Crate
G = GoldCrate
S = Shadow
X = Prism
O = Glass

Background = BackgroundNeutral or BackgroundDark
Player = LivePlayer or Corpse
Light = BeamVert or BeamHor or BeamCross
Hlight = BeamHor or BeamCross
Vlight = BeamVert or BeamCross
Opaque = Player or Crate or Wall or GoldCrate
Pushable = Crate or GoldCrate or Prism or GlassCrate


=======
SOUNDS
=======

SFX0 93002904

================
COLLISIONLAYERS
================

Background
BeamVert, BeamHor, BeamCross, Shadow, TempShadow
Player, Corpse, Wall, Crate, GoldCrate, GlassCrate, Prism, ActivePrism, Glass

======
RULES
======

[> Corpse] -> RESTART
[Light] -> []
[ActivePrism] -> [Prism]
[ >  Player | Pushable ] -> [  >  Player | > Pushable  ]
late HORIZONTAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamHor]
late VERTICAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamVert]
late VERTICAL [GoldCrate|no Opaque BeamHor] -> [GoldCrate | BeamCross]
late HORIZONTAL [Hlight|no Opaque no Light] -> [Hlight|BeamHor]
+ late HORIZONTAL [Hlight|no Opaque BeamVert] -> [Hlight|BeamCross]
+ late VERTICAL [Vlight|no Opaque no Light] -> [Vlight|BeamVert]
+ late VERTICAL [Vlight|no Opaque BeamHor] -> [Vlight|BeamCross]
+ late [Light Prism] ->[BeamCross ActivePrism]
late [Shadow Pushable] -> [Pushable]
late [TempShadow] -> [Shadow]
late [Shadow | no Light no Wall no Pushable no Glass no Shadow] -> [shadow | Tempshadow] again
late [Shadow] -> [Shadow BackgroundDark]
late [TempShadow] -> [TempShadow BackgroundDark]
late [no Shadow no TempShadow] -> [no Shadow BackgroundNeutral]
late [Shadow Player] -> [Shadow Corpse]

==============
WINCONDITIONS
==============

no Shadow

=======
LEVELS
=======

......####.
..#####ss#.
###ssssss#.
#..ssscss##
#..#s#s#ss#
#.g#s#ssss#
#p.#s#ssss#
#..css#sss#
###########

........########.
........#...#.C#.
...######...GC.##
...#..CsssssO.C.#
...#P.Csss#sO.CC#
...#..Csss#sO#..#
########ss#s....#
#ssssssOss#s#####
#sssssssss###....
#########s#......
........###......

##########
###G#G#G##
##P......#
#G.......#
##..C....#
#G.......#
##..C....#
#G.......#
##......S#
##########

........########
........#......#
#########..#o#.#
#........gooxo.#
#g#####c#.sso#s#
#.ssssss#.ss.ss#
##soooss#.ss##s#
##c.p.c###ss#ss#
##.....#ssss#ss#
#...g.......#ss#
#########.xx#ss#
........##sssss#
.........#######

MESSAGE Earth is safe once again.

(
level ideas
push battery horizontally
have to assemble and then disassemble a circuit, in order to complete it
add a piece to a circut, then break the circuit from another point
level that starts with a closed circuit
level with very dangerous + block
)
title LED Challenge
author increpare
homepage www.increpare.com

run_rules_on_level_start
color_palette famicom


========
OBJECTS
========

Background .
darkgreen green
00000
00000
00100
00000
00000


Player
Black brown grey Blue
.111.
.111.
22222
13331
.3.3.


Player_Dead
darkgrey darkgrey darkgrey darkgrey
.111.
.111.
22222
.333.
.3.3.

Wall #
black

Red_Off R
black DarkRed
.....
..1..
.101.
.101.
.101.

Red_On T
pink red
.....
..1..
.101.
.101.
.101.


Green_Off G
black Green
.....
..1..
.101.
.101.
.101.

Green_On H
Green LightGreen
.....
..1..
.101.
.101.
.101.


Blue_Off B
black DarkBlue
.....
..1..
.101.
.101.
.101.

Blue_On N
Blue LightBlue
.....
..1..
.101.
.101.
.101.

Battery_H C
Grey lightgrey
.000.
.010.
01110
.010.
.000.

Battery_V O
Grey lightgrey
..0..
00100
01110
00100
..0..


cable_h q
grey
.....
.....
00000
.....
.....

cable_v e
grey
..0..
..0..
..0..
..0..
..0..

cable_ul w
grey
..0..
..0..
000..
.....
.....

cable_ur d
grey
..0..
..0..
..000
.....
.....

cable_dr s
grey
.....
.....
..000
..0..
..0..

cable_dl a
grey
.....
.....
000..
..0..
..0..


cable_omni z
grey
..0..
..0..
00000
..0..
..0..

cable_dlr i
grey
.....
.....
00000
..0..
..0..

cable_ulr k
grey
..0..
..0..
00000
.....
.....

cable_udr j
grey
..0..
..0..
..000
..0..
..0..

cable_udl l
grey
..0..
..0..
000..
..0..
..0..


light
black

light_up
yellow
.000.
.000.
.000.
.....
.....

light_down
yellow
.....
.....
.000.
.000.
.000.

light_Left
yellow
.....
000..
000..
000..
.....

light_right
yellow
.....
..000
..000
..000
.....

=======
LEGEND
=======

P = Player
Unlit = Blue_Off or Green_Off or Red_Off
Lit = Blue_On or Green_On or Red_On
Cable = Cable_h or Cable_v or Cable_dr or Cable_dl or Cable_ul or Cable_ur or Cable_UL or Cable_UR or Cable_UDR or Cable_ULR or Cable_UDL or Cable_DLR or Cable_Omni
Battery = Battery_H or Battery_V
Item = Unlit or Lit or Battery or Cable
Cable_Up = Cable_V or Cable_UL or Cable_UR or Battery_V or Cable_UDR or Cable_ULR or Cable_UDL or Cable_Omni or  Player
Cable_Down = Cable_V or Cable_DL or Cable_DR or Battery_V or Cable_UDR or Cable_UDL or Cable_DLR or Cable_Omni or Player
Cable_Left = Cable_H or Cable_UL or Cable_DL or Battery_H  or Cable_ULR or Cable_UDL or Cable_DLR or Cable_Omni or Player
Cable_Right = Cable_H or Cable_UR or Cable_DR or Battery_H or Cable_UDR or Cable_ULR or Cable_DLR or Cable_Omni or Player
LightEffect = Light_Up or Light_Down or Light_Left or Light_Right
Object = Player or Item
Player_Dying = Player and Light

=======
SOUNDS
=======

EndLevel 39731502
EndGame 20540505
Player Move 6330907
Player_Dead Create 44233902

================
COLLISIONLAYERS
================

Background
Light
Light_Up
Light_Down
Light_Left
Light_Right
Player, Player_Dead, Wall, Item

======
RULES
======

(init stage)
[ Light ] -> [ ]
[ LightEffect no Player] -> [ ]
[ Red_On ] -> [ Red_Off ]
[ Green_On ] -> [ Green_Off ]
[ Blue_On ] -> [ Blue_Off ]

(movement)
[ >  Object | Object ] -> [  > Object | > Object ]

(do circuits)
startLoop
late [ Battery ] -> [ Light Battery ]

late left [ Player | Light_Right ] -> [ Light Player | Light_Right ]
late right [ Player | Light_Left ] -> [ Light Player | Light_Left ]
late up [ Player | Light_Down ] -> [ Light Player | Light_Down ]
late down [ Player | Light_Up ] -> [ Light Player | Light_Up ]

late up [ Player_Dead | Light_Down ] -> [ Light Player_Dead | Light_Down  ]
late down [ Player_Dead | Light_up ] -> [ Light Player_Dead | Light_up  ]

late left [ Cable_Left | Light_Right ] -> [ Light Cable_Left | Light_Right ]
late right [ Cable_Right | Light_Left ] -> [ Light Cable_Right | Light_Left ]
late up [ Cable_Up | Light_Down ] -> [ Light Cable_Up | Light_Down ]
late down [ Cable_Down | Light_Up ] -> [ Light Cable_Down | Light_Up ]

late down [ Red_Off | Light_Up ] -> [ Red_On | Light_Up ]
late down [ Green_Off | Light_Up ] -> [ Green_On | Light_Up ]
late down [ Blue_Off | Light_Up ] -> [ Blue_On | Light_Up ]

late [ Light Cable_Up ] -> [ Light Light_Up Cable_Up ]
late [ Light Cable_Down ] -> [ Light Light_Down Cable_Down ]
late [ Light Cable_Left ] -> [ Light Light_Left Cable_Left ]
late [ Light Cable_Right ] -> [ Light Light_Right Cable_Right ]
endLoop

late [ Player Light ] -> again
late [ Player_Dead Light ] -> again
late [ Player LightEffect ] -> [ Player_Dead LightEffect ]   again
late [ Player_Dead Light ] -> [ Player_Dead ]

==============
WINCONDITIONS
==============

No Unlit
No Player_Dead

=======
LEVELS
=======

message Level 1 of 4

......
.r.g..
..o.p.
.w.d..
......

message Level 2 of 4

.....##.....
.....##.w.d.
..c.........
...p....r.g.
.....##.....

message Level 3 of 4

.......
..rgb..
..wkd..
...o...
.....p.
.......

message Level 4 of 4

...........
...ccccc...
.d.crcgc.w.
...ccccc...
..........p

(
message Level 5 of 3

.......
.bgrgb.
rdzczwr
dqw.dqw
.......
)

message Congratulations

USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Railway Riddle Demake
author PuzzleScriptUser

========
OBJECTS
========

Background
darkgreen green
00000
00000
00100
00000
00000

Town
darkblue blue
.....
..0..
.000.
..0..
.....

TrackH
darkgrey grey
.....
.....
00000
.....
.....

TrackV
darkgrey grey
..0..
..0..
..0..
..0..
..0..

TrackL
darkgrey grey
.....
..00.
..0..
..0..
.....

TrackR
darkgrey grey
.....
.00..
..0..
..0..
.....

Train
black red
.....
..1..
.111.
..1..
.....

Cursor
lightblue blue
.....
.....
.0.0.
.....
.....

=======
LEGEND
=======

. = Background
T = Town
H = TrackH
V = TrackV
L = TrackL
R = TrackR
@ = Train
C = Cursor

=======
SOUNDS
=======

startgame 4284710

================
COLLISIONLAYERS
================

Background
Town, Train
Cursor, TrackH, TrackV, TrackL, TrackR

======
RULES
======

# Cursor movement
[right C] -> [> C]
[left C] -> [< C]
[up C] -> [^ C]
[down C] -> [v C]

# Placing horizontal track
[action C | No TrackH] -> [C | TrackH]

# Placing vertical track
[action C | No TrackV] -> [C | TrackV]

# Placing left curve track
[Action C | No TrackL] -> [C | TrackL]

# Placing right curve track
[Action C | No TrackR] -> [C | TrackR]

# Train moves through tracks
[> Train | TrackH] -> [> Train | TrackH]
[v Train | TrackV] -> [v Train | TrackV]
[> Train | TrackL] -> [v Train | TrackL]
[v Train | TrackR] -> [> Train | TrackR]

==============
WINCONDITIONS
==============

All Train on Town

=======
LEVELS
=======
message Let's build a track!

..........
.T......T.
..........
....C.....
@.........


```
produced the following console output:
=================================
line 79 : You named an object "V", but this is a keyword. Don't do that!
line 103 : Name "#", referred to in a rule, does not exist.
line 103 : Name "movement", referred to in a rule, does not exist.
line 109 : Name "#", referred to in a rule, does not exist.
line 109 : Name "placing", referred to in a rule, does not exist.
line 109 : Name "track", referred to in a rule, does not exist.
line 112 : Name "#", referred to in a rule, does not exist.
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors.  The game should be a simplified `demake` of the following game idea: **Railway Riddle:** Construct a seamless train track through challenging landscapes to connect distant towns before the clock runs out.. Return your code in full, inside a ```plaintext code block.