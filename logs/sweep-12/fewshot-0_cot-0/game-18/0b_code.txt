Certainly! Below is the complete code for a simple PuzzleScript game called "Gem Collector". In this game, the player collects gems while avoiding enemy bots.

```plaintext
[Title]
Gem Collector

[Author]
PuzzleScript Developer

[Homepage]
http://www.puzzlescript.net

[Background]
You are on a quest to collect all the gems. Beware of the moving enemy bots!

[Legend]
. = Background
P = Player
G = Gem
E = EnemyBot
# = Wall

[Sounds]
crateMoveP = push1
gemCollectP = pickup2
enemyCatchP = die

[CollisionLayers]
Background
Player, Gem, EnemyBot, Wall

[Rules]
Player > Gem → Player (message "Gem collected!") gemCollectP
Player > EnemyBot → restart (message "Caught by an enemy!") enemyCatchP

// Enemy Automatic Movement
EnemyBot no Player → no Player | EnemyBot north
EnemyBot no Player → no Player | EnemyBot south

[WinConditions]
All Gem

[Levels]

// Level 0
#####
#...#
#.P.#
#...#
#####

// Level 1
######
#P..G#
#..E.#
#...##
######

# Add more levels as needed

[Text]
title Win [Win]
text You collected all the gems!
```

This code sets up a simple game where the player (P) collects gems (G) and must avoid enemy bots (E) that move vertically. Each level is defined with characters that represent different elements (e.g., `#` for walls, `P` for the player, and so on). You can add additional levels and enhance rules to enrich the gameplay experience.