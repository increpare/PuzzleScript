SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Puzzles
author increpare
homepage www.puzzlescript.net

(
Unfortunately, just the first level - trying to emulate the later ones proved too complex :[

You can play the original game here:
http://www.increpare.com/2012/06/puzzles/
)

background_color white
text_color blue

run_rules_on_level_start


========
OBJECTS
========

DyingPlayer
Black

Void
White

OBackground
Orange

GBackground
LightGrey

BlueWall
Blue


GreyWall
Grey

RedCrate
Red
.....
.000.
.000.
.000.
.....
GreyCrate
DarkGrey
.....
.000.
.000.
.000.
.....

RedWhale
Red White
00100
00000
10001
00000
00100

GreyWhale
DarkGrey White
00100
00000
10001
00000
00100

RedEndPoint
DarkRed
.....
.000.
.0.0.
.000.
.....

GreyEndPoint
Darkgrey
.....
.....
.....
.....
.....

RedStartPoint
darkRed
.....
.....
.....
.....
.....

GreyStartPoint
darkRed
.....
.000.
.0.0.
.000.
.....

YellowPlayer
yellow
.....
.000.
.000.
.000.
.....

GreyPlayer
DarkGrey
.....
.000.
.000.
.000.
.....

LeftBeam
white
.....
.....
00000
.....
.....

RightBeam
white
.....
.....
00000
.....
.....

UpBeam
white
..0..
..0..
..0..
..0..
..0..

DownBeam
white
..0..
..0..
..0..
..0..
..0..

=======
LEGEND
=======

Background = Void or OBackground or GBackground
Player = YellowPlayer or GreyPlayer or DyingPlayer
Wall = BlueWall or GreyWall
Crate = RedCrate or GreyCrate
Whale = RedWhale or GreyWhale
StartPoint = RedStartPoint or GreyStartPoint
EndPoint = RedEndPoint or GreyEndPoint
. = OBackground
, = Void
# = BlueWall
W = RedWhale
C = RedCrate
S = RedStartPoint and YellowPlayer
E = RedEndPoint
Obstacle = Player or Whale or Crate or Wall
Beam = UPBeam or DownBeam or LeftBeam or RightBeam
VBeam = UPBeam or DownBeam
HBeam = LeftBeam or RightBeam
HBeamSource = HBeam or Whale
VBeamSource = VBeam or Whale
Pushable = Player or Whale or Crate
RedPushable = YellowPlayer or RedWhale or RedCrate
GreyPushable = GreyPlayer or GreyWhale or GreyCrate

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
StartPoint, EndPoint
Player, Wall, Crate, Whale
UpBeam, DownBeam
LeftBeam, RightBeam

======
RULES
======


left [ LeftBeam | < Player ] -> [ LeftBeam | Player ]
right [ RightBeam | < Player ] -> [ RightBeam | Player ]
up [ UpBeam | < Player ] -> [ UpBeam | Player ]
down [ DownBeam | < Player ] -> [ DownBeam | Player ]

right [ RightBeam | stationary Pushable ] -> [ RightBeam | > Pushable ]
left [ LeftBeam | stationary Pushable ] -> [ LeftBeam | > Pushable ]
up [ UpBeam | stationary Pushable ] -> [ UpBeam | > Pushable ]
down [ DownBeam | stationary Pushable ] -> [ DownBeam | > Pushable ]

[ Whale | stationary Pushable ] -> [ Whale | > Pushable ]


[ Beam ] -> []


[ >  Player | Crate ] -> [  >  Player | > Crate  ]
[ > Crate | stationary Crate ] -> [ > Crate | > Crate ]

( using red/greypushable is an optimization - cuts down on unecessary rules by quite a lot, beause red and grey things never coexist)
[ > RedPushable | v RedPushable ] -> [ RedPushable | v RedPushable ]
[ > RedPushable | ^ RedPushable ] -> [ RedPushable | ^ RedPushable ]
[ > RedPushable | < RedPushable ] -> [ RedPushable | < RedPushable ]

[ > GreyPushable | v GreyPushable ] -> [ GreyPushable | v GreyPushable ]
[ > GreyPushable | ^ GreyPushable ] -> [ GreyPushable | ^ GreyPushable ]
[ > GreyPushable | < GreyPushable ] -> [ GreyPushable | < GreyPushable ]

late Up [ Whale | no Obstacle ] -> [ Whale | UpBeam ]
late Down [ Whale | no Obstacle ] -> [ Whale | DownBeam ]
late Left [ Whale | no Obstacle ] -> [ Whale | LeftBeam ]
late Right [ Whale | no Obstacle ] -> [ Whale | RightBeam ]

late horizontal [ HBeam | no obstacle ] -> [ HBeam | HBeam ]
late vertical [ VBeam | no obstacle ] -> [ VBeam | VBeam ]


(DEATH TRANSITION)
late Horizontal [ HBeamSource | YellowPlayer ]  -> [ HBeamSource | DyingPlayer ]
late Vertical [ VBeamSource | YellowPlayer ]  -> [ VBeamSource | DyingPlayer ]

late [ DyingPlayer ] [ BlueWall ] -> [ DyingPlayer ] [ GreyWall ]
late [ DyingPlayer ] [ RedWhale ] -> [ DyingPlayer ] [ GreyWhale ]
late [ DyingPlayer ] [ RedCrate ] -> [ DyingPlayer ] [ GreyCrate ]
late [ DyingPlayer ] [ RedStartPoint ] -> [ DyingPlayer ] [ GreyStartPoint ]
late [ DyingPlayer ] [ RedEndPoint ] -> [ DyingPlayer ] [ GreyEndPoint ]
late [ DyingPlayer ] [ OBackground ] -> [ DyingPlayer ] [ GBackground ]
late [ DyingPlayer ] -> [ GreyPlayer ]

late [DyingPlayer] -> [GreyPlayer]

(LIFE TRANSITION)
late [ GreyPlayer GreyStartPoint ] [ GreyWall ] -> [ GreyPlayer GreyStartPoint ] [ BlueWall ]
late [ GreyPlayer GreyStartPoint ] [ GreyCrate ] -> [ GreyPlayer GreyStartPoint ] [ RedCrate ]
late [ GreyPlayer GreyStartPoint ] [ GreyWhale ] -> [ GreyPlayer GreyStartPoint ] [ RedWhale ]
late [ GreyPlayer GreyStartPoint ] [ GreyEndPoint ] -> [ GreyPlayer GreyStartPoint ] [ RedEndPoint ]
late [ GreyPlayer GreyStartPoint ] [ GBackground ] -> [ GreyPlayer GreyStartPoint ] [ OBackground ]

late [ GreyPlayer GreyStartPoint ] -> [ YellowPlayer RedStartPoint ]

late [player]->again

==============
WINCONDITIONS
==============

All Player on RedEndPoint

=======
LEVELS
=======


#########
#......E#
#..CC..##
#.....##,
#.....W#,
##.#####,
#......#,
#..CC..#,
#..CC..#,
##.....#,
#W.....#,
######.#,
#......#,
#......#,
##S#####,
########,



title 2D Whale World
author increpare
homepage www.increpare.com

background_color orange
text_color darkblue

color_palette mastersystem

run_rules_on_level_start
require_player_movement

(
    
This game is a port of the Whale section of my puzzle game English Country Tune (www.englishcountrytune.com), in only 8 lines of code.

)

========
OBJECTS
========

Background
blue

Void
orange

Player
lightblue

Whale
brown
00000
00000
00000
00000
00000

Wall
black
00000
0...0
0...0
0...0
00000

HBeam
yellow
.....
.....
0.0.0
.....
.....

VBeam
yellow
..0..
.....
..0..
.....
..0..

=======
LEGEND
=======

Beam = HBeam or VBeam
. = Background
# = Wall
P = Player
W = Whale
0 = Void

=========
SOUNDS
=========

whale destroy 62981708
player move 69405107
whale move 32823307
endlevel 99636708
restart 92555303
startgame 60661308
CloseMessage 123434
ShowMessage 123434

================
COLLISIONLAYERS
================

Background
void
Player, Wall, Whale
HBeam
VBeam

======
RULES
======

(While we allow whales to move onto the void, player's aren't)
[ > player | void ] -> [ player | void ] 

(Beams detect motion)
horizontal [ > Player | VBeam ] -> [ > Player | > VBeam ] 
vertical [ > Player | HBeam ] -> [ > Player | > HBeam ] 

(If beams detected motion, transfer that to the whales)
[ Whale | ... | perpendicular Beam ] -> [ perpendicular Whale | ... | perpendicular Beam ] 

(Remove whales, if necessary)
late [ Whale Void ] -> [ Void ] 

(Remove beams)
[ Beam ] -> [ ] 

(Place HVeams and VBeams)
late horizontal [ Whale | ... | ] -> [ Whale | ... | HBeam ] 
late vertical [ Whale | ... | ] -> [ Whale | ... | VBeam ] 

==============
WINCONDITIONS
==============

no Whale

=======
LEVELS
=======

message Push a whale off to free it.

0000000000000000
0########0000000
0.......#0000000
0###.W..###00000
0.........#00000
0#####.##.###000
0000#...#...#000
0000#...#...#000
0000#...#...###0
0000#.P.#.....#0
0000#...#.....#0
0000#####...W##0
0000000000....#0
0000000000#####0
0000000000000000

message level 2 of 8

00000000000
0000####000
000##..##00
0###....##0
0#.......#0
0###.W.###0
000#P...000
000#####000
00000000000

message level 3 of 8

0000000000000000
00###00000000000
00#.#####0000000
00#.#...##000000
00#......#000000
00#..##.#######0
00#..#........#0
00#..#........#0
0##..######...#0
0#........#.W.#0
0##.......#..P#0
00######..#####0
00000000..000000
0000000000000000

message level 4 of 8

0000000000000000
000000#########0
0######.......#0
0.............#0
0.....#.#####.#0
0######.#.....#0
00000##.#...P.#0
00000#........#0
00000##.#.W...#0
000000#.......#0
000000###.#...#0
00000000#######0
0000000000000000

message level 5 of 8

00000000000000000
0000############0
0000#.#........#0
0000#..........#0
0####..###.....#0
0......#.#.....#0
0####..#W#.#W#.#0
0..........#.#.#0
0####.....P###.#0
0...#.#........#0
0##...##########0
00#####0000000000
00000000000000000

message level 6 of 8

00000000000000000
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.....#0
0000000###...###0
0000000#.#...#000
0000000#.#.#.#000
0#######.#.#.#000
0#...........#000
0#.#.W...W...#000
0#...........#000
0#.....P.....#000
0#...........#000
0#############000
00000000000000000

message level 7 of 8

000000000#000000
00000####.####00
0####.........#0
0........#....#0
0####....W....#0
0000#.........#0
0000#.#W.P.W#..#
0####.........#0
0........W....#0
0####....#....#0
00000#........#0
000000########00
0000000000000000

message level 8 of 8

00000000000
0########00
0#...#..#00
0##.....000
0#......#00
0#..WW..##0
0#..WW...#0
0##...P.##0
0#...#.##00
0#######000
00000000000

message all the 2d whales are freed


title Spriteaporter
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Temp
black

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Sprite
pink blue red
.....
.000.
00100
01110
.202.

=======
LEGEND
=======

. = Background
# = Wall
P = Player
O = Sprite

=======
SOUNDS
=======

sfx0 67117309

================
COLLISIONLAYERS
================

Temp
Background
Target
Player, Wall, Sprite

======
RULES
======

late [ Sprite | ... | Player ] -> [ Temp | ... | Sprite ] 
late [ Temp ] -> [ Player ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#########
#.......#
#....O..#
#.P.....#
#.......#
#.......#
#########


title Cratopia
author CHz [v1]
homepage quiteajolt.com

again_interval 0.06
run_rules_on_level_start

========
OBJECTS
========

BlueSky
Blue

CrateInfection
#3F5AC2 #5063C5 Blue
00000
02120
01110
02120
00000


Space
Black

EditModeDrop
Black
.....
.....
.....
.....
.....

EditModeArrow
White Black
11011
11011
11011
10001
11011

EditModeCursor
Red
00.00
0...0
.....
0...0
00.00


Goal
DarkBlue #0D1319
11111
10001
10001
10001
10001

GoalLocked
DarkBlue #0D1319 Gray
12121
22222
12021
22222
12021

Key
Yellow
.....
.....
...00
00000
0.0..

Crate
#765026 #C77629
00000
0.1.0
01110
0.1.0
00000

Ladder
DarkBrown
0...0
00000
0...0
00000
0...0


Fire
Brown #765026 Orange Red
33232
32222
22220
00000
00100

BurningCrate
DarkRed Red
00000
0.1.0
01110
0.1.0
00000

BurntCrate
DarkGray Gray
00000
0.1.0
01110
0.1.0
00000


PlayerRight
Black Orange White Red
.000.
.111.
.2222
.333.
.3.3.

PlayerLeft
Black Orange White Red
.000.
.111.
2222.
.333.
.3.3.

PlayerLadder
Black Orange White Red
.000.
.111.
22222
.333.
.3.3.

PlayerRightDisabled
Gray
.000.
.000.
.0000
.000.
.0.0.

PlayerLeftDisabled
Gray
.000.
.000.
0000.
.000.
.0.0.

PlayerLadderDisabled
Gray
.000.
.000.
00000
.000.
.0.0.

PlayerJumpLeft
Black

PlayerJumpRight
Black


Orb
Red Purple DarkBlue
.000.
01110
01210
01110
.000.

CrateArtifact
#765026 #C77629
.....
.000.
.010.
.000.
.....

CrateInfectionSeed
White

CrateInfectionComplete
White
.....
.....
.....
.....
.....

CrateInfectionTemp
White
.....
.....
.....
.....
.....


Grass
Brown #765026 Green LightGreen
23233
02002
10000
00000
00100

Dirt
Brown #765026
00001
00000
10000
00000
00100

Crumble
Brown
0.0.0
00000
.....
.....
.....


=======
LEGEND
=======

Background = BlueSky or CrateInfection
. = BlueSky
+ = CrateInfection
S = Space

D = EditModeDrop and Space

G = Goal
@ = GoalLocked
K = Key
L = Ladder

> = PlayerRight
< = PlayerLeft
^ = PlayerLadder
Player = PlayerLeft or PlayerRight or PlayerLadder or EditModeCursor
NonCursorPlayer = PlayerLeft or PlayerRight or PlayerLadder
PlayerJump = PlayerJumpLeft or PlayerJumpRight
PlayerDisabled = PlayerLeftDisabled or PlayerRightDisabled or PlayerLadderDisabled

C = Crate

O = Orb
A = CrateArtifact and CrateInfection
T = Dirt and EditModeDrop
Y = Goal and CrateInfectionSeed
U = Grass and EditModeDrop
I = EditModeDrop

* = Grass
# = Dirt
F = Fire
- = Crumble
Ground = Grass or Dirt or Fire or Crumble

Solid = Crate or Ground or Space or Key or Fire or Crumble

Thing = Orb or Player or PlayerDisabled or Crate or Ground or EditModeArrow or Key or Fire or Crumble

Transformable = Key or Ladder or Fire or BurningCrate or BurntCrate or Grass or Dirt or Crumble


=======
SOUNDS
=======

ShowMessage 72692706

Crate Move Horizontal 99804707
EditModeCursor Move 44871706

SFX0 97366302 (win; manually triggered because some levels are cutscenes)
SFX1 41487108 (activate edit mode)
SFX2 37184702 (bridge crumble)
SFX3 79796108 (CRATE RAIN)
SFX4 73912901 (leave edit mode)
SFX5 26404105 (jump)
SFX6 31560708 (get orb)
SFX7 16509700 (get key)
SFX8 38835508 (crate fire)
SFX9 24561108 (crate infection)

================
COLLISIONLAYERS
================

Background
Goal, GoalLocked, Ladder, EditModeDrop
Orb, Key, Player, PlayerJump, PlayerDisabled, Crate, Ground, Space, EditModeArrow, Fire, BurningCrate, BurntCrate, CrateArtifact
EditModeCursor, CrateInfectionSeed, CrateInfectionComplete, CrateInfectionTemp

======
RULES
======

( ==================
  ENDGAME ANIMATIONS
  ================== )

(play the sound effect when infection begins)
[ NonCursorPlayer CrateInfectionSeed ] -> [ Crate CrateInfectionSeed ] SFX9
[ Goal CrateInfectionSeed ] -> [ Goal CrateInfectionSeed ] SFX9

(infection radiation)
[ CrateInfectionSeed | no CrateInfectionComplete no Space ] -> [ CrateInfectionSeed | CrateInfectionTemp ] again
[ CrateInfectionSeed ] -> [ CrateInfectionComplete ]

(when the infection hits a specified trigger tile, move on to the next level; due to the object limit, I'm using EditModeDrop for this)
[ CrateInfectionComplete EditModeDrop ] -> [ CrateInfectionComplete EditModeDrop ] win

(infection tile transformations)
late [ CrateInfectionTemp BlueSky ] -> [ CrateInfectionTemp CrateInfection ]
late [ CrateInfectionTemp Transformable ] -> [ CrateInfectionTemp Crate ]
late [ CrateInfectionTemp ] -> [ CrateInfectionSeed ]

(when the player touches the artifact, start infection)
[ > NonCursorPlayer | CrateArtifact ] -> [ | NonCursorPlayer CrateInfectionSeed ]


( =========
  EDIT MODE
  ========= )

(hitting the X key when in the normal game activates the edit mode)
[ EditModeDrop Space ] UP [ ACTION NonCursorPlayer | ... | EditModeDrop ] -> [ EditModeDrop Space ] [ ACTION NonCursorPlayer | ... | EditModeDrop EditModeCursor ] SFX1
[ EditModeDrop Space ] [ ACTION NonCursorPlayer ] -> [ EditModeDrop EditModeArrow ] [ ACTION NonCursorPlayer ]
[ EditModeDrop EditModeArrow ] [ ACTION PlayerLeft ] -> [ EditModeDrop EditModeArrow ] [ PlayerLeftDisabled ]
[ EditModeDrop EditModeArrow ] [ ACTION PlayerRight ] -> [ EditModeDrop EditModeArrow ] [ PlayerRightDisabled ]
[ EditModeDrop EditModeArrow ] [ ACTION PlayerLadder ] -> [ EditModeDrop EditModeArrow ] [ PlayerLadderDisabled ]

(hitting the X key while in edit mode returns to platform control)
[ ACTION EditModeCursor ] [ EditModeDrop EditModeArrow ] -> [ ACTION EditModeCursor ] [ EditModeDrop Space ]
[ ACTION EditModeCursor ] [ PlayerLeftDisabled ] -> [ ACTION EditModeCursor ] [ PlayerLeft ]
[ ACTION EditModeCursor ] [ PlayerRightDisabled ] -> [ ACTION EditModeCursor ] [ PlayerRight ]
[ ACTION EditModeCursor ] [ PlayerLadderDisabled ] -> [ ACTION EditModeCursor ] [ PlayerLadder ]
[ ACTION EditModeCursor ] -> [ ] SFX4

(restrict the cursor's movement)
HORIZONTAL [ > EditModeCursor | no EditModeArrow ] -> [ EditModeCursor | no EditModeArrow ]
[ UP EditModeCursor ] -> [ EditModeCursor ]

( {1} )
(Hitting the down arrow in edit mode drops a crate. The rule that does this is further down so that it happens after the normal gravity assertion; if it were here, the crate would fall one row before drawing and would appear to start on the second row from the top.

Search for {2} to find the rule.)



( ===============
  NORMAL MOVEMENT
  =============== )

(forces another turn after player movement to assert gravity)
[ MOVING NonCursorPlayer ] -> [ MOVING NonCursorPlayer ] again

(Change the player's orientation based on movement.)
[ LEFT NonCursorPlayer ] -> [ LEFT PlayerLeft ]
[ RIGHT NonCursorPlayer ] -> [ RIGHT PlayerRight ]
late [ NonCursorPlayer Ladder ] -> [ PlayerLadder Ladder ]

(shove crates)
HORIZONTAL [ > NonCursorPlayer | Crate ] -> [ > NonCursorPlayer | > Crate ]

(level 2 ends when you grab the orb)
[ > NonCursorPlayer | Orb ] -> [ > NonCursorPlayer | Orb ] SFX6 win

(burn some crates)
[ BurntCrate ] -> [ ]
[ BurningCrate ] -> [ BurntCrate ] again
[ BurntCrate | Crate ] -> [ BurntCrate | BurningCrate ]
DOWN [ Crate no CrateInfection | Fire ] -> [ BurningCrate | Fire ] SFX8 again



( ==================
  CLIMBING & GRAVITY
  ================== )

(A player can climb on top of a crate by walking into it or pressing up while facing it, but only if there's something on the other side of the crate so the player can't push it, and also if there's nothing above the player or the crate. Done by using a temporary player object that moves up if there's no obstacle above and then moves on top of the crate if there's no obstacle there.)
RIGHT [ > NonCursorPlayer | Crate | Solid ] -> [ PlayerJumpRight | Crate | Solid ]
RIGHT [ ^ PlayerRight | Crate | Solid ] -> [ PlayerJumpRight | Crate | Solid ]
UP [ PlayerJumpRight | no Solid ] -> [ PlayerJumpRight | v PlayerRight ]
LEFT [ > NonCursorPlayer | Crate | Solid ] -> [ PlayerJumpLeft | Crate | Solid ]
LEFT [ v PlayerLeft | Crate | Solid ] -> [ PlayerJumpLeft | Crate | Solid ]
UP [ PlayerJumpLeft | no Solid ] -> [ PlayerJumpLeft | ^ PlayerLeft ]

(don't let the player move up or down unless they're on a ladder)
[ UP NonCursorPlayer no Ladder ] -> [ NonCursorPlayer no Ladder ]

(assert gravity)
DOWN [ STATIONARY Crate ] -> [ > Crate ] again
DOWN [ STATIONARY NonCursorPlayer no Ladder | no Ladder ] -> [ > NonCursorPlayer no Ladder | no Ladder ] again

(get keys and unlock goals; happens after gravity so you can fall on keys)
HORIZONTAL DOWN [ > NonCursorPlayer | Key ] [ GoalLocked ] -> [ > NonCursorPlayer | ] [ Goal ] SFX7

(Clean up after jumping.)
(If the player is on top of a temporary jump token, then the player moved up but was blocked by an obstacle on top of the crate, so move the player back down.)
late DOWN [ NonCursorPlayer | PlayerJump ] -> [ | NonCursorPlayer ]
(If the player and the temporary jump token both exist here, then the player jumped successfully. Clear the token and destroy the crumbling floor if the player was standing on one.)
late DOWN [ NonCursorPlayer ] [ PlayerJump | Crumble ] -> [ NonCursorPlayer ] [ | ] SFX5 SFX2
late [ NonCursorPlayer ] [ PlayerJump ] -> [ NonCursorPlayer ] [ ] SFX5
(If there's a temporary jump token remaining here, then the player tried jumping but was blocked from above. Turn the token back into the player.)
late [ PlayerJumpLeft ] -> [ PlayerLeft ]
late [ PlayerJumpRight ] -> [ PlayerRight ]



( =============
  MISCELLANEOUS
  ============= )

( {2} )
(Hitting X over one of the arrows in edit mode drops a crate. Search for {1} for an explanation of why this rule is here after gravity.)
DOWN [ DOWN EditModeCursor | no Thing ] -> [ EditModeCursor | Crate ] SFX3 again
[ DOWN EditModeCursor ] -> [ EditModeCursor ]

(win condition; player must be standing on solid ground to enter the goal)
late DOWN [ NonCursorPlayer Goal | Solid ] -> [ NonCursorPlayer Goal | Solid ] SFX0 win

(crumble breakable floors if the player is walking away after standing on one; happens after pushing, climbing, & gravity)
DOWN [ PERPENDICULAR NonCursorPlayer no Ladder | Crumble ] -> [ PERPENDICULAR NonCursorPlayer no Ladder | ] SFX2



==============
WINCONDITIONS
==============

(win condition is a rule to enforce that the player must be stationary on the goal)

=======
LEVELS
=======

message I love crates.
message I could push them or climb on them every day.

(mechanics tutorial)
SSSSSSSSS
S.......S
S.*..C..S
S.#****LS
SG.C..#LS
S..C..#LS
S*****#LS
S......LS
S>.C..C.S
S*******S
SSSSSSSSS

(mechanics quiz)
SSSSSSSSSSSSSSSSSSSSS
S................C..S
S..............****LS
S................C.LS
S.......C.CL...****LS
S.......***L.......LS
SG....>......***...LS
S**...C....C......C*S
S##*.**************#S
S###*###############S
SSSSSSSSSSSSSSSSSSSSS

message I wish the world had more crates.

(rain tutorial prelude)
SSSSSSSSSSSSSSSSSSS
SG..<.............S
S*.*L.............S
S...L.............S
S.***.********....S
S..C..............S
SL***.****.****...S
SL.........C...***S
SL.......L***....OS
S*......C.....C.**S
S#*************.##S
S##############*##S
SSSSSSSSSSSSSSSSSSS

message [Press X to rain crates. Use the arrow keys to drop crates and X to return.]
message
message Who said that?

(rain tutorial)
SDDDDDDDDDDDDDDDDDS
SG................S
S*.*L.............S
S...L.............S
S.***.********....S
S.................S
SL***.****.****...S
SL.............***S
SL.......L***....>S
S*.....CC......C**S
S#*************C##S
S##############*##S
SSSSSSSSSSSSSSSSSSS

message This is... exhilarating.

(rain 1)
SDDDS
SG..S
S*..S
S...S
S...S
S...S
S>..S
S***S
SSSSS

(rain 2)
SDDDDDDDDDDDDS
S.K.........<S
S.**.**.**.**S
S...........@S
S..........**S
S............S
S............S
S............S
S************S
SSSSSSSSSSSSSS

(rain 3)
SDDDDDDDS
S......KS
SL**.***S
SL.C.C..S
SL.C.C..S
SL.C.C..S
SL.C@C..S
SL.C*C..S
SL.C^C..S
SL.C*C..S
SL.C.C..S
SL.C.C..S
SL*****LS
SL.....LS
SSSSSSSSS

(fire 1)
SDDDDDDDDDDDS
S...........S
S@.......C<.S
S******L***LS
S..........LS
SK..*......LS
S*C...C.C..*S
S#*****F***#S
SSSSSSSSSSSSS

(fire 2)
SDDDDDDDDDDS
S......C...S
S..**L***..S
S....L....KS
S....L...**S
S>.C..C...@S
S****F*****S
SSSSSSSSSSSS

(fire 3)
SDDDDDDDDDS
S.........S
S...^.....S
S*.***....S
S#.#......S
S#.#K*....S
S#.#......S
S#.#**....S
S#.....**LS
S#.....@#LS
S......*#LS
S........LS
S***F*****S
SSSSSSSSSSS

(crumble 1)
SDDDDDDDDDDDS
SK..........S
S****...L...S
S@.>........S
S****-----**S
S####*FFF*##S
SSSSSSSSSSSSS

(crumble 2)
SDDDDDDDDDS
S.......**S
S.****..##S
S.......C<S
S*----****S
S#..F*####S
S#....G###S
S#F.***###S
S##*######S
SSSSSSSSSSS

(crumble 3)
SDDDDDDDDDDDDDDDS
S*******.*******S
S...............S
SL*.**.****L***LS
SL.........L...LS
SL**.***.****.*LS
SL.............LS
SL*.****.*.F*.*LS
SL.............LS
SL****-.*.-*F.*LS
SL......G......LS
S*C.....^.....C*S
S#**FFF***FFF**#S
SSSSSSSSSSSSSSSSS

(endgame 1 [temple])
SSSSSSSSSSSSSSSSSSSSS
S................+++S
S..............+++++S
S............+++++A+S
S>........+++++++CCCS
S*******CCCCCCCCCCCCS
ST##CCCCCCCCCCCCCCCCS
SSSSSSSSSSSSSSSSSSSSS

(endgame 2 [crumble 3 redux])
SSSSSSSSSSSSSSSSS
SU******.*******S
S...............S
SL*.**.****L***LS
SL.........L...LS
SL**.***.****.*LS
SL.............LS
SL*.****.*.F*.*LS
SL.............LS
SL****-.*.-*F.*LS
SL......Y......LS
S*C...........C*S
S#**FFF***FFF**#S
SSSSSSSSSSSSSSSSS

(endgame 3 [mechanics tutorial redux])
SSSSSSSSS
S.......S
S.*..C..S
S.#****LS
SY.C..#LS
S..C..#LS
S*****#LS
S......LS
S..C..C.S
S******US
SSSSSSSSS

(endgame 4 [planet])
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
SSSSSSSSSSSS###.....SSSSSSSSSSSS
SSSSSSSSS#####**#......SSSSSSSSS
SSSSSSSS######****#.....SSSSSSSS
SSSSSY##########***#.....*SSSSSS
SSSSS#############.........SSSSS
SSSS###FFFFF................SSSS
SSSS................****###.SSSS
SSS................****######SSS
SSFF..............#****####**.SS
SS##....*.........##########**SS
SS#.....#..........##########.SS
S#.................#######.....S
S.................#######......S
S...............FFF##..........S
S............#FF...............S
S........#######..........F....S
S......#####****#..............S
S.......#####***#..............S
S..............................S
SS............................SS
SSFFF......................***SS
SS.FFF.....................***SS
SSS.##......................*SSS
SSSS#.......................SSSS
SSSS........................SSSS
SSSSS#....................ISSSSS
SSSSSS###.................SSSSSS
SSSSSSSS####............SSSSSSSS
SSSSSSSSS######........SSSSSSSSS
SSSSSSSSSSSS######..SSSSSSSSSSSS
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

message
message
message Bliss.



USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Switch Maze
author Your Name
homepage www.example.com

========
OBJECTS
========

Background
White

Wall
Black
.....
.....
.....
.....
.....

Player
Green
.000.
.0.0.
.000.
.0.0.
.000.

Goal
Yellow
.....
..0..
.000.
..0..
.....

Switch
Blue
.....
..0..
.....
.....
.....

Barrier
Red
.....
.....
.....
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
G = Goal
S = Switch
B = Barrier

=======
SOUNDS
=======

SFX0 36772507 (moveplayer)
SFX1 30958409 (switchtoggle)

================
COLLISIONLAYERS
================

Background
Player, Wall, Goal, Switch, Barrier

======
RULES
======

[ > Player | Switch ] -> [ > Player | Background ] sfx1
[ > Player | Barrier Background ] -> [ > Player | Background Barrier ]
background [Barrier | Background] -> [Background | Barrier]

==============
WINCONDITIONS
==============

All Player on Goal

=======
LEVELS
=======

message Level 1
#######
#.....#
#.P#..#
#.SB..#
#.....#
###G###

message Level 2
#########
#.#...G.#
#.#.###.#
#S....#.#
#.#####.#
#.#P#...#
###.##.##
#########

message Level 3
###########
#.......G.#
#.#####.#.#
#.S.....#.#
#.#.#####.#
#.#.......#
#.#.#####.#
#.#.S#P#.##
#####.#####
###########


```
produced the following console output:
=================================
line 83 : Objects cannot appear outside of square brackets in rules, only directions can.
line 83 : The start of a rule must consist of some number of directions (possibly 0), before the first bracket, specifying in what directions to look (with no direction specified, it applies in all four directions).  It seems you've just entered "BACKGROUND".
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. Return your code in full, inside a ```plaintext code block.