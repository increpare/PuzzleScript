SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Ponies Jumping Synchronously
author vytah

background_color #990044
text_color white

========
OBJECTS
========


Background  (special, automatically placed in its own layer)
lightblue

JumpVariableA
lightblue
0...0
.000.
.0.0.
.000.
0...0

JumpVariableA1
lightblue
0...0
..0..
..0..
..0..
0...0

JumpVariableA2
lightblue
0...0
.0.0.
.0.0.
.0.0.
0...0

JumpVariableT
lightblue
..0..
.000.
.0.0.
.000.
.....

JumpVariableT1
lightblue
..0..
..0..
..0..
..0..
.....

JumpVariableT2
lightblue
..0..
.0.0.
.0.0.
.0.0.
.....

JumpVariableB
lightblue
.....
.000.
.0.0.
.000.
..0..

JumpVariableB1
lightblue
.....
..0..
..0..
..0..
..0..

JumpVariableB2
lightblue
.....
.0.0.
.0.0.
.0.0.
..0..

Dirt
brown darkbrown
00000
01000
00000
00010
00000

Tunnel
brown darkbrown
00000
01000
.....
.....
.....


Grass
brown lightgreen green darkBrown
11211
21020
00000
00030
00000

Exit
pink red
.1.1.
10101
10001
.101.
..1..

WoodenWall
Brown orange
.111.
.001.
.111.
.100.
.111.

Teleport
Brown darkBrown pink white
23332
02220
00000
00010
00000

Fire
red orange yellow
..0..
.00..
0110.
01210
.020.

TwiLeft
purple
.0...
00...
.0000
.0.0.
.0.0.

TwiRight
purple
...0.
...00
0000.
.0.0.
.0.0.

TeleportingTwilight
purple
...0.
...00
0000.
.0.0.
.0.0.

RdLeft
#00dddd
.0...
00...
.0000
.0.0.
.0.0.

RdRight
#00dddd
...0.
...00
0000.
.0.0.
.0.0.

AbLeft
yellow red
..1..
.01..
00...
.0000
.0.0.

AbRight
yellow red
..1..
..10.
...00
0000.
.0.0.

AjLeft
orange
.0...
00...
.0000
.0.0.
.0.0.

AjRight
orange
...0.
...00
0000.
.0.0.
.0.0.

DeadPony
lightGray darkGray
.111.
10001
10101
10001
10101

Boulder
lightGray darkGray
.....
.111.
10001
10001
.111.

=======
LEGEND
=======

Applejack=AjLeft or AjRight
RainbowDash=RdLeft or RdRight
Twilight=TwiLeft or TwiRight
AppleBloom=AbLeft or AbRight
(NotPegasus=Twilight or Applejack or AppleBloom or TeleportingTwilight)
Player=Twilight or Applejack or AppleBloom or RainbowDash
Obstacle=Grass or Dirt or DeadPony or WoodenWall or Teleport or Boulder
JumpObstacle=Obstacle or Player or Tunnel
JumpObstacleForFillies=Obstacle or Player
JumpVariablePositiveA=JumpVariableA1 or JumpVariableA2
JumpVariablePositiveT=JumpVariableT1 or JumpVariableT2
JumpVariablePositiveB=JumpVariableB1 or JumpVariableB2

. = Background
# = Dirt
~ = Grass
| = WoodenWall
T = TwiRight
A = AjRight
D = RdRight
B = AbRight
J = JumpVariableA
H = JumpVariableT
L = JumpVariableB
E = Exit
^ = Teleport
F = Fire
O = Boulder
- = Tunnel

=========
SOUNDS
=========

sfx0 47251907 (aj push)
sfx1 13930501 (twi zap)
sfx2 99083104 (death)
sfx3 12667901 (twi teleport)
sfx4 60310105 (jump)
sfx5 58764102 (rd smash)
sfx7 74120302 (aj buck)
endlevel 64815700



================
COLLISIONLAYERS
================

Background
JumpVariableA, JumpVariablePositiveA, JumpVariableT,JumpVariablePositiveT, JumpVariableB, JumpVariablePositiveB
Exit, Fire, Tunnel
Player, Obstacle, TeleportingTwilight

======
RULES
======

[> Player |Stationary Player] -> cancel
[> Player |< Player] -> cancel

[> Applejack| Tunnel] -> [Applejack|Tunnel]
[> RainbowDash| Tunnel] -> [RainbowDash|Tunnel]
[> Twilight| Tunnel] -> [Twilight|Tunnel]
Vertical [> AppleBloom|Tunnel] -> [AppleBloom|Tunnel]

[Left TwiRight] -> [Left TwiLeft]
[Right TwiLeft] -> [Right TwiRight]
[Left RdRight] -> [Left RdLeft]
[Right RdLeft] -> [Right RdRight]
[Left AjRight] -> [Left AjLeft]
[Right AjLeft] -> [Right AjRight]
[Left AbRight] -> [Left AbLeft]
[Right AbLeft] -> [Right AbRight]

Right[Action Applejack|WoodenWall] -> [AjLeft|]sfx7
Left[Action Applejack|WoodenWall] -> [AjRight|]sfx7

Down[Action Twilight|Teleport][no Player|Teleport]-> [|Teleport][TeleportingTwilight|Teleport] sfx3
late[TeleportingTwilight]->[TwiRight]


UP [ Up Applejack | No Obstacle No Player no tunnel] [JumpVariableA] -> [ Up Applejack | ] [JumpVariableA2] sfx4
DOWN [ Up Applejack | no obstacle No Player no tunnel ][JumpVariablePositiveA] -> [ Applejack | ][JumpVariablePositiveA]
DOWN [ Up Applejack | no obstacle No Player no tunnel][JumpVariableA2] -> [ Applejack | ][JumpVariableA2]
HORIZONTAL [ > Applejack | NO obstacle No Player no tunnel][JumpVariableA1] -> [ | Applejack ][JumpVariableA]
HORIZONTAL [ > Applejack | NO obstacle No Player no tunnel][JumpVariableA2] -> [ | Applejack ][JumpVariableA1]
HORIZONTAL [ > Applejack | JumpObstacle][JumpVariableA1] -> [ Applejack|JumpObstacle ][JumpVariableA]
HORIZONTAL [ > Applejack | JumpObstacle][JumpVariableA2] -> [ Applejack|JumpObstacle ][JumpVariableA1]
LATE DOWN [ Applejack | NO obstacle No Player no tunnel][JumpVariableA] -> [ | Applejack ][JumpVariableA]
LATE DOWN [ Applejack | Obstacle ][JumpVariablePositiveA] -> [ Applejack | Obstacle ][JumpVariableA]


UP [ Up Twilight | No Obstacle No Player no tunnel] [JumpVariableT] -> [ Up Twilight | ] [JumpVariableT2] sfx4
DOWN [ Up Twilight | no obstacle No Player no tunnel ][JumpVariablePositiveT] -> [ Twilight | ][JumpVariablePositiveT]
DOWN [ Up Twilight | no obstacle No Player no tunnel][JumpVariableT2] -> [ Twilight | ][JumpVariableT2]
HORIZONTAL [ > Twilight | NO obstacle No Player no tunnel][JumpVariableT1] -> [ | Twilight ][JumpVariableT]
HORIZONTAL [ > Twilight | NO obstacle No Player no tunnel][JumpVariableT2] -> [ | Twilight ][JumpVariableT1]
HORIZONTAL [ > Twilight | JumpObstacle][JumpVariableT1] -> [ Twilight|JumpObstacle ][JumpVariableT]
HORIZONTAL [ > Twilight | JumpObstacle][JumpVariableT2] -> [ Twilight|JumpObstacle ][JumpVariableT1]
LATE DOWN [ Twilight | NO obstacle No Player no tunnel][JumpVariableT] -> [ | Twilight ][JumpVariableT]
LATE DOWN [ Twilight | Obstacle ][JumpVariablePositiveT] -> [ Twilight | Obstacle ][JumpVariableT]


UP [ Up AppleBloom | No Obstacle No Player no tunnel] [JumpVariableB] -> [ Up AppleBloom | ] [JumpVariableB2] sfx4
DOWN [ Up AppleBloom | no obstacle No Player no tunnel ][JumpVariablePositiveB] -> [ AppleBloom | ][JumpVariablePositiveB]
DOWN [ Up AppleBloom | no obstacle No Player no tunnel][JumpVariableB2] -> [ AppleBloom | ][JumpVariableB2]
HORIZONTAL [ > AppleBloom | NO obstacle No Player][JumpVariableB1] -> [ | AppleBloom ][JumpVariableB]
HORIZONTAL [ > AppleBloom | NO obstacle No Player][JumpVariableB2] -> [ | AppleBloom ][JumpVariableB1]
HORIZONTAL [ > AppleBloom | JumpObstacleForFillies][JumpVariableB1] -> [ AppleBloom|JumpObstacleForFillies ][JumpVariableB]
HORIZONTAL [ > AppleBloom | JumpObstacleForFillies][JumpVariableB2] -> [ AppleBloom|JumpObstacleForFillies ][JumpVariableB1]
LATE DOWN [ AppleBloom | NO obstacle No Player no tunnel][JumpVariableB] -> [ | AppleBloom ][JumpVariableB]
LATE DOWN [ AppleBloom | Obstacle ][JumpVariablePositiveB] -> [ AppleBloom | Obstacle ][JumpVariableB]
)

late [Player Fire] -> [DeadPony Fire] sfx2

[> Applejack|Boulder|no Obstacle No Player] -> [> Applejack| > Boulder |] sfx0
[> RainbowDash|Boulder|no Obstacle No Player] -> [> RainbowDash||] sfx5
Right [Action TwiRight|Boulder] -> [TwiRight|] sfx1
Left [Action TwiLeft|Boulder] -> [TwiLeft|] sfx1

[Boulder Fire] -> [Boulder]

late down [Boulder|Player] -> [|DeadPony] sfx2
late down [Boulder| no Obstacle no Tunnel] -> [|Boulder no Fire]
late [Boulder Fire] -> [Boulder]

==============
WINCONDITIONS
==============

some Player
all Exit on Player
no DeadPony


=======
LEVELS
=======

(message #1. Grab the Crystal Heart.)

..........H
...........
.........E.
..T....~~~~
~~~~~~#####
###########


message #2. Applejack bucks and pushes.

..........J
..~~~~~~~~~
...########
.A.|.o...E#
######.####
###########

message #3. Twilight teleports and zaps.

...........H
............
............
.T....E.O...
~^~FFF~~~~^~
############

message #4. Rainbow Dash flies and smashes.

#########
....#..E#
....O..##
....#..##
.D..#..##
#########

message #5. Rocks fall, everyone dies.

.........J
..........
...~~~~~.~
~~O..O...#
##|A.O..E#
##########

message #6. Cooperate with friends.

J.....###
......###
...D..#.E
....#..O#
.A..O..|#
~~~######
#########

message #7. Cooperate with family.

##.......JL#####
---..O.A.O.#...#
###~.~~~~~.#..E#
###.F..B..F-.###
####.#####.#####
################


message #8. Help a filly get a cutie mark!
~~~~~..........L
#####.........D.
###E-....O......
######...O......
#######.###...B.
############~~~~

message Aww... Still no cutie mark...

message #9. Explore dangerous caves!

.........##############
.......###O############
JHL..#####O############
...#######O############
..#####..-O------O-E###
######..##O######O#####
#####..###|...A..O.....
####..####O###^.#######
####.-----O-------...B.
##########O############
..........O..........T.
############^##########

message #10. Friendship is magic!

JH.........###
.......O.#.#OE
DAT....|.#..O#
~~~.~~~.~###O#
.......F.#..O#
########^#^###

message #11. Evil enchantress.
~~~~~...............JHL
#####~~~~~~~~~~........
################.......
###......###...........
###..O.O.F.....#.#..D..
#E-..#B#.|O........A.T.
#############.~~~~~~~~~
#######################


message #12. Equestrian Games.

###############################
#########O#####################
#########O#####################
###......O..................JHL
###..O.#.O..............D......
#E-..#B#.O.....................
#########O#####################
#........|.....................
#########O#####..|.|.|.|.|.....
#........O....##.#.#.#.#.#.A...
############...################
#############..................
###############...F........T...
###############################

message Congratulations!

message The Mushroom Kingdom is now safe!

message I mean, the Crystal Empire.

title ScriptCross
author Dennis Au
homepage www.puzzlescript.net

========
OBJECTS
========

Background
White

Target
Black

Fill
Black

Cross
LightGrey
0...0
.0.0.
..0..
.0.0.
0...0


Player
Green
00000
0...0
0...0
0...0
00000

Border #
LightGrey

(Clues 0-9)
Clue0 0
LightGrey

Clue1 1
LightGrey Black
00000
0...0
0.1.0
0...0
00000

Clue2 2
LightGrey Black
00000
0..10
0...0
01..0
00000

Clue3 3
LightGrey Black
00000
0..10
0.1.0
01..0
00000

Clue4 4
LightGrey Black
00000
01.10
0...0
01.10
00000

Clue5 5
LightGrey Black
00000
01.10
0.1.0
01.10
00000

Clue6 6
LightGrey Black
00000
01.10
01.10
01.10
00000

Clue7 7
LightGrey Black
00000
01110
0.1.0
01110
00000

Clue8 8
LightGrey Black
00000
01110
0.110
01110
00000

Clue9 9
LightGrey Black
00000
01110
01110
01110
00000


=======
LEGEND
=======

. = Background
P = Player and Border
b = Target
Clue = Clue0 or Clue1 or Clue2 or Clue3 or Clue4 or Clue5 or Clue6 or Clue7 or Clue8 or Clue9
NoEmpty = Fill or Cross or Clue or Border

=======
SOUNDS
=======
EndLevel 37348103
EndGame 64173909

================
COLLISIONLAYERS
================

(switch order of target and background to see the solutions)
Target
Background
Border, Clue, Fill, Cross
Player


======
RULES
======

[Action Player no NoEmpty] -> [Player Fill]
[Action Player Fill] -> [Player Cross]
[Action Player Cross] -> [Player]



==============
WINCONDITIONS
==============

All Target on Fill
All Fill on Target

=======
LEVELS
=======

(P123456789)

message level 1 - oh so stable

P12
1.b
2bb

message level 2 - it is what it is
P#1###
##113#
##311#
3.bbb.
1...b.
3.bbb.
1.b...
3.bbb.

message level 3 - i see you!
P##1#1#
###111#
##.....
11.b.b.
##.....
#3.bbb.
##.....

message level 4 - that's ace
P#######1####
#######111###
######14141##
#####8111118#
###8.bbbbbbb.
##11.b.....b.
#131.b.bbb.b.
1111.b.b.b.b.
#131.b.bbb.b.
1111.b.b.b.b.
##11.b.....b.
###8.bbbbbbb.
####.........

message congratulations!


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


title Puzzles
author increpare
homepage www.puzzlescript.net

(
Unfortunately, just the first level - trying to emulate the later ones proved too complex :[

You can play the original game here:
http://www.increpare.com/2012/06/puzzles/
)

background_color white
text_color blue

run_rules_on_level_start


========
OBJECTS
========

DyingPlayer
Black

Void
White

OBackground
Orange

GBackground
LightGrey

BlueWall
Blue


GreyWall
Grey

RedCrate
Red
.....
.000.
.000.
.000.
.....
GreyCrate
DarkGrey
.....
.000.
.000.
.000.
.....

RedWhale
Red White
00100
00000
10001
00000
00100

GreyWhale
DarkGrey White
00100
00000
10001
00000
00100

RedEndPoint
DarkRed
.....
.000.
.0.0.
.000.
.....

GreyEndPoint
Darkgrey
.....
.....
.....
.....
.....

RedStartPoint
darkRed
.....
.....
.....
.....
.....

GreyStartPoint
darkRed
.....
.000.
.0.0.
.000.
.....

YellowPlayer
yellow
.....
.000.
.000.
.000.
.....

GreyPlayer
DarkGrey
.....
.000.
.000.
.000.
.....

LeftBeam
white
.....
.....
00000
.....
.....

RightBeam
white
.....
.....
00000
.....
.....

UpBeam
white
..0..
..0..
..0..
..0..
..0..

DownBeam
white
..0..
..0..
..0..
..0..
..0..

=======
LEGEND
=======

Background = Void or OBackground or GBackground
Player = YellowPlayer or GreyPlayer or DyingPlayer
Wall = BlueWall or GreyWall
Crate = RedCrate or GreyCrate
Whale = RedWhale or GreyWhale
StartPoint = RedStartPoint or GreyStartPoint
EndPoint = RedEndPoint or GreyEndPoint
. = OBackground
, = Void
# = BlueWall
W = RedWhale
C = RedCrate
S = RedStartPoint and YellowPlayer
E = RedEndPoint
Obstacle = Player or Whale or Crate or Wall
Beam = UPBeam or DownBeam or LeftBeam or RightBeam
VBeam = UPBeam or DownBeam
HBeam = LeftBeam or RightBeam
HBeamSource = HBeam or Whale
VBeamSource = VBeam or Whale
Pushable = Player or Whale or Crate
RedPushable = YellowPlayer or RedWhale or RedCrate
GreyPushable = GreyPlayer or GreyWhale or GreyCrate

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
StartPoint, EndPoint
Player, Wall, Crate, Whale
UpBeam, DownBeam
LeftBeam, RightBeam

======
RULES
======


left [ LeftBeam | < Player ] -> [ LeftBeam | Player ]
right [ RightBeam | < Player ] -> [ RightBeam | Player ]
up [ UpBeam | < Player ] -> [ UpBeam | Player ]
down [ DownBeam | < Player ] -> [ DownBeam | Player ]

right [ RightBeam | stationary Pushable ] -> [ RightBeam | > Pushable ]
left [ LeftBeam | stationary Pushable ] -> [ LeftBeam | > Pushable ]
up [ UpBeam | stationary Pushable ] -> [ UpBeam | > Pushable ]
down [ DownBeam | stationary Pushable ] -> [ DownBeam | > Pushable ]

[ Whale | stationary Pushable ] -> [ Whale | > Pushable ]


[ Beam ] -> []


[ >  Player | Crate ] -> [  >  Player | > Crate  ]
[ > Crate | stationary Crate ] -> [ > Crate | > Crate ]

( using red/greypushable is an optimization - cuts down on unecessary rules by quite a lot, beause red and grey things never coexist)
[ > RedPushable | v RedPushable ] -> [ RedPushable | v RedPushable ]
[ > RedPushable | ^ RedPushable ] -> [ RedPushable | ^ RedPushable ]
[ > RedPushable | < RedPushable ] -> [ RedPushable | < RedPushable ]

[ > GreyPushable | v GreyPushable ] -> [ GreyPushable | v GreyPushable ]
[ > GreyPushable | ^ GreyPushable ] -> [ GreyPushable | ^ GreyPushable ]
[ > GreyPushable | < GreyPushable ] -> [ GreyPushable | < GreyPushable ]

late Up [ Whale | no Obstacle ] -> [ Whale | UpBeam ]
late Down [ Whale | no Obstacle ] -> [ Whale | DownBeam ]
late Left [ Whale | no Obstacle ] -> [ Whale | LeftBeam ]
late Right [ Whale | no Obstacle ] -> [ Whale | RightBeam ]

late horizontal [ HBeam | no obstacle ] -> [ HBeam | HBeam ]
late vertical [ VBeam | no obstacle ] -> [ VBeam | VBeam ]


(DEATH TRANSITION)
late Horizontal [ HBeamSource | YellowPlayer ]  -> [ HBeamSource | DyingPlayer ]
late Vertical [ VBeamSource | YellowPlayer ]  -> [ VBeamSource | DyingPlayer ]

late [ DyingPlayer ] [ BlueWall ] -> [ DyingPlayer ] [ GreyWall ]
late [ DyingPlayer ] [ RedWhale ] -> [ DyingPlayer ] [ GreyWhale ]
late [ DyingPlayer ] [ RedCrate ] -> [ DyingPlayer ] [ GreyCrate ]
late [ DyingPlayer ] [ RedStartPoint ] -> [ DyingPlayer ] [ GreyStartPoint ]
late [ DyingPlayer ] [ RedEndPoint ] -> [ DyingPlayer ] [ GreyEndPoint ]
late [ DyingPlayer ] [ OBackground ] -> [ DyingPlayer ] [ GBackground ]
late [ DyingPlayer ] -> [ GreyPlayer ]

late [DyingPlayer] -> [GreyPlayer]

(LIFE TRANSITION)
late [ GreyPlayer GreyStartPoint ] [ GreyWall ] -> [ GreyPlayer GreyStartPoint ] [ BlueWall ]
late [ GreyPlayer GreyStartPoint ] [ GreyCrate ] -> [ GreyPlayer GreyStartPoint ] [ RedCrate ]
late [ GreyPlayer GreyStartPoint ] [ GreyWhale ] -> [ GreyPlayer GreyStartPoint ] [ RedWhale ]
late [ GreyPlayer GreyStartPoint ] [ GreyEndPoint ] -> [ GreyPlayer GreyStartPoint ] [ RedEndPoint ]
late [ GreyPlayer GreyStartPoint ] [ GBackground ] -> [ GreyPlayer GreyStartPoint ] [ OBackground ]

late [ GreyPlayer GreyStartPoint ] -> [ YellowPlayer RedStartPoint ]

late [player]->again

==============
WINCONDITIONS
==============

All Player on RedEndPoint

=======
LEVELS
=======


#########
#......E#
#..CC..##
#.....##,
#.....W#,
##.#####,
#......#,
#..CC..#,
#..CC..#,
##.....#,
#W.....#,
######.#,
#......#,
#......#,
##S#####,
########,



title Gobble Rush!
author Mark Richardson
again_interval 0.05
noaction
require_player_movement
run_rules_on_level_start


========
OBJECTS
========

Background
Black

Exit
White Black
01010
10101
01010
10101
01010

Wall
Brown

Hole
Brown
00000
00.00
0...0
0...0
0...0

Player
Pink Blue Brown Red DarkBlue
.222.
.101.
33333
.444.
44.44

Enemy
LightBrown
.....
0..0.
.00..
0000.
0..0.

Alert
Red
....0
....0
.....
....0
.....

Chicken
#EA3 #FC9 #FEA
.....
2....
.110.
01100
.000.

Lettuce
#6C3 #5A2 #482 #361 #240
.2.2.
24342
12421
01310
.002.

LoS
White
.....
.....
.....
.....
.....

MoveU
White
.....
.....
.....
.....
.....

MoveD
White
.....
.....
.....
.....
.....

MoveL
White
.....
.....
.....
.....
.....

MoveR
White
.....
.....
.....
.....
.....

CanMove
White
.....
.....
.....
.....
.....

Level0
White #F00
.....
.....
.111.
.....
.....

Level1
White #F00
00000
.....
.111.
.....
.....

Level2
White #F00
.....
00000
.111.
.....
.....

Level3
White #F88
.....
.....
01110
.....
.....

Level4
White #F00
.....
.....
.111.
00000
.....

Level5
White #F00
.....
.....
.111.
.....
00000


=======
LEGEND
=======

. = Background
X = Exit
# = Wall
H = Hole
P = Player
Q = Player and Exit
E = Enemy
F = Enemy and Exit
C = Chicken
D = Chicken and Exit
L = Lettuce
M = Lettuce and Exit
0 = Level0
1 = Level1
2 = Level2
3 = Level3
4 = Level4
5 = Level5

Move = MoveU or MoveD or MoveL or MoveR
Obstacle = Wall or Enemy
Food = Player or Chicken


=======
SOUNDS
=======

SFX0            97542903 (enemy alerted)
Player  Destroy 41368102 (player eaten)
Chicken Destroy 74663702 (chicken eaten)
Lettuce Destroy 74663702 (lettuce eaten)
Enemy   Create  81259707 (enemy moving)
EndLevel        22595303


================
COLLISIONLAYERS
================

Background
Exit, Hole, Level0, Level1, Level2, Level3, Level4, Level5
Wall, Player, Enemy, Chicken, Lettuce
LoS, Move
Alert, CanMove


======
RULES
======

(Prevent illegal moves)
[ > Player | Hole ] -> cancel

(Tell alert enemies to move)
[ Enemy Move ] -> [ Enemy CanMove Move ]

(Stop enemies)
late up    [ Enemy CanMove MoveU |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late left  [ Enemy CanMove MoveL |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late right [ Enemy CanMove MoveR |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD | Enemy CanMove MoveU ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy CanMove MoveL ] -> [ Enemy | Enemy    ]
late up    [ Enemy CanMove MoveU | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late down  [ Enemy CanMove MoveD | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late left  [ Enemy CanMove MoveL | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy      no Move  ] -> [ Enemy | Enemy    ]

(Move enemies)
late up    [ Enemy CanMove MoveU | no Obstacle         ] -> [       | Enemy MoveU ] again
late down  [ Enemy CanMove MoveD | no Obstacle         ] -> [       | Enemy MoveD ] again
late left  [ Enemy CanMove MoveL | no Obstacle         ] -> [       | Enemy MoveL ] again
late right [ Enemy CanMove MoveR | no Obstacle         ] -> [       | Enemy MoveR ] again
late       [ Enemy CanMove       ]                       -> [ Enemy ]

(Remove alerts)
late       [ Enemy Alert         ]                       -> [ Enemy ]

(Create line of sight)
late [ Food no CanMove ] -> [ Food CanMove ]
late [ Move ] [ CanMove ] -> [ Move ] [ ]

(Chase player)
late [ Player CanMove ] -> [ Player LoS ]
late [ Player LoS | no Wall no LoS ] -> [ Player LoS | LoS ]
late [ Player Los | ... | LoS | no Wall no LoS ] -> [ Player LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveU Alert | ... | Player LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveD Alert | ... | Player LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveL Alert | ... | Player LoS ] SFX0
late right [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveR Alert | ... | Player LoS ] SFX0
late [ LoS ] -> [ ]

(Chase chickens)
startloop
late random [ Chicken CanMove ] -> [ Chicken LoS ]
late [ Chicken LoS | no Wall no LoS ] -> [ Chicken LoS | LoS ]
late [ Chicken Los | ... | LoS | no Wall no LoS ] -> [ Chicken LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveU Alert | ... | Chicken LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveD Alert | ... | Chicken LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveL Alert | ... | Chicken LoS ] SFX0
late right [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveR Alert | ... | Chicken LoS ] SFX0
late [ LoS ] -> [ ]
endloop


==============
WINCONDITIONS
==============

some Exit on Player
no Alert
no Move


=======
LEVELS
=======

..#####....
..#X..#...3
..#...###.0
..#E....#.0
..###...#.0
....#..P#.0
....#####..

..#######..
..#P....#.4
..#.....#.0
..#####.#.0
..#EX...#.0
..###...#.0
....#####..

..#######..
..#.....#.5
..#..#..#.0
..#.....#.0
..#.P##E#.0
..#..#XE#.0
..#######..

..#######..
..#.....#.0
..#.E...#.1
..#.E...#.0
..#.E...#.0
..#XE.P.#.0
..#######..

..#######..
..#..#.X#.0
..#..E..#.2
..##.#E##.0
..#.....#.0
..#P.#..#.0
..#######..

..#######..
..#X...P#.0
..##.#..#.3
..#...#.#.0
..#.....#.0
..#.E#.E#.0
..#######..

..######...
..#P.#.##.0
..#.X..E#.4
..##.#..#.0
..#.....#.0
..##..E.#.0
...######..

...####....
..##..##..0
..#.P..##.5
..#..X.E#.0
..##...##.0
...##E##..0
....###....

..#######..
..#XE...#.0
..#EE..##.0
..#..P..#.1
..#.....#.0
..#.#...#.0
..#######..

..#######..
..#P..#X#.0
..#.....#.0
..##....#.2
..#.....#.0
..#E..#E#.0
..#######..

..#######..
..#X...P#.0
..#.###.#.0
..#.....#.3
..#E###.#.0
..#....C#.0
..#######..

..#######..
..#P....#.0
..#..#.E#.0
..#.....#.4
..##.C.##.0
...##X##..0
....###....

..#######..
..#....C#.0
..##X#.##.0
..#EH..#..5
..##...#..0
...#.PC#..0
...#####...

...######..
...#.#..#.0
..##Q..E#.0
..#...#.#.0
..#..#..#.1
..#.E.C.#.0
..#######..

.....####..
...###.E#.0
...#P...#.0
..##..L.#.0
..#..LXL#.2
..#E..L.#.0
..#######..

...######..
..##LLCX#.0
..#LLCLC#.0
..#LCL.L#.0
..#ELLPL#.3
..#LLC#L#.0
..#######..

..#######..
..#....P#.0
..#E.#E.#.0
..#.....#.0
..##LLL##.4
...##X##..0
....###....

..#######..
..##LXL##.0
..#..L..#.0
..#..#..#.0
..#E...E#.5
..##.P.##.0
..#######..

..#######..
..#H.P..#.0
..#XH...#.0
..#..H.E#.0
..#...H.#.0
..#.E...#.1
..#######..

..#######..
..#.E.E.#.0
..#P....#.0
..#..X.E#.0
..#L..L.#.0
..#.E.EL#.2
..#######..

..#######..
..#L.L.L#.0
..#L.L.L#.0
..#L.P.L#.0
..#L.L.L#.0
..#L.L.L#.3
..##X#X##..


title maze generator
run_rules_on_level_start
again_interval 0

========
OBJECTS
========

Background .
black white
00000
01110
01110
01110
00000

Player P
transparent

visited
transparent

filler
transparent

w_up
white
.000.
.000.
.000.
.000.
.....

w_down
white
.....
.000.
.000.
.000.
.000.

w_left
white
.....
0000.
0000.
0000.
.....

w_right
white
.....
.0000
.0000
.0000
.....

to_delete
transparent

temp
transparent

tempA
transparent

=======
LEGEND
=======


=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Player
filler
visited
w_up
w_down
w_left
w_right
to_delete
temp
tempA

======
RULES
======

(place player randomly on the first turn only)
random [ no filler ] -> [player visited]
[no filler] -> [filler]

(propagate path until you can't move any more)
random [ player |  no visited ] ->  [  visited > to_delete |  < to_delete player ] again

(if you can't extend the current path, continue from some random other neighbouring point)
[player | no visited ] -> [ player tempA | ]
random [player no tempA] [ visited | no visited ] -> [ visited ] [ visited player |  ] again
[tempA]->[]

[ up to_delete ] -> [ w_up ]
[ down to_delete ] -> [ w_down ]
[ left to_delete ] -> [ w_left ]
[ right to_delete ] -> [ w_right ]

==============
WINCONDITIONS
==============


=======
LEVELS
=======

........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................




USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Sushi Cat
author Assistant
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LightBlue
00000
00000
00000
00000
00000

Wall
DarkGrey LightGrey
11111
11111
11111
11111
11111

Cat
Yellow Orange Black White
..0..
.000.
.333.
.030.
..0..

Sushi
Orange Black White Red
.....
.0.0.
.222.
.111.
.....

=======
LEGEND
=======

. = Background
# = Wall
Player = Cat
S = Sushi

=========
SOUNDS
=========

=============== 
COLLISIONLAYERS
===============

Background
Sushi
Cat, Wall

======
RULES
======

[ > Player | Sushi ] -> [ > Player | ]

==============
WINCONDITIONS
==============

No Sushi

=======
LEVELS
=======

#..#..#..#
#....S..##
#..#..#.S#
#.p......#
#S#.#..###
#..#..#..#

#..#..#..#
#S...S..##
#..#..#.S#
#.p..S...#
#S#.#..###
#..#..#..#

message You collected all the sushi! Congrats!

```
produced the following console output:
=================================
line 81 : Key "P" not found. Do you need to add it to the legend, or define a new object?
line 88 : Key "P" not found. Do you need to add it to the legend, or define a new object?
line 81 : Error, symbol "p", used in map, not found.
line 88 : Error, symbol "p", used in map, not found.
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.