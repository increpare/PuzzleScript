SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Atlas Shrank
author James Noeckel
run_rules_on_level_start
flickscreen 18x11

========
OBJECTS
========

Background
#0e193f #202a4c #20324a #1f3649 #00003d
00004
13210
04000
10111
00032

Exit
#d0691d #9a521d #7b441c #ad5a1d #8e4c1c yellow
.222.
23140
23140
25140
23140

DoorO
#cf732f
0...0
0...0
0...0
0...0
0...0

Switch
#ec5656 #ec3232 #b31313
01.01
1...2
.....
0...2
12.22

Door
#d0691d #9a521d #7b441c #ad5a1d #8e4c1c
03412
04132
03112
01142
04112

ShadowDoor
black

ShadowDoorO
black

WallUD
#697490 #485b76 #8083ba #646f8a #6d7b96
23041
23041
23041
23041
23041

WallRL
#697490 #485b76 #8083ba #646f8a #6d7b96
22222
33333
00000
44444
11111

WallR
#697490 #485b76 #8083ba #646f8a #6d7b96
40401
03401
40031
03001
00001

WallL
#697490 #485b76 #8083ba #646f8a #6d7b96
20404
20430
23004
20030
20000

WallU
#697490 #485b76 #8083ba #646f8a #6d7b96
22222
00000
40300
03044
40430

WallD
#697490 #485b76 #8083ba #646f8a #6d7b96
04030
03400
04004
30304
11111

WallM
#697490 #485b76 #8083ba #646f8a #6d7b96
03040
34430
43340
44303
30030


Wallsolo
#697490 #485b76 #8083ba #a7aae3 #2d425e #646f8a #6d7b96
32220
20651
25561
26601
01114

PlayerS
#ffb173 #ff6464 #d7d7d7 #d74629
.000.
.101.
02220
03230
.0.0.

PlayerL
#ffb173 #ff6464 #d7d7d7 #d74629
.000.
.100.
.223.
.233.
.0.0.

PlayerR
#ffb173 #ff6464 #d7d7d7 #d74629
.000.
.001.
.322.
.332.
.0.0.

PlayerLH
#ffb173 #ff6464 #d7d7d7 #d74629
.0.0.
.100.
.220.
.233.
.0.0.

PlayerRH
#ffb173 #ff6464 #d7d7d7 #d74629
.0.0.
.001.
.022.
.332.
.0.0.

Crate
#9f7666 #c8917c #945a50 #8b4c42
.000.
00113
01123
01223
.333.

Heldcrate
#9f7666 #c8917c #945a50 #8b4c42
.000.
00113
01123
01223
.333.

Shadowcrate
black

H_pickup
red
.....
.....
..0..
.....
.....

H_drop
red
.....
.....
..0..
.....
.....

H_grav
gray
.....
.....
..0..
.....
.....

H_step
yellow
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wallsolo
P = PlayerS
* = Crate
O = Exit
X = Door
T = Switch
@ = Switch and Crate
Wall = WallUD or WallRL or WallR or WallL or WallM or Wallsolo or WallU or WallD
Player = PlayerL or PlayerR or PlayerS or PlayerRH or PlayerLH
Solid = Player or Crate or Wall or Heldcrate or Door or Shadowcrate or Shadowdoor
Massive =  Crate
Helpers = H_pickup or H_drop or H_grav or H_step
Weight = Player or Crate

=======
SOUNDS
=======
SFX1 87921103
SFX2 82865707
SFX3 70226500
SFX4 68263307

SFX5 60968508
SFX6 358900
================
COLLISIONLAYERS
================

Background
Exit
Player, Solid
Helpers
DoorO, ShadowdoorO, Switch

======
RULES
======

(Wallify)
Vertical [ Wall | Wallsolo | Wall ] -> [ Wall | WallUD | Wall ]
Horizontal [ Wall | Wallsolo | Wall ] -> [ Wall | WallRL | Wall ]
Horizontal [ Wall | WallUD | Wall ] -> [ Wall | WallM | Wall ]
Left [ WallUD | Wall ] -> [ WallR | Wall ]
Right [ WallUD | Wall ] -> [ WallL | Wall ]
Up [ WallRL | Wall ] -> [ WallD | Wall ]
Down [ WallRL | Wall ] -> [ WallU | Wall ]

(steps)
up [ Player | no Solid ] -> [ Player | H_step ]
up [ Player | Heldcrate no H_step ] -> [ Player | Heldcrate H_step ]
[ Moving Player ] [ H_step ] -> [ Moving Player ] [ Moving H_step ]

(gravity)
down [ Player no H_grav | no Solid ] -> [ Player H_grav | ]
down [ Player ] [ H_grav ] -> [ > Player ] [ H_grav ] again
Down [ Massive ] -> [ down Massive ] again

[ up Player ] -> cancel

(movement/pushing)
Right [ > Player ] -> [ > PlayerR ]
Left [ > Player ] -> [ > PlayerL ]
Horizontal [ >  Player | Crate | no Solid ] -> [  >  Player | > Crate | ] SFX2

(picking up and holding crates)
Horizontal [ Crate | Action PlayerS | Crate ] -> message I am paralyzed with indecision!
Right [ Action PlayerR | Crate ] [Player no H_pickup ] -> [ Player | Shadowcrate ] [ Player H_pickup ] SFX1
Left [ Action PlayerL | Crate ] [Player no H_pickup ] -> [ Player | Shadowcrate ] [ Player H_pickup ] SFX1
([ Moving Player ] [ Heldcrate ] -> [ Moving Player ] [ Moving Heldcrate ])
([ > Player | no Solid ] [ Heldcrate ] -> [ > Player |  ] [ > Heldcrate ])
(late Up [ Player | no Solid ] [ Heldcrate ] -> [ Player | Heldcrate ] [ ])

(putting down)
(Left [ Action Heldcrate | no Solid ] [ PlayerLH ] -> [ | Crate ] [ PlayerL ]
Right [ Action Heldcrate | no Solid ] [ PlayerRH ] -> [ | Crate ] [ PlayerR ])
Right [ Heldcrate | no Solid ] [ Action PlayerRH ] -> [ Heldcrate | H_drop ] [ PlayerR ]
Left [ Heldcrate | no Solid ] [ Action PlayerLH ] -> [ Heldcrate | H_drop ] [ PlayerL ]


(steps late)
late [ H_step ] [H_grav ] -> [ ] [ H_grav ]
late Down [ H_step | Player ] -> [ | Player ]
late up [ H_step no Solid | no Solid ] [ Heldcrate ] -> [ H_step | Heldcrate ] [ ]
late [ H_step no Solid ] [ Player ] -> [ Player ] [ ] SFX4

(crate rules)
late [ Heldcrate ] [ H_drop ] -> [ ] [ Crate ]
late up [ Player | no Solid ] [ Heldcrate ] -> [ Player | Heldcrate ] [ ]

late Up [ H_pickup | no Solid ] [ Shadowcrate ] -> [ | Heldcrate ] [ ]
late [ Shadowcrate ] -> [ Crate ]
late Down [ Heldcrate | no Player ] -> [ Crate | ]

late up [ PlayerR ] [ Heldcrate ] -> [ PlayerRH ] [ Heldcrate ]
late up [ PlayerL ] [ Heldcrate ] -> [ PlayerLH ] [ Heldcrate ]


(cleanup)
late [ H_pickup ] -> [ ]
late [ H_grav ] -> [ ]
late [ H_step ] -> [ ]


late [ Player Exit ] -> SFX3

(doors)
late [ Door ] -> [ Shadowdoor ]
late [ DoorO ] -> [ ShadowDoorO ]
late [ ShadowdoorO no Solid ] [ ShadowdoorO Solid ] -> [ DoorO ] [ ShadowdoorO Solid ]
late [ Switch no Weight ] [ ShadowDoorO no Solid ] -> [ Switch ] [ Door ] SFX5
late [ Switch no Weight ] [ Shadowdoor ] -> [ Switch ] [ Door ]
late [ Shadowdoor ] -> [ DoorO ] SFX6
late [ ShadowdoorO ] -> [ DoorO ]

==============
WINCONDITIONS
==============
all Exit on Player

=======
LEVELS
=======
message Demoted again
###############
#.......O.....#
#.......#.....#
#......##.....#
#.....###.....#
#.P..####**...#
###############

message First gas planets, and now this
message [Pick up with x]
###############
#.............#
#...........O.#
#..........####
#..........#..#
#P..**...*.#..#
###############

##################
############.....#
#########*##.....#
#########*##.....#
####.....*....o..#
####.....*.#######
####.....*.#######
####.....*########
#####....*########
######..p*########
##################

###############
#..*###....#..#
#..*..........#
#..####.......#
#.**......**P.#
#.#############
#......*.#....#
#...*..#.X..O.#
#...##.#T######
###############

message what is even my job
*#####*###########
#*##.##.#...#....#
##.#..#..........#
#.....#*........O#
#......###.....###
#.........#....###
#......*..*....###
#....#############
#...#............#
#**..............#
#####...##########
****.#..##########
****..#..#########
****...#....######
****....#.......*#
*###....##......*#
*.....#####...####
#......###....####
*.......x..#######
##.#....x.########
.p.*.*ttx#########
##################

message I could lift these all day
######x###########
##*#..x.......#..#
###...x*......x.o#
#.....##.....*x.##
#....#xp..@..#x..#
#...##x###########
#*..*.x.....######
######x.....#....#
######x......*...#
######.#*....##..#
######.###########

##################
#............*...#
#..@......*.t@p..#
#xxx#xxxxxxxxxxx##
#.#.#...........##
#.#.#.#.#.#.#.#.##
#.#.#.#.#.#.#.#.##
#...#########.####
##....*x.....*...#
###...##....###.o#
##################

##################
##...........x...#
##...........x.*.#
##.........t####.#
##..........#....#
##..........#....#
##...***#####.##x#
##...***##.o..###*
##...***####.....#
##.p.***##.......#
##################

message I miss the reassuring weight of a globe across my shoulders
#.................
#..#.#.#.#.......#
#..#.#.#.#.......#
#..#.#.t*........#
#..#.#*###.......#
#...*.*...*......#
*..#####.###.....#
#.*.........#...*#
####.......*....##
##t*.p.....#.##.##
##t###t#x#########
##t#####x#########
##t##.......######
####.........#####
###...........####
##......o......###
#......###......##
.................#
..................

.....................##*#*****....*...................
..o....##.#.######....##******...**.........#.........
..#.###############....####*********........#........*
################.#.##..x############........#........#
#####............#..#..x....................#.........
###.#............#..#.*x....................#.........
#.*.#................#####..................#.........
#***#............#*....*..p**.........t.*..#.........*
#####...........######################.#####.........#
#..............#########################...##.........
#.............#########.#.#.#...............#**.......
#............#########..#.#.#...............####......
#............########..#*#*#*#..............#.########
#............########..#*#*#*#..............#.#....###
#*...........#####......#.#.#...............#.#......#
#*.......#######........#...................#.#......#
#*......######..............................#.#......#
#*.....#..##............*...................#.#......#
#**...**......*.......#.#.#.#..........t....#.#.....##
#####*#######**###########################*######*####

*#***#*.#...##....#...........########...............*#................#
*#***#*.....#.....*...........#.#.#.#................*#................#
*#***##.....#.....**...#.#....*.*.*..................##................#
*#***#......#.....##...#.#....########...............##................#
*#***......*#.....##*..#.#....##***###...............#*................#
*#**#......#......*#####.#########**##...............##................#
*#**.......#......***##...###....##**####............##..........*.....#
*#**.......#......***......#......##*##*#............xx..........##....#
##*###############****............##****#............xx............#...#
##*################****.....#..o..##*#**#p....@.@.@..xx....@.@.@...**..#
####################################*##*################################

.................############*#.#.##
.................#..*........*.....#
.................#.t###....*########
#................#.....*...#o......#
#.....................##########...#
#....................#.....**.....*#
#................##.#....###x#######
#...............###.#*.......*.....#
#.........*..###############x###...#
##....p..**................*......*#
############################x#######
....................................

message Congratulations!
message You rearranged the rubble!
message the end

title The Legend of Zokoban
author Joshua Minor
homepage pixelverse.org
flickscreen 9x7

========
OBJECTS
========

Background 
yellow orange
00000
01000
00001
00100
10000

Water 
blue lightblue
00000
01000
00001
00100
10000

Cave 
DarkBlue
00000
00000
00000
00000
00000

Goal 
DarkBlue Red
00000
00000
00100
00000
00000

RockWall 
BROWN Orange
01110
10000
10010
10000
00100

StoneWall 
darkgrey grey
01110
10000
10010
10000
00100

PlayerWithoutSword
GREEN lightgreen 
.00..
00000
.000.
.111.
00.00

PlayerWithSword
GREEN lightgreen white grey
.002.
00020
.0222
.110.
00.00

Sword 
grey white 
..1..
..1..
.111.
..0..
.....

Block  
BROWN Orange darkgrey
.111.
10001
10002
10002
.222.

EasyBaddie
white red 
.111.
10101
11111
11111
11.11

Money
white lightblue
..1..
.001.
10111
.111.
..1..

=======
LEGEND
=======

Wall = StoneWall or RockWall
Solid = Wall or Block or Water
Player = PlayerWithoutSword or PlayerWithSword
Obstacle = Wall or Block or Player or Water
Baddie = EasyBaddie

. = Background
# = RockWall
S = StoneWall
P = PlayerWithoutSword
* = Block
@ = Block and Cave
O = Cave
w = Water
1 = EasyBaddie
+ = Sword
G = Goal

=======
SOUNDS
=======

StartLevel 40430108 (music-ish)
SFX0 16358103 (power up)
SFX1 84057304 (push)
SFX2 74654508 (stairs)
SFX3 21293301 (fight)
SFX4 49521903 (hurt)
SFX5 47598700 (money)
ShowMessage 82693708 (you win!)

================
COLLISIONLAYERS
================

Background
Cave, Goal
Player, Wall, Block, Water, EasyBaddie
Sword, Money

======
RULES     
======     

(baddies move at random)
[ Stationary Baddie ] -> [ RandomDir Baddie ]

(player can push blocks)
[ > Player | Block ] -> [ > Player | > Block ] SFX1

(blocks pushed into water become land)
[ > Block | Water ] -> [ | ]

(baddies can attack the player w/o sword)
[ > Baddie | Player No Sword ] -> SFX4

(player can pick up sword)
([ > Player | Sword ] -> [ | Player Sword ] SFX0)
[ PlayerWithoutSword Sword ] -> [ PlayerWithSword ] SFX0

(player with sword can kill baddies & leave money)
[ > PlayerWithSword | Baddie ] -> [ PlayerWithSword | Money ] SFX3
(sword moves with player)
([ > Player Sword ] -> [ > Player > Sword ])
(sword doesn't move into obstacles)
([ > Sword | Stationary Obstacle ] -> [ Sword | Stationary Obstacle ])

(player can pick up money)
[ > Player | Money ] -> [ | Player ] SFX5

(blocks pushed into caves, teleport to other end of cave)
random [ Moving Block Cave | ... | Cave ] -> [ Cave | ... | Block Cave ]
(blocks sitting on cave exits will roll aside to let player follow them)
late random [ Block Cave | No Obstacle ] -> [ Cave | Block ]
(players can enter caves - teleporting to orthogonally matching cave)
late random [ Player Cave | ... | Cave ] -> [ Cave | ... | Player Cave ] SFX2
(sword follows player through the cave)
(late random [ Sword Cave | ... | Cave ] -> [ Cave | ... | Sword Cave ])


==============
WINCONDITIONS
==============

All Player on Goal     

=======     
LEVELS
=======

sssssssss#################wwwwwwwwww
ss.s1s..s#1#####.##..1..1.wwwwww..ww
s.......s#.#####.##.#.#.#.wwwww..*.w
s..*....o#.##o##.............ww....w
s.s....ss#..........#.*.#....ww..1.w
sss.s.sss##...............wwwwww..ww
sssssssss#####..#####.....wwwwwwwwww
sssssssss#####..#####.....wwwwwwwwww
ss1...sss#####..####.....wwww.....ww
s......os##o#....##...#.1www..s.s..w
s..+...ss#.......##*......ww...g...w
ss.....ss#...p..........#.ww..s.s.1w
ssss..sss##.....###..#.1..www..1..ww
sssssssss#################wwwwwwwwww

message Congratulations!

title Modality
author Sean Barrett
homepage www.silverspaceship.com
background_color #603060
noaction

========
OBJECTS
========

White
White

Black
#202020


Grey
#505050 #a0a0a0
01010
10101
01010
10101
01010


Background
Red

Target
#3030a0
.....
.000.
.0.0.
.000.
.....

Player
Black Orange #c0c0c0 Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange Yellow
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Black
+ = White
g = Grey
p = Player and Black
Q = Player and White
* = Crate and Black
@ = Crate and White
t = Target and Black
U = Target and White

Nonwhite = Black or Grey
Nonblack = White or Grey

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
White, Black, Grey
Target
Player, Crate

======
RULES
======

[ >  Player Nonblack | Crate Nonblack ] -> [  > Player Nonblack | > Crate Nonblack ]
[ >  Player Black | Crate Black ] -> [  > Player Black | > Crate Black ]
[ > Player White | Black ] -> CANCEL
[ > Player Black | White ] -> CANCEL

==============
WINCONDITIONS
==============

All Crate on Target

=======
LEVELS
=======


u+...
@+g.p
+++..

++++q
+.*.+
u++.+
+g..+
+++++

......
.++.+.
.+q++.
..u.++
g.*.++
++++++

...t.......
...+.......
.+.+.+...++
.+.++++..++
q@g++..++++
.+.++...+++
.+.+....+++
.+......+++
.++++++++++



title Sticky Candy Puzzle Saga
author Alan Hazelden
homepage www.draknek.org

run_rules_on_level_start

noaction

========
OBJECTS
========

Background
Black DarkGrey
00000
00000
00000
00000
00000


Wall
Pink #febfc6
10001
00011
00110
01100
11000

Player
Pink #febfc6
.000.
.111.
00100
.000.
.0.0.

Yellow
Yellow White Orange
.000.
01100
01000
00002
.022.

Red
Red Orange DarkRed
.000.
01100
01000
00002
.022.

Blue
LightBlue White #3468f7
.000.
01100
01000
00002
.022.

YellowTarget
Brown Yellow
00000
01110
01010
01110
00000

RedTarget
DarkBrown Red
00000
01110
01010
01110
00000

BlueTarget
Purple LightBlue
00000
01110
01010
01110
00000

Marker
White
.....
.....
.....
.....
.....

WallL
White
0....
0....
0....
0....
0....

WallR
White
....0
....0
....0
....0
....0

WallU
White
00000
.....
.....
.....
.....

WallD
White
.....
.....
.....
.....
00000

WallLR
White
0...0
0...0
0...0
0...0
0...0

WallUD
White
00000
.....
.....
.....
00000

JoinL
#febfc6
0....
.....
.....
.....
0....

JoinR
#febfc6
....0
.....
.....
.....
....0

JoinU
#febfc6
0...0
.....
.....
.....
.....

JoinD
#febfc6
.....
.....
.....
.....
0...0

JoinBoth
#febfc6
0...0
.....
.....
.....
0...0

Zero
Purple
.000.
.0.0.
.0.0.
.0.0.
.000.

One
Purple
.00..
..0..
..0..
..0..
.000.

Two
Purple
.000.
...0.
.000.
.0...
.000.

Three
Purple
.000.
...0.
.000.
...0.
.000.

Four
Purple
.0.0.
.0.0.
.000.
...0.
...0.

Five
Purple
.000.
.0...
.000.
...0.
.000.

Six
Purple
.000.
.0...
.000.
.0.0.
.000.

Seven
Purple
.000.
...0.
...0.
...0.
...0.

Eight
Purple
.000.
.0.0.
.000.
.0.0.
.000.

Nine
Purple
.000.
.0.0.
.000.
...0.
.000.



=======
LEGEND
=======

. = Background
# = Wall
P = Player
A = Red
B = Yellow
C = Blue
X = RedTarget
Y = YellowTarget
Z = BlueTarget

WallCoverLR = WallL or WallR or WallLR
WallCoverUD = WallU or WallD or WallUD

JoinCoverLR = JoinL or JoinR or JoinBoth
JoinCoverUD = JoinU or JoinD

Join = JoinCoverLR or JoinCoverUD

CoverLR = WallCoverLR or JoinCoverLR
CoverUD = WallCoverUD or JoinCoverUD

0 = Zero and Wall
1 = One and Wall
2 = Two and Wall
3 = Three and Wall
4 = Four and Wall
5 = Five and Wall
6 = Six and Wall
7 = Seven and Wall
8 = Eight and Wall
9 = Nine and Wall

Number = Zero or One or Two or Three or Four or Five or Six or Seven or Eight or Nine

Candy = Yellow or Red or Blue
Target = YellowTarget or RedTarget or BlueTarget


=======
SOUNDS
=======

sfx1 6045907 (candies sticking)
sfx2 27189102 (can't move)
sfx3 27189102 (can't push)
Candy MOVE 48059907
Player MOVE 11429307
EndLevel 85763108
Restart 65287309
Undo 84906107

================
COLLISIONLAYERS
================

Background
Marker
Target
Player, Wall, Candy
CoverUD
CoverLR, Number

======
RULES
======

[ >  Player | Candy ] -> [  >  Player | > Candy  ]
[ moving Candy | stationary Candy ] -> [ moving Candy | moving Candy ]

(Prevent movement in a way that triggers the "can't move" sound)

[ > Candy | Wall ] [ > Player | > Candy ] -> [ Candy | Wall ] [ > Player | Candy ]
[ > Player | stationary Candy ] [ moving Candy ] -> [ > Player | Candy ] [ Candy ]

(Trigger the "candies sticking" sound)

[ > Candy | no Candy ] -> [ > Candy | Marker ]

[ Marker | stationary Candy ] -> sfx1

[ Marker ] -> []

(Can't move sounds)

[ > Player | Wall ] -> sfx2
[ > Player | stationary Candy ] -> sfx3

(Wall borders)

left [ Wall no WallCoverLR | no Wall ] -> [ Wall WallL | ]
right [ Wall no WallCoverLR | no Wall ] -> [ Wall WallR | ]
right [ Wall WallL | no Wall ] -> [ Wall WallLR | ]

up [ Wall no WallCoverUD | no Wall ] -> [ Wall WallU | ]
down [ Wall no WallCoverUD | no Wall ] -> [ Wall WallD | ]
down [ Wall WallU | no Wall ] -> [ Wall WallUD | ]

(Candy joins)

late [ Join ] -> []

late left [ Candy | Candy ] -> [ Candy JoinL | Candy ]
late right [ Candy no JoinL | Candy ] -> [ Candy JoinR | Candy ]
late right [ Candy JoinL | Candy ] -> [ Candy JoinBoth | Candy ]

late up [ Candy no JoinBoth | Candy ] -> [ Candy JoinU | Candy ]
late down [ Candy no JoinU no JoinBoth | Candy ] -> [ Candy JoinD | Candy ]
late down [ Candy JoinU | Candy ] -> [ Candy JoinBoth | Candy ]

==============
WINCONDITIONS
==============

All Yellow on YellowTarget
All Red on RedTarget
All Blue on BlueTarget

=======
LEVELS
=======

message Transport the sticky candies to the collection areas.

#######
##...##
#..b.y#
#pb#.y#
#..b.y#
##...##
1######

#########
##.....##
#..a.#.x#
#pa....x#
#..a.#.x#
##.....##
2########

message Don't let different candies stick together!

########
#p...yy#
#.b.ayy#
#..b.a.#
#.a.b..#
#xxa.b.#
#xx....#
3#######

###########
#....p....#
#..b.c.b..#
#...c.c...#
###.zzz.###
####b.b####
####yyy####
#####y#####
4##########

#########
#.a...###
#.a...###
#..c.axx#
#zz.p.xx#
#zzc.a..#
###...c.#
###...c.#
5########

###########
##.......##
#y.#.p.#.z#
#yc.b.c.bz#
##.......##
###..#..###
6##########

#########
#####..z#
#...b.zz#
#.b.bb.z#
#p.###..#
#y.cc.c.#
#yy.c...#
#y..#####
7########

#########
##......#
#x.c.#by#
#.b.p..y#
#z.a.#by#
##......#
8########

#########
#yy.c.x.#
#y.b..xx#
#.b.....#
#...#..b#
#.a...c.#
#.aa.c.z#
#p....zz#
9########

#########
#yy###zz#
#...x...#
#.##a##.#
#..b.b..#
#..#.#..#
#..c.c..#
##..p..##
10#######

###########
#####y#####
####yyy####
###.b.b.###
###a...c###
#z...p...x#
#za.b.b.cx#
###.....###
11#########

###########
####...A###
##......###
#..#A#..xx#
#pA...A.xx#
#..#A#..xx#
##......###
####...A###
12#########

#########
#..xxx..#
#..#a#..#
#..b.b..#
##.#p#.##
##.aya.##
##..y..##
13#######

###########
##..zzz..##
#..a.p.b..#
#yy#ccc#xx#
#..b...a..#
##...#...##
14#########

#############
#...#####...#
#....c.b....#
#yy#..p..#zz#
#.y.cc.bb.z.#
####.....####
15###########

#########
#...#...#
#.a.a.a.#
#...x...#
#z#.x.#y#
#zc.x.by#
#.c.p.b.#
###...###
16#######

###########
##......###
##.#..c...#
#...c#..zz#
#pc..#c#zz#
#...c#..zz#
##.#..c...#
##......###
17#########

###############
#...###z###...#
#....bzzzb....#
#...c.c.c.c...#
#####.yyy.#####
#####.#b#.#####
#####.....#####
######.p.######
18#############

#############
###x#...#z###
#.xxa.c.azz.#
#..c.....c..#
###..#a#..###
####..p..####
19###########

###########
###.....###
##c.a.a.b##
#.cyy.zzb.#
#..yy.zz..#
#a..c.b..a#
#..xc.bx..#
#..xxxxx..#
##a..a..a##
###...p.###
20#########

message Thanks for playing! :)




title Colour Chained
author Dennis Au
youtube _VzrmRkLfxM
run_rules_on_level_start
again_interval 0.015
noundo

(version 201310152126 - added some harder levels, added sfx for rotate and drop, decided to use noundo)
(version 201310142256 - tweaked scoring, added pop animation and reworked code)

========
OBJECTS
========
Background
Black

P1 p
Black
0...0
.....
.....
.....
0...0

P2 q
Black
0...0
.....
.....
.....
0...0

hasN
Orange
0....
.....
.....
.....
....0

Remove
White
.....
.....
.....
.....
.....


NP1 n
White
.....
.....
.....
.....
.....

NP2 m
White
.....
.....
.....
.....
.....

LoseFlag
Grey Black LightGrey
.....
10120
.....
02010
.....

PieceGen
Black

HBorder -
DarkGrey
.....
.....
0...0
.....
.....

VBorder |
DarkGrey
..0..
.....
.....
.....
..0..

(pieces)
C1 R
Red LightGrey Black
.000.
00010
00000
00000
.000.

C2 G
Green LightGrey Black
.000.
00010
00000
00000
.000.

C3 B
Blue LightGrey Black
.000.
00010
00000
00000
.000.

C4 Y
Yellow LightGrey Black
.000.
00010
00000
00000
.000.

(Numbers)
No1 1
DarkGrey
..0..
.00..
..0..
..0..
.000.

No2 2
DarkGrey
.00..
0..0.
..0..
.0...
0000.

No3 3
DarkGrey
000..
...0.
.00..
...0.
000..

No4 4
DarkGrey
..0..
.00..
0.0..
0000.
..0..

No5 5
DarkGrey
0000.
0....
000..
...0.
000..

No6 6
DarkGrey
.00..
0....
000..
0..0.
.00..

No7 7
DarkGrey
0000.
...0.
..0..
.0...
0....

No8 8
DarkGrey
.00..
0..0.
.00..
0..0.
.00..

No9 9
DarkGrey
.00..
0..0.
.000.
...0.
.00..

No0 0
DarkGrey
.00..
0..0.
0..0.
0..0.
.00..

Pop
LightGrey White
...1.
..101
...1.
.....
.....

Inc
Black

PlayArea
Green


=======
LEGEND
=======
. = Background
u = PieceGen
+ = Inc

Player = P1 or P2
Piece = C1 or C2 or C3 or C4
PieceB = Piece

NP = NP1 or NP2
Border = HBorder or VBorder
Score = No1 or No2 or No3 or No4 or No5 or No6 or No7 or No8 or No9 or No0

Obstacle = Piece or Score
Match3Logic = hasN or Remove or Pop

=======
SOUNDS
=======
startlevel 17589703

(death)
sfx0 45317502

(match3)
sfx1 530500

(piece drop)
sfx2 75273507

(piece rotate)
sfx3 21774107

================
COLLISIONLAYERS
================
PlayArea
Background
Player, NP, PieceGen, Border
Piece, Score, Inc,
Match3Logic, LoseFlag

======
RULES
======
(set preview area)
[] -> [PlayArea]
Down [NP|PlayArea] -> [NP|]
Vertical [No PlayArea| PlayArea] -> [|]

(match 3 rules)
Right [C1|C1] -> [C1 hasN|C1 hasN]
Right [C2|C2] -> [C2 hasN|C2 hasN]
Right [C3|C3] -> [C3 hasN|C3 hasN]
Right [C4|C4] -> [C4 hasN|C4 hasN]

Vertical [C1 hasN|C1] -> [Remove C1| Remove C1]
Vertical [C2 hasN|C2] -> [Remove C2| Remove C2]
Vertical [C3 hasN|C3] -> [Remove C3| Remove C3]
Vertical [C4 hasN|C4] -> [Remove C4| Remove C4]

[Remove C1| C1] -> [Remove C1| Remove C1]
[Remove C2| C2] -> [Remove C2| Remove C2]
[Remove C3| C3] -> [Remove C3| Remove C3]
[Remove C4| C4] -> [Remove C4| Remove C4]

[C1|C1|C1] -> [Remove C1|Remove C1|Remove C1]
[C2|C2|C2] -> [Remove C2|Remove C2|Remove C2]
[C3|C3|C3] -> [Remove C3|Remove C3|Remove C3]
[C4|C4|C4] -> [Remove C4|Remove C4|Remove C4]

[hasN] -> []

[PlayArea Remove Piece][P1] -> [PlayArea Pop][P1] sfx1
random [Pop][inc] -> [][left inc] again


(down drops pieces)
Down [> Player Piece|No Piece] -> [Player|> Piece] sfx2
Down [> Player No Piece] -> Cancel


(x rotates clockwise)
[Up P1|P2] -> [> P1|v P2] sfx3
[Action P1|P2] -> [> P1|v P2] sfx3
[Moving Player Piece] -> [Moving Player Moving Piece]
[> Player| Border] -> cancel


(gravity)
Down [PlayArea Piece No Player|No Obstacle][stationary inc] -> [PlayArea|> Piece][stationary inc] again


(explicit loss if piece ends on border)
[Piece Border][stationary inc][P1] -> [Piece Border LoseFlag][inc][] sfx0
[LoseFlag|No LoseFlag] -> [LoseFlag|LoseFlag] again


(scoring)

left [> inc| score] -> [> inc| > score]
left [> No9| score] -> [No0|> score]
left [> No9| border] -> [No0| border]

left [> No0] -> [No1]
left [> No1] -> [No2]
left [> No2] -> [No3]
left [> No3] -> [No4]
left [> No4] -> [No5]
left [> No5] -> [No6]
left [> No6] -> [No7]
left [> No7] -> [No8]
left [> No8] -> [No9]


(preview area)

startloop
(for endless mode)
[PieceGen No Piece] -> [PieceGen Random Piece]
(antigrav)
Up [Piece No PlayArea No NP| No Obstacle] -> [|> Piece]
(get next piece)
[P1 no Piece][P2 no Piece][NP1 Piece|NP2 PieceB]-> [P1 Piece][P2 PieceB][NP1|NP2]
endloop


==============
WINCONDITIONS
==============
No Piece
No Pop

=======
LEVELS
=======
(Empty Level Template

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
..|000000+

)

nm|..pq..|
RR|......|
..|------|
..|......|
..|......|
..|......|
..|..Y...|
..|..RR..|
..|R.YY..|
..|000000+

nm|..pq..|
GR|......|
..|------|
..|......|
..|......|
..|....B.|
..|...BG.|
..|...RG.|
..|.R.RB.|
..|000000+

nm|..pq..|
RR|......|
BB|------|
BR|......|
..|......|
..|......|
..|......|
..|....B.|
..|..RRB.|
..|000000+


nm|..pq..|
BG|......|
RB|------|
..|......|
..|......|
..|......|
..|......|
..|..GB..|
..|RRGB..|
..|000000+

nm|..pq..|
BG|......|
GB|------|
..|......|
..|......|
..|......|
..|...G..|
..|..BB..|
..|..GG.B|
..|000000+

nm|..pq..|
RG|......|
GB|------|
BR|......|
..|......|
..|......|
..|...G..|
..|...B..|
..|..RRG.|
..|000000+

nm|..pq..|
GR|......|
RY|------|
BG|......|
YB|......|
..|......|
..|..B...|
..|..RB..|
..|.GYB..|
..|000000+

nm|..pq..|
RG|......|
YY|------|
YG|......|
BB|......|
..|BY....|
..|YB.G..|
..|YRRG..|
..|BGGBBY|
..|000000+

nm|..pq..|
rb|......|
bb|------|
by|......|
ry|......|
..|....r.|
..|...rb.|
..|.bybyb|
..|bybyrr|
..|000000+

nm|..pq..|
br|......|
ry|------|
yy|......|
..|....b.|
..|...gb.|
..|...yy.|
..|.bygb.|
..|byrgrr|
..|000000+


nm|..pq..|
by|......|
ry|------|
ry|......|
yg|....y.|
..|..rgby|
..|b.gbyg|
..|rrgbyg|
..|bbyyrr|
..|000000+


message Thank you for playing.
message Music: Puzzle Pieces - Desert of Lost Endings by Nick Tanski (nicholastanski.bandcamp.com)

(endless mode)
message Endless Mode unlocked!

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
uu|000000+

(CC BY-NC-SA 3.0)

USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Simple Sokoban
author PuzzlescriptUser
homepage none

========
OBJECTS
========
Background
DarkGreen Black
11111
11111
11111
11111
11111

Wall
Grey Black
11111
11111
11111
11111
11111

Player
Red
.....
..0..
.000.
..0..
.....

Block
Orange
.....
..0..
.000.
..0..
.....

Target
Blue
.....
..0..
.000.
..0..
.....

BlockOnTarget
LightBlue
.....
..0..
.000.
..0..
.....

=======
LEGEND
=======
. = Background
# = Wall
P = Player
* = Block
O = Target
& = BlockOnTarget

=======
SOUNDS
=======

================
COLLISIONLAYERS
================
Background
Target
Wall
Player, Block, BlockOnTarget

======
RULES
======
[ > Player | Block ] -> [ > Player | > Block ]

[ Block | Target ] -> [ BlockOnTarget | Target ]
[ BlockOnTarget | Target ] -> [ Block | Target ]

==============
WINCONDITIONS
==============
All BlockOnTarget on Target

=======
LEVELS
=======
message Move all blocks onto targets.
#####
#...#
#.*P#
#O.*#
#...#
#####


```
compiled, but a solvability check returned the following error:
Level 1 is not solvable. Please repair it.
Return your code in full, inside a ```plaintext code block.