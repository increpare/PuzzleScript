SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Sok7
author Kevin Cancienne
homepage https://twitter.com/potatojin

color_palette whitingjp
noaction

========
OBJECTS
========


Background  (special, automatically placed in its own layer)
darkgray black
10000
10000
10000
10000
11111

Player
RED PINK
.1.1.
.000.
11111
.111.
.1.1.

Garbage1
lightgray black
00000
01110
01010
01110
00000

Garbage2
lightgray darkgray darkgray
00200
01110
21012
01110
00200


One
green white
00100
00100
00100
00100
00100

Two
yellow white
01110
00010
01110
01000
01110

Three
orange white
01110
00010
00110
00010
01110

Four
red white
01010
01010
01110
00010
00010

Five
purple white
01110
01000
01110
00010
01110

Six
lightblue white
01110
01000
01110
01010
01110

Seven
darkblue white
01110
00010
00010
00010
00010

Wall
black
00000
00000
00000
00000
00000

O (unoccupied cell)
white
00000
00000
00000
00000
00000

X (occupied cell)
black
00000
00000
00000
00000
00000

E (explosion)
black
00000
00000
00000
00000
00000

D (disappeared disc)
black
00000
00000
00000
00000
00000

C (counter)
black
00000
00000
00000
00000
00000

=======
LEGEND
=======

. = Background
P = Player
1 = One
2 = Two
3 = Three
4 = Four
5 = Five
6 = Six
7 = Seven
W = Wall
Garbage = Garbage1 or Garbage2
Garbage1_1 = Garbage1
Garbage1_2 = Garbage1
Garbage1_3 = Garbage1
Disc = One or Two or Three or Four or Five or Six or Seven or Garbage
RandomDisc = One or Two or Three or Four or Five or Six or Garbage1 or Garbage1_1 or Garbage1_2 or Garbage1_3
NumberDisc = One or Two or Three or Four or Five or Six or Seven
Object = Disc or Player



=========
SOUNDS
=========
Disc Move 53338707
Disc Destroy 56624700
Endlevel 34957309
SFX0 67673302

================
COLLISIONLAYERS
================

C
E, D
O, X
Background
Wall, Player, One, Two, Three, Four, Five, Six, Seven, Garbage



======
RULES
======


[> Player | Disc] -> [> Player | > Disc]

[D] -> [ ]
[X] -> [O]
[ ] -> [O]
[One O] -> [One X]
[Two O] -> [Two X]
[Three O] -> [Three X]
[Four O] -> [Four X]
[Five O] -> [Five X]
[Six O] -> [Six X]
[Seven O] -> [Seven X]
[Garbage O] -> [Garbage X]

(1 rules)
[O | One | O] -> [O | D X | O] again

(2 rules)
[O | Two | X | O] -> [O | D X | X | O] again

(3 rules)
[O | Three | X | X | O] -> [O | D X | X | X | O] again
[O | X | Three | X | O] -> [O | X | D X | X | O] again
[O | X | X | Three | O] -> [O | X | X | D X | O] again

(4 rules)
[O | Four | X | X | X | O] -> [O | D X | X | X | X | O] again
[O | X | Four | X | X | O] -> [O | X | D X | X | X | O] again
[O | X | X | Four | X | O] -> [O | X | X | D X | X | O] again
[O | X | X | X | Four | O] -> [O | X | X | X | D X | O] again

(5 rules)
[O | Five | X | X | X | X | O] -> [O | D X | X | X | X | X | O] again
[O | X | Five | X | X | X | O] -> [O | X | D X | X | X | X | O] again
[O | X | X | Five | X | X | O] -> [O | X | X | D X | X | X | O] again
[O | X | X | X | Five | X | O] -> [O | X | X | X | D X | X | O] again
[O | X | X | X | X | Five | O] -> [O | X | X | X | X | D X | O] again

(6 rules)
[O | Six | X | X | X | X | X | O] -> [O | D X | X | X | X | X | X | O] again
[O | X | Six | X | X | X | X | O] -> [O | X | D X | X | X | X | X | O] again
[O | X | X | Six | X | X | X | O] -> [O | X | X | D X | X | X | X | O] again
[O | X | X | X | Six | X | X | O] -> [O | X | X | X | D X | X | X | O] again
[O | X | X | X | X | Six | X | O] -> [O | X | X | X | X | D X | X | O] again
[O | X | X | X | X | X | Six | O] -> [O | X | X | X | X | X | D X | O] again

(7 rules)
[O | Seven | X | X | X | X | X | X | O] -> [O | D X | X | X | X | X | X | X | O] again
[O | X | Seven | X | X | X | X | X | O] -> [O | X | D X | X | X | X | X | X | O] again
[O | X | X | Seven | X | X | X | X | O] -> [O | X | X | D X | X | X | X | X | O] again
[O | X | X | X | Seven | X | X | X | O] -> [O | X | X | X | D X | X | X | X | O] again
[O | X | X | X | X | Seven | X | X | O] -> [O | X | X | X | X | D X | X | X | O] again
[O | X | X | X | X | X | Seven | X | O] -> [O | X | X | X | X | X | D X | X | O] again
[O | X | X | X | X | X | X | Seven | O] -> [O | X | X | X | X | X | X | D X | O] again


(garbage rules)
[C X] -> [ X]
[> Player | ] -> [> Player | C]
[C No Object | C No Object | C No Object | C No Object| C No Object | C No Object] -> [ |  | random RandomDisc | |  | ] SFX0
[D | Garbage1] -> [ | Garbage2]
[D | Garbage2] -> [ | random NumberDisc]



==============
WINCONDITIONS
==============
No Disc

=======
LEVELS
=======


WWWWWWWWWWWWWW
W....13......W
W.4..2..5....W
W....2..3....W
W.77....6....W
W....3..5....W
W.P........2.W
W....2.......W
WWWWWWWWWWWWWW

message Board Clear: You Win


title Simple Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

LeftPerson
Orange Yellow
...0.
..0..
.0...
..0..
...0.


RightPerson
Orange Yellow
.0...
..0..
...0.
..0..
.0...

=======
LEGEND
=======

. = Background
# = Wall
P = Player
L = LeftPerson
R = RightPerson

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Player, Wall, LeftPerson, RightPerson

======
RULES
======

[ stationary LeftPerson ] -> [ left LeftPerson ]
[ stationary RightPerson ] -> [ right RightPerson ]

right [ wall |< LeftPerson ] -> [ wall | > RightPerson ]
right [ > RightPerson | Wall ] -> [ < LeftPerson | Wall ]

==============
WINCONDITIONS
==============


=======
LEVELS
=======


####..
#.R#..
#..###
#LP..#
#..R.#
#..###
####..



title It Dies In The Light
author Christopher Wells
homepage www.tophwells.com

noaction
run_rules_on_level_start
again_interval 0.05

========
OBJECTS
========

BackgroundNeutral
LIGHTGray Gray
11011
10101
01110
10101
11011

BackgroundDark
Black

Wall
Lightblue Blue
00010
11111
01000
11111
00010

LivePlayer
Black LightRed White Blue
.000.
.111.
12321
.232.
.222.

Corpse
LightGrey
.000.
.0.0.
0.0.0
..0..
.0.0.

Crate
Orange LightBrown Brown
.222.
21012
20102
21012
.222.

GoldCrate
White Yellow Orange
.222.
21012
20002
21012
.222.

GlassCrate
White
.000.
0...0
0...0
0...0
.000.

Prism
LightBlue White
.000.
00110
00010
00000
.000.

ActivePrism
LightBlue White Yellow
.000.
02120
01110
02120
.000.

Glass
White
00000
0...0
0...0
0...0
00000

BeamVert
White Yellow
.101.
.101.
.101.
.101.
.101.

BeamHor
White Yellow
.....
11111
00000
11111
.....

BeamCross
White Yellow
.101.
11011
00000
11011
.101.

Shadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

TempShadow
Purple
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0

=======
LEGEND
=======

. = BackgroundNeutral
# = Wall
P = LivePlayer
C = Crate
G = GoldCrate
S = Shadow
X = Prism
O = Glass

Background = BackgroundNeutral or BackgroundDark
Player = LivePlayer or Corpse
Light = BeamVert or BeamHor or BeamCross
Hlight = BeamHor or BeamCross
Vlight = BeamVert or BeamCross
Opaque = Player or Crate or Wall or GoldCrate
Pushable = Crate or GoldCrate or Prism or GlassCrate


=======
SOUNDS
=======

SFX0 93002904

================
COLLISIONLAYERS
================

Background
BeamVert, BeamHor, BeamCross, Shadow, TempShadow
Player, Corpse, Wall, Crate, GoldCrate, GlassCrate, Prism, ActivePrism, Glass

======
RULES
======

[> Corpse] -> RESTART
[Light] -> []
[ActivePrism] -> [Prism]
[ >  Player | Pushable ] -> [  >  Player | > Pushable  ]
late HORIZONTAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamHor]
late VERTICAL [GoldCrate|no Opaque no Light] -> [GoldCrate | BeamVert]
late VERTICAL [GoldCrate|no Opaque BeamHor] -> [GoldCrate | BeamCross]
late HORIZONTAL [Hlight|no Opaque no Light] -> [Hlight|BeamHor]
+ late HORIZONTAL [Hlight|no Opaque BeamVert] -> [Hlight|BeamCross]
+ late VERTICAL [Vlight|no Opaque no Light] -> [Vlight|BeamVert]
+ late VERTICAL [Vlight|no Opaque BeamHor] -> [Vlight|BeamCross]
+ late [Light Prism] ->[BeamCross ActivePrism]
late [Shadow Pushable] -> [Pushable]
late [TempShadow] -> [Shadow]
late [Shadow | no Light no Wall no Pushable no Glass no Shadow] -> [shadow | Tempshadow] again
late [Shadow] -> [Shadow BackgroundDark]
late [TempShadow] -> [TempShadow BackgroundDark]
late [no Shadow no TempShadow] -> [no Shadow BackgroundNeutral]
late [Shadow Player] -> [Shadow Corpse]

==============
WINCONDITIONS
==============

no Shadow

=======
LEVELS
=======

......####.
..#####ss#.
###ssssss#.
#..ssscss##
#..#s#s#ss#
#.g#s#ssss#
#p.#s#ssss#
#..css#sss#
###########

........########.
........#...#.C#.
...######...GC.##
...#..CsssssO.C.#
...#P.Csss#sO.CC#
...#..Csss#sO#..#
########ss#s....#
#ssssssOss#s#####
#sssssssss###....
#########s#......
........###......

##########
###G#G#G##
##P......#
#G.......#
##..C....#
#G.......#
##..C....#
#G.......#
##......S#
##########

........########
........#......#
#########..#o#.#
#........gooxo.#
#g#####c#.sso#s#
#.ssssss#.ss.ss#
##soooss#.ss##s#
##c.p.c###ss#ss#
##.....#ssss#ss#
#...g.......#ss#
#########.xx#ss#
........##sssss#
.........#######

MESSAGE Earth is safe once again.


title Sticky Blocks
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ < Player | Crate ] -> [ < Player | < Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

#########
#.......#
#.....@.#
#.P.*.O.#
#.......#
#.......#
#########

.#######.
.#.....#.
.#O##..##
##.##.*.#
#.*..**.#
#.OOO.#.#
#.P.....#
#########


title Kettle
author increpare
homepage www.increpare.com

color_palette gameboycolour

(

A port of a flash game of mine, the original of which can be played here:
http://ded.increpare.com/~locus/kettle

)

========
OBJECTS
========

Background
darkgray

Target
yellow
00000
0...0
0...0
0...0
00000

UPolice
black
.000.
.000.
00000
.000.
.0.0.

DPolice
black
.000.
.000.
00000
.000.
.0.0.

LPolice
black
.000.
.000.
0000.
.000.
.0.0.

RPolice
black
.000.
.000.
.0000
.000.
.0.0.

Crate
blue
..0..
00000
..0..
.000.
.0.0.

Wall
black

=======
LEGEND
=======

. = Background
player = UPolice or DPolice or LPolice or RPolice
i = UPolice
k = DPolice
j = LPolice
l = RPolice
c = Crate
@ = Crate and Target
t = Target
# = Wall

=========
SOUNDS
=========

Target move 59810707
Player move 86872107
startlevel 63638302
endlevel 86642102
endgame 63929902
showmessage 42200307
closemessage 42200307
startgame 94059902

================
COLLISIONLAYERS
================

Background
Target
Player, Crate, Wall

======
RULES
======

(The idea is simple: lots of Players, each of which only responds to a particular input direction.)

[ up RPolice ] -> [ RPolice ] 
[ down RPolice ] -> [ RPolice ] 
[ left RPolice ] -> [ RPolice ] 

[ down UPolice ] -> [ UPolice ] 
[ left UPolice ] -> [ UPolice ] 
[ right UPolice ] -> [ UPolice ] 

[ up LPolice ] -> [ LPolice ] 
[ down LPolice ] -> [ LPolice ] 
[ right LPolice ] -> [ LPolice ] 

[ up DPolice ] -> [ DPolice ] 
[ left DPolice ] -> [ DPolice ] 
[ right DPolice ] -> [ DPolice ] 

[ > Player | Crate ] -> [ > Player | > Crate ] 
[ > Crate | Crate ] -> [ > Crate | > Crate ] 

==============
WINCONDITIONS
==============

all target on Crate

=======
LEVELS
=======

message Let's see your ID

###############
#.............#
#.............#
#.....kkkk....#
#....l...cj...#
#....l.tt.j...#
#....lctt.j...#
#....lc..cj...#
#.....iiii....#
#.............#
#.............#
#.............#
###############

message Area Secure
message Gonna lock you up, sonny!

###############
#.............#
#.............#
#.....kkkk....#
#....l@@t.j...#
#....ltttcj...#
#....l@t@cj...#
#....lc.ccj...#
#.....iiii....#
#.............#
#.............#
#.............#
###############

message Area Secure
message We didn't see nothing!

###############
#.............#
#.............#
#....kkkkk....#
#...l@t@@cj...#
#...l@@ttcj...#
#...ltt@tcj...#
#...lt@@@.j...#
#...l.ccccj...#
#....iiiii....#
#.............#
#.............#
###############

message Area Secure
message You'll be late for class, eh!

###############
#.............#
#.............#
#....kkkkk....#
#...lc.c.cj...#
#...lc@tt.j...#
#...l.tt@cj...#
#...l.ttt.j...#
#...lc...cj...#
#....iiiii....#
#.............#
#.............#
###############

message Area Secure
message Ha! You shat yourself!

###############
#.............#
#.............#
#....kkkkkk...#
#...lc.c..cj..#
#...lcttt..j..#
#...l.t@@..j..#
#...l.ttt..j..#
#...lc...ccj..#
#....iiiiii...#
#.............#
#.............#
###############

message Area Secure
message Have to confiscate your camera!

###############
#.............#
#.............#
#....kkkkkk...#
#...lcc..ccj..#
#...l.tttt.j..#
#...l.t@@t.j..#
#...lcttt@cj..#
#...lct@ttcj..#
#...lcc..ccj..#
#....iiiiii...#
#.............#
###############

message Area Secure
message Keeping the peace is hard work

###############
#.............#
#...kkkkkkk...#
#..l..cc..cj..#
#..l.tttt..j..#
#..lc@t@t..j..#
#..lctttt.cj..#
#..l.@@tt..j..#
#..lc.....cj..#
#..lcc.c..cj..#
#...iiiiiii...#
#.............#
###############

message Area Secure
message You should've packed lunch!

###############
#.............#
#..kkkkkkkk...#
#.lccccc...j..#
#.lct@@tt.cj..#
#.l.t@t@t.cj..#
#.lc@@ttt.cj..#
#.lct@tttccj..#
#.l.tt@@t..j..#
#.l........j..#
#.lc..cc...j..#
#..iiiiiiii...#
###############

message Area Secure
message I want to hit you

###############
#.............#
#..kkkkkkkkk..#
#.lc.cccc...j.#
#.l.........j.#
#.lccttttt..j.#
#.lc.tt@tt.cj.#
#.lc.tt@@t.cj.#
#.l..@@tt@.cj.#
#.l..t@t@t..j.#
#.l.........j.#
#.lc.c.c.c.cj.#
#..iiiiiiiii..#
###############

message Area Secure
message Don't be naughty!

###############
#.kkkkkkkkkk..#
#lccc..c...cj.#
#lc.........j.#
#lc.@t@tt...j.#
#lc.t@@@t...j.#
#l..@ttt@..cj.#
#lc.tt@@t..cj.#
#l..ttttt...j.#
#l..........j.#
#l.........cj.#
#l....c.c.ccj.#
#.iiiiiiiiii..#
###############

message Area Secure
message I'm upholding human rights!

###############
#.kkkkkkkkkkk.#
#lccc.c.c...cj#
#l....c......j#
#lc.@ttttt...j#
#l..@ttt@t...j#
#l..t@@ttt..cj#
#lc.@tt@@t..cj#
#l..@@t@@t...j#
#l..t@t@tt..cj#
#lc..c.......j#
#lc....c.....j#
#lcc.c.c.c..cj#
#.iiiiiiiiiii.#
###############

message Area Secure
message I'm all out of lines, matey:
message It's game over for you


title ScriptCross
author Dennis Au
homepage www.puzzlescript.net

========
OBJECTS
========

Background
White

Target
Black

Fill
Black

Cross
LightGrey
0...0
.0.0.
..0..
.0.0.
0...0


Player
Green
00000
0...0
0...0
0...0
00000

Border #
LightGrey

(Clues 0-9)
Clue0 0
LightGrey

Clue1 1
LightGrey Black
00000
0...0
0.1.0
0...0
00000

Clue2 2
LightGrey Black
00000
0..10
0...0
01..0
00000

Clue3 3
LightGrey Black
00000
0..10
0.1.0
01..0
00000

Clue4 4
LightGrey Black
00000
01.10
0...0
01.10
00000

Clue5 5
LightGrey Black
00000
01.10
0.1.0
01.10
00000

Clue6 6
LightGrey Black
00000
01.10
01.10
01.10
00000

Clue7 7
LightGrey Black
00000
01110
0.1.0
01110
00000

Clue8 8
LightGrey Black
00000
01110
0.110
01110
00000

Clue9 9
LightGrey Black
00000
01110
01110
01110
00000


=======
LEGEND
=======

. = Background
P = Player and Border
b = Target
Clue = Clue0 or Clue1 or Clue2 or Clue3 or Clue4 or Clue5 or Clue6 or Clue7 or Clue8 or Clue9
NoEmpty = Fill or Cross or Clue or Border

=======
SOUNDS
=======
EndLevel 37348103
EndGame 64173909

================
COLLISIONLAYERS
================

(switch order of target and background to see the solutions)
Target
Background
Border, Clue, Fill, Cross
Player


======
RULES
======

[Action Player no NoEmpty] -> [Player Fill]
[Action Player Fill] -> [Player Cross]
[Action Player Cross] -> [Player]



==============
WINCONDITIONS
==============

All Target on Fill
All Fill on Target

=======
LEVELS
=======

(P123456789)

message level 1 - oh so stable

P12
1.b
2bb

message level 2 - it is what it is
P#1###
##113#
##311#
3.bbb.
1...b.
3.bbb.
1.b...
3.bbb.

message level 3 - i see you!
P##1#1#
###111#
##.....
11.b.b.
##.....
#3.bbb.
##.....

message level 4 - that's ace
P#######1####
#######111###
######14141##
#####8111118#
###8.bbbbbbb.
##11.b.....b.
#131.b.bbb.b.
1111.b.b.b.b.
#131.b.bbb.b.
1111.b.b.b.b.
##11.b.....b.
###8.bbbbbbb.
####.........

message congratulations!


title Simple Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BlueCrate B
lightblue
00000
0...0
0...0
0...0
00000


OrangeCrate O
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

Crate = OrangeCrate or BlueCrate
. = Background
# = Wall
P = Player

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

startLoop

[ > OrangeCrate | OrangeCrate ] -> [ > OrangeCrate | > OrangeCrate ]
[ > OrangeCrate | BlueCrate ] -> [ > OrangeCrate | > BlueCrate ]
[ > BlueCrate | OrangeCrate ] -> [ > BlueCrate | > OrangeCrate ]
[ > BlueCrate | BlueCrate ] -> [ > BlueCrate | > BlueCrate ]

endLoop

==============
WINCONDITIONS
==============

=======
LEVELS
=======

################
#..............#
#..............#
#.P.BOBOBOBOB..#
#..............#
#..............#
################


title Notsnake
author Terry Cavanagh
homepage www.distractionware.com

color_palette c64
require_player_movement

========
OBJECTS
========

Background
blue

Player
lightblue

Trail
purple

=======
LEGEND
=======

. = Background
P = Player
O = Trail

=======
SOUNDS
=======

startgame 50287705
sfx0 660507
sfx1 41058704
endgame 74955903

================
COLLISIONLAYERS
================

Background
Trail
Player

======
RULES
======

[ > Player | No Trail ] -> [ Trail | Player ] sfx0
[ > Player | Trail ] -> [ | Player ] sfx1

==============
WINCONDITIONS
==============

no Trail

=======
LEVELS
=======

OOOOOOOO
OOOOOOOO
O..POO.O
OOOOOOOO
OOOOOOOO


title Extended Body Example: 1 Player, 1 Extended Object
author increpare
homepage www.puzzlescript.net

(
    Example for
    https://www.puzzlescript.net/Documentation/rigidbodies.html#one_one
)

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]
[ > Crate ] [ stationary Crate ] -> [ > Crate ] [ > Crate ]
[ > Crate | Wall ] -> cancel

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======

######
#....#
#.#..#
#.*@.#
#.O@.#
#.p..#
######


title Bouncers
author Tyler Glaiel
homepage twitter.com/tylerglaiel

========
OBJECTS
========

Bg
#111111 #222222
00010
11111
01000
01000
11111

Selection
white gray
..1..
..1..
11011
..1..
..1..

Wall
DarkBlue DarkGreen #333333
20002
22022
22122
21112
11111

Hole
DarkGray Gray Black
.111.
12221
10001
10001
.111.


Arrow
Red Red
..1..
..11.
11111
..11.
..1..


HudDivider
white black
00000
11111
11111
11111
11111

IconGO
green white
10111
10011
10001
10011
10111

Going
green white
10111
10011
10001
10011
10111

LeftBouncer
White White Blue
.221.
2.1.2
21..2
2.1.2
.221.

RightBouncer
White White Blue
.122.
2.1.2
2..12
2.1.2
.122.

UpBouncer
White White Blue
.222.
2.1.2
21.12
1...1
.222.

DownBouncer
White White Blue
.222.
1...1
21.12
2.1.2
.222.

HudBG
black

Empty
black

PlayEmpty
black
.....
.....
.....
.....
.....


Ball
#003300 Green
.000.
01110
01110
01110
.000.

WinBall
LightBlue LightGreen
.000.
01110
01110
01110
.000.



BallUp
#003300 Green Black
.000.
01210
01110
01110
.000.

BallDown
#003300 Green Black
.000.
01110
01110
01210
.000.

BallLeft
#003300 Green Black
.000.
01110
02110
01110
.000.

BallRight
#003300 Green Black
.000.
01110
01120
01110
.000.




=======
LEGEND
=======
Background = Bg or HudBG
. = bg and PlayEmpty
S = Selection and PlayEmpty
- = HudDivider and Wall
H = HudBG and PlayEmpty
A = Arrow and HudBG
G = IconGO
W = Wall
O = Hole

L = LeftBouncer and HudBG
R = RightBouncer and HudBG
U = UpBouncer and HudBG
D = DownBouncer and HudBG

B = BallLeft
N = BallRight
M = BallUp
K = BallDown

Player = Selection


PlacedLeftbouncer = LeftBouncer and Selection
PlacedRightbouncer = RightBouncer and Selection
PlacedUpbouncer = UpBouncer and Selection
PlacedDownbouncer = DownBouncer and Selection

Bouncer = LeftBouncer or RightBouncer or UpBouncer or DownBouncer

emptyPlayer = Selection and PlayEmpty


ballSwitchLeft = Ball and LeftBouncer
ballSwitchRight = Ball and RightBouncer
ballSwitchUp = Ball and UpBouncer
ballSwitchDown = Ball and DownBouncer

ballSwitchedLeft = BallLeft and LeftBouncer
ballSwitchedRight = BallRight and RightBouncer
ballSwitchedUp = BallUp and UpBouncer
ballSwitchedDown = BallDown and DownBouncer

gameGo = Selection and IconGO
gameGoing =  Going



WinL = BallLeft and Hole
WinR = BallRight and Hole
WinU = BallUp and Hole
WinD = BallDown and Hole

Win = WinBall

MovingBall = Ball or BallLeft or BallRight or BallUp or BallDown

=======
SOUNDS
=======
SFX0 41242705 (place bouncer)
SFX1 73889302 (press go)
MovingBall Move 68254307 (ball move)
SFX2 68257500 (pocket ball)
SFX3 82752503 (ball switch direction)

================
COLLISIONLAYERS
================

Background

Arrow, Empty, LeftBouncer, RightBouncer, UpBouncer, DownBouncer, PlayEmpty, IconGO, Going, Hole
WinBall
Wall, Ball, BallUp, BallDown, BallLeft, BallRight
Selection, HudDivider


======
RULES
======

(action button: take icon to the right of the arrow, place under selector)
[action selection PlayEmpty][Arrow|LeftBouncer] -> [PlacedLeftbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|RightBouncer] -> [PlacedRightbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|UpBouncer] -> [PlacedUpbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|DownBouncer] -> [PlacedDownbouncer][Arrow|Empty] SFX0

(win conditions)
[WinL] -> [Win] again SFX2
[WinR] -> [Win] again SFX2
[WinU] -> [Win] again SFX2
[WinD] -> [Win] again SFX2

(slide unused icons over to the left if there's space between them and the arrow)
right [Empty | Bouncer] -> [Bouncer | Empty]

(selector on top of go button -> signals game to run)
[action selection iconGO] -> [gameGoing] again SFX1

(make genericball match the direction of the bouncer)
[ballSwitchLeft]->[ballSwitchedLeft] again
[ballSwitchRight]->[ballSwitchedRight] again
[ballSwitchUp]->[ballSwitchedUp] again
[ballSwitchDown]->[ballSwitchedDown] again

(if ball is going to move on top of a bouncer, switch it to generic ball first)
right [Going][Bouncer | BallLeft] -> [Going][Bouncer | Left Ball] again SFX3
left  [Going][Bouncer | BallRight] -> [Going][Bouncer | Right Ball] again SFX3
up    [Going][Bouncer | BallDown] -> [Going][Bouncer | Down Ball] again SFX3
down  [Going][Bouncer | BallUp] -> [Going][Bouncer | Up Ball] again SFX3



(move the ball if Going)
[Going][BallLeft] -> [Going][LEFT BallLeft] again
[Going][BallRight] -> [Going][RIGHT BallRight] again
[Going][BallUp] -> [Going][UP BallUp] again
[Going][BallDown] -> [Going][DOWN BallDown] again



[Going] -> [Going] again

==============
WINCONDITIONS
==============

no MovingBall

=======
LEVELS
=======

message place bouncers, hit play

......w.....
..o...w.....
......w.....
......w.....
......w..b..
......s.....
............
g-----------
-hhadluhhhhh

message Level 2

............
......o.....
..s.........
......w.....
...o.....b..
......m.....
............
g-----------
-hhalurhhhhh

message Level 3

............
............
..o.wwww....
..s.n..b....
....wwww.o..
............
............
g-----------
-hhaudrlhhhh

message Level 4

............
............
..o......o..
............
............
.s..bbbb....
............
............
..o......o..
............
g-----------
-hhalrudu...

message Level 5

.....n......w...
..wwww.k....o.w.
......b..m......
...o............
.......w........
.....b.w........
......wwo.......
w.ww.www........
.o..............
....s...........
..........wwwo..
g---------------
-hhaddddddrrr...

message I didn't feel like making more levels

title Love and Pieces
author lexaloffle
homepage www.lexaloffle.com

========
OBJECTS
========

Background
White LightBlue
00000
01110
01110
01110
00000


Wall
DarkBlue Black DarkGray LightGray White
23330
22300
22100
21110
11111

Player
Yellow Orange Red White LightBrown
20002
01130
01110
04110
20002

GrayBlock
Gray DarkGray Green
10001
01210
02220
01210
10001

LitBlock
Green DarkGray
00000
01110
01110
01110
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
o = GrayBlock
Block = GrayBlock or Player

=======
SOUNDS
=======

GrayBlock MOVE 36772507

================
COLLISIONLAYERS
================

Background
Player, Wall, GrayBlock, LitBlock

======
RULES
======

[ > Player | Wall ] -> cancel
late [ Player | GrayBlock ] -> [ Player | Player ]

==============
WINCONDITIONS
==============

No GrayBlock

=======
LEVELS
=======



############
#...#......#
#..........#
#.p..o..o..#
#..........#
#..#.......#
#..........#
#......#...#
#..........#
############

############
#..........#
#..........#
#....#o....#
#..#.o.#...#
#....#.....#
#....o.....#
#.o......p.#
#..........#
############

############
#o...o.....#
#.o...o....#
#..o...o...#
#...o...o..#
#o...o...o.#
#.o...o...o#
#..o...o.p.#
#...o...o..#
############

############
#..........#
#..o....o..#
#.p#....#o.#
#..........#
#..........#
#.o#....#o.#
#..o....o..#
#..........#
############


############
#..o.......#
#.....oo...#
#...o......#
#.o#..p..o.#
#....o.....#
#..o....o..#
#o.o...#...#
#...o...o..#
############

############
#p.o.......#
#..........#
#.o..o...###
#........###
###.o......#
###......o.#
#o.....##..#
#......##.o#
############


############
#........o.#
#..o.##....#
#....o.o...#
#.#......#.#
#.#..p.o.#.#
#..o.......#
#....##....#
#.o......o.#
############


############
###........#
##....o.o..#
#....#.#...#
#...o.o.o..#
#....#.#...#
#...o.o....#
##........##
###.p....###
############


###########o
#....p....##
#....p.....#
#...ppp....#
#ppppppppp.#
#...ppp....#
#..ppppp...#
#.pp...pp..#
#.p.....p..#
############


USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Simple Sliding Puzzle
author New Game Designer
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LightGray
00000
00000
00000
00000
00000

Player
DarkBlue Blue
.000.
.111.
.111.
.000.
.....

Target
DarkGreen Green LightGreen
.....
.....
.222.
.....
.....

Wall
DarkGray Gray
11111
11111
11111
11111
11111

=======
LEGEND
=======

. = Background
P = Player
T = Target
# = Wall

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Player
Wall

======
RULES
======

[ > Player | no Wall ] -> [ > Player ] 
[ < Player | no Wall ] -> [ < Player ] 
[ UP Player | no Wall ] -> [ UP Player ] 
[ DOWN Player | no Wall ] -> [ DOWN Player ] 

==============
WINCONDITIONS
==============

All Player on Target

=======
LEVELS
=======

#########
#...T...#
#..###..#
#...P...#
#########

#########
#..T....#
#..#..###
#...P...#
###.###.#
#.......#
#########

#########
#.T.#...#
#.#.#.#.#
#.#...#.#
###.#.#.#
#...P...#
#.#.#.###
#.......#
#########

```
produced the following console output:
=================================
line 67 : In a rule, each pattern to match on the left must have a corresponding pattern on the right of equal length (number of cells).
line 68 : In a rule, each pattern to match on the left must have a corresponding pattern on the right of equal length (number of cells).
line 69 : In a rule, each pattern to match on the left must have a corresponding pattern on the right of equal length (number of cells).
line 70 : In a rule, each pattern to match on the left must have a corresponding pattern on the right of equal length (number of cells).
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.