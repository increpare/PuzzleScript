SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Heroes of Sokoban
author Jonah Ostroff
text_color yellow
key_repeat_interval 0.25

========
OBJECTS
========

Background
#AAAAAA #DDDDDD
00000
00100
00000
00010
00000

Goal
Brown Yellow
.000.
00000
00010
00000
00000

Wall
Darkgrey #222222
01000
11111
00010
00010
11111

Fighter
#FF4444 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

Wizard
#2266FF Pink
.000.
.010.
00000
.000.
00000

Thief
#00BB00 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

SFighter
#880000 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

SWizard
#000088 Pink
.000.
.010.
00000
.000.
00000

SThief
#006600 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.


Crate
Orange #552200
.111.
10001
10001
10001
.111.

YellowSwitch
Yellow Black
.....
.111.
.101.
.111.
.....

YellowOpen
Yellow
0...0
.....
.....
.....
0...0

YellowDoor
Yellow #AA7722
01010
10001
00000
10001
01010

PurpleSwitch
#6611CC Black
.....
.111.
.101.
.111.
.....

PurpleDoor
#6611CC #220088
01010
10001
00000
10001
01010

PurpleOpen
#6611CC
0...0
.....
.....
.....
0...0

Temp
Pink

ShadowDoor
Purple

=======
LEGEND
=======

Player = Fighter or Wizard or Thief
SPlayer = Swizard or Sthief or SFighter
Hero = Player or Splayer
ClosedDoor = PurpleDoor or YellowDoor
OpenDoor = YellowOpen or PurpleOpen
Switch = PurpleSwitch or YellowSwitch
Moveable = Crate or SPlayer
Static = Wall or ClosedDoor
Weighing = Crate or Player or SPlayer
. = Background
# = Wall
F = Fighter
W = Wizard
T = Thief
1 = SFighter
2 = SThief
3 = SWizard
* = Crate
G = Goal
[ = YellowDoor
] = PurpleDoor
{ = YellowSwitch
} = PurpleSwitch

=======
SOUNDS
=======

Moveable move 82056307
Sfx0 21221308
Endlevel 36315908
Sfx1 66399906
Sfx2 92172900
Sfx3 15129100
EndGame 86793500

================
COLLISIONLAYERS
================

Background
Temp
Goal, Switch, OpenDoor, ShadowDoor
ClosedDoor, Hero, Crate, Wall

======
RULES
======

[ >  Fighter | Moveable ] -> [  >  Fighter | > Moveable  ]
[ > Moveable | Moveable ] [ Fighter] -> [ > Moveable | > Moveable ] [ Fighter]

[ < Thief | Moveable ] -> [ < Thief | < Moveable ]

[ > Wizard ] -> [ Wizard > Temp]
[ > Temp | no Moveable no Static] -> [ | > Temp]
[ > Temp | Static] [Wizard] -> [ | Static ] [> Wizard]
[ > Temp | Moveable ] [Wizard] -> [ | Wizard Sfx0] [Moveable]

Late [Temp] -> []

[ Action Fighter] [SThief] -> [SFighter] [Thief Sfx1]
[ Action Thief] [SWizard] -> [SThief] [Wizard Sfx1]
[ Action Wizard] [SFighter] -> [SWizard] [Fighter Sfx1]
[ Action Fighter] [no SThief] [SWizard] -> [SFighter] [no SThief] [Wizard Sfx1]
[ Action Thief] [no Swizard] [SFighter] -> [SThief] [no SWizard] [Fighter Sfx1]
[ Action Wizard] [no SFighter] [SThief] -> [SWizard] [no SFighter] [Thief Sfx1]

late [Weighing  YellowSwitch] [YellowDoor] -> [Weighing  YellowSwitch] [ShadowDoor]
late [YellowSwitch no Weighing] [YellowOpen] -> [YellowSwitch] [YellowDoor sfx2]
late [YellowSwitch no Weighing] [ShadowDoor] -> [YellowSwitch] [YellowDoor]
late [ShadowDoor] -> [YellowOpen sfx3]

late [Weighing PurpleSwitch] [PurpleDoor] -> [Weighing PurpleSwitch] [ShadowDoor]
late [PurpleSwitch no Weighing] [PurpleOpen] -> [PurpleSwitch] [PurpleDoor sfx2]
late [PurpleSwitch no Weighing] [ShadowDoor] -> [PurpleSwitch] [PurpleDoor]
late [ShadowDoor] -> [PurpleOpen sfx3]

==============
WINCONDITIONS
==============

All Hero on Goal
All Goal on Hero

=======
LEVELS
=======

Message Walk to the exit.

#############
#...........#
#.F.......G.#
#...........#
#############

Message Red warrior pushes blocks.

#############
#...#.*.#.*.#
#.F...*.**G.#
#...#.*.#.*.#
#############

Message Hold down switches to open doors.

#############
#...#...#...#
#.F.*.{.#.G.#
#...#...[...#
#############

Message Press multiple switches at once.

#########
#.....#G#
#.#*..#[#
#.**.F..#
#.......#
#.{.{.{.#
#.......#
#########

Message Green thief pulls blocks.

#############
#...#..*#...#
#.T.*.{.#.G.#
#...#..*[...#
#############

#########
#.....#G#
#.#*..#[#
#.**.T..#
#.......#
#.{.{.{.#
#.......#
#########

#########
#...##G.#
#.#..##[#
#....{..#
#.#.#.#.#
#..*.T..#
#########

Message Blue wizard teleports to blocks.

#############
#...*.{.#...#
#.W.*.{.[.G.#
#...#...#...#
#############

#########
#.....#G#
#.#*..#[#
#.**.W..#
#.......#
#.{.{.{.#
#.......#
#########

#######
#W#G#*#
#.#.#.#
#*...*#
#.###.#
#*.*..#
#######

Message Press action to switch heroes.

#############
#...#...#...#
#.F...}.[.G.#
#...#...#...#
#############
#...#...#...#
#.3.].{...G.#
#...#...#...#
#############

Message Heroes can move each other.

###########
#*#..##G.G#
#.#.2.#...#
#.....#..##
#W###.*..*#
###########

###########
#F.*.#.*#{#
#..#...*..#
####...*.*#
#..#.##[###
#2...#*.GG#
###########

#############
#.###########
#*....{....3#
#.####.######
#.#..#.###..#
#.#G....[].G#
#.#..#.###..#
#.####.######
#.....}....T#
#############

#############
##G.#F#*#...#
#*..[.....{.#
##G.#3###...#
#############

###########
#W..{...[*#
#######.#[#
#G#G#G#.#2#
#.......#1#
###########

#########
#*......#
#######.#
#F23.]#.#
#..##G#.#
#..#GG#.#
##.####.#
#.......#
##}####.#
#########

#############
#...#G.G#...#
#.*.#F23#.G.#
#...#...#...#
##[###.###[##
#...#...#...#
#.{...{...{.#
#...#...#...#
#############

#######
#G***F#
#*****#
#G***2#
#*****#
#G***3#
#######

########
#3..G[*#
########
#F**G{{#
########
#2.[G..#
########

#############
#...#...#...#
#F#.*.#.*.#3#
#...#...#...#
######.######
#...#...#####
#2#.*.#...}*#
#...#...#####
######.######
#G..#...#...#
#G..].#...#.#
#G..#...#...#
#############

#############
#F.........G#
#############
#T.........G#
#############
#W.........G#
#############
Message Thanks for playing!


title Dungeon Janitor
author Farbs
homepage www.farbs.org
noundo
noaction
key_repeat_interval 0.1

========
OBJECTS
========

Background
DARKBLUE BLACK
11111
10000
10000
10000
10000

Entry
LIGHTBROWN BROWN DARKBROWN GRAY
30103
10101
10121
10101
10101

ExitClosed
LIGHTBROWN BROWN DARKBROWN GRAY
30103
10101
10121
10101
10101

ExitOpen
GRAY BLACK DARKBLUE
01110
11111
11111
11111
12221

Slime
LIGHTGREEN GREEN DARKGREEN
.....
.....
.....
.....
.....

Head
LIGHTGREEN GREEN DARKGREEN BLACK
.000.
03130
11111
23332
.222.

SlimeU
LIGHTGREEN GREEN DARKGREEN
11111
21112
.222.
.....
.....

SlimeD
LIGHTGREEN GREEN DARKGREEN
.....
.....
.000.
01110
11111

SlimeUD
LIGHTGREEN GREEN DARKGREEN
11111
11111
11111
11111
11111

SlimeL
LIGHTGREEN GREEN DARKGREEN
00...
110..
111..
112..
22...

SlimeR
LIGHTGREEN GREEN DARKGREEN
...00
..011
..111
..211
...22

SlimeLR
LIGHTGREEN GREEN DARKGREEN
00000
11111
11111
11111
22222

SlimeUL
LIGHTGREEN GREEN DARKGREEN
11111
11112
1112.
112..
22...

SlimeUR
LIGHTGREEN GREEN DARKGREEN
11111
21111
.2111
..211
...22

SlimeULR
LIGHTGREEN GREEN DARKGREEN
11111
11111
11111
11111
22222

SlimeDL
LIGHTGREEN GREEN DARKGREEN
00...
110..
1110.
11110
11111

SlimeDR
LIGHTGREEN GREEN DARKGREEN
...00
..011
.0111
01111
11111

SlimeDLR
LIGHTGREEN GREEN DARKGREEN
00000
11111
11111
11111
11111

SlimeUDLR
LIGHTGREEN GREEN DARKGREEN
11111
11111
11111
11111
11111

SlimeSolo
LIGHTGREEN GREEN DARKGREEN
.000.
01110
11111
21112
.222.

Wall
LIGHTGREY GREY
11111
01000
01000
11111
00010

PlayerA
Black Orange White Blue Brown
.....
.11..
2224.
333.4
3.322

PlayerB
Black Orange White Blue Brown
.....
.11..
.4222
4.333
223.3

Temp
PINK
00000
00000
00000
00000
00000

=======
LEGEND
=======

. = Background
# = Wall
E = Wall AND Entry
P = PlayerA
O = Slime AND Head
X = Wall AND ExitClosed

SlimeDecal = SlimeU OR SlimeD OR SlimeUD OR SlimeL OR SlimeR OR SlimeLR OR SlimeUL OR SlimeUR OR SlimeULR OR SlimeDL OR SlimeDR OR SlimeDLR OR SlimeUDLR OR SlimeSolo
Player = PlayerA OR PlayerB

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Slime
SlimeU, SlimeD, SlimeUD, SlimeL, SlimeR, SlimeLR, SlimeUL, SlimeUR, SlimeULR, SlimeDL, SlimeDR, SlimeDLR, SlimeUDLR, SlimeSolo, ExitOpen
Player, Wall, PlayerA, PlayerB, Temp
Head, Entry, ExitClosed

======
RULES
======

(Stomp Heads)
[ > Player | Head ] -> [ > Player | NO Head ]
[ > Player | Slime ] -> [ > Player | NO Slime ]

(New Head)
[ Head ] -> []
RANDOM [ Slime NO Player ] -> [ Slime Head ]

(Grow Slime)
[ Head | NO Slime NO Wall NO Player ] -> [ Head | Slime ]

(Clear Slime from under player)
[ > Player | Slime ] -> [ > Player | NO Slime ]
LATE [ Player Slime ] -> [ Player NO Head ]

(Make slime pretty)
[ SlimeDecal ] ->[ ]
VERTICAL [ Slime | Slime | Slime ] -> [ Slime | Slime SlimeUD | Slime ]
UP [ Slime NO SlimeUD | Slime ] -> [ Slime SlimeU | Slime ]
DOWN [ Slime NO SlimeUD | Slime ] -> [ Slime SlimeD | Slime ]
HORIZONTAL [ Slime | Slime NO SlimeU NO SlimeD NO SlimeUD | Slime ] -> [ Slime | Slime SlimeLR | Slime ]
LEFT [ Slime NO SlimeU NO SlimeD NO SlimeUD NO SlimeLR | Slime ] -> [ Slime SlimeL | Slime ]
RIGHT [ Slime NO SlimeU NO SlimeD NO SlimeUD NO SlimeLR | Slime ] -> [ Slime SlimeR | Slime ]
HORIZONTAL [ Slime | Slime SlimeU | Slime ] -> [ Slime | Slime SlimeULR | Slime ]
LEFT [ Slime SlimeU | Slime ] -> [ Slime SlimeUL | Slime ]
RIGHT [ Slime SlimeU | Slime ] -> [ Slime SlimeUR | Slime ]
HORIZONTAL [ Slime | Slime SlimeD | Slime ] -> [ Slime | Slime SlimeDLR | Slime ]
LEFT [ Slime SlimeD | Slime ] -> [ Slime SlimeDL | Slime ]
RIGHT [ Slime SlimeD | Slime ] -> [ Slime SlimeDR | Slime ]
[ Slime NO SlimeDecal ] -> [ Slime SlimeSolo ]

( Shut the door if slime still around)
( Have to open it first unfortunately )
[ ExitClosed Wall ] -> [ ExitOpen ]
[ ExitOpen ][ Slime ] -> [ ExitClosed Wall ][ Slime ]

(Player Anim)
[ LEFT PlayerB ] -> [ LEFT PlayerA ]
[ RIGHT PlayerA ] -> [ RIGHT PlayerB ]
LATE [ PlayerA ] -> [ Temp ]
LATE [ PlayerB ] -> [ PlayerA ]
LATE [ Temp ] -> [ PlayerB ]
==============
WINCONDITIONS
==============

ALL Player ON ExitOpen

=======
LEVELS
=======

MESSAGE It's Thursday.
MESSAGE Today I mop the slime pit.


##X##
##.##
##.##
##O##
##.##
##P##
##E##

MESSAGE Damn slime sticking to my shoes.

..####..
..#O.#..
###..###
#......#
#P#..#.#
#E#..#X#
..####..

MESSAGE Goes SHLUCK SHCLUK when I walk.

######X#############
###......#...#...###
###.##.#...#...#...#
##.....###########.#
#..#.#.....#.......#
#.##.###.#.##.######
#......#.#.#.O.....#
#.####.#.#.#.#####.#
#P.....#.#.........#
#E##################

MESSAGE Last room before home.
MESSAGE This one can take a while.

##########X#########
#..................#
#..................#
#..#######.######..#
#..#.#...#.#.#..#..#
#..#...#.#.#.#..#..#
#..#.....#.#.#..#..#
#..##....#.#...##..#
#..#............#..#
#..#......O.....#..#
#..#............#..#
#..#............#..#
#..##############..#
#.........P........#
##########E#########

MESSAGE Done for the day. Back tomorrow.
MESSAGE Fridays is rat scrubbing day.

title Tunnel Rat
author James Noeckel
noundo
again_interval 0.07
youtube SG1uBb104Is
========
OBJECTS
========
Background
#4c352b #4e382f #533c30
01010
02211
20010
00012
12102

PlayerS
#a65200 red #6f3c0a
.0.0.
.000.
21012
20002
22022

PlayerU
#a65200 red #6f3c0a
.0.0.
.101.
20002
22022
.2.2.

inflow
yellow orange white
00000
00000
22222
11111
11111

exit
green
.0.0.
0.0.0
.0.0.
0.0.0
.0.0.

tempwall
blue

DirtM
#82642b #876b35 #927538
01010
02211
20010
00012
12102

DirtU
#82642b #876b35 #927538 #b19154
22222
33333
00000
01012
12102


Rock
#e0e0e0 #a4a4a4 #8a8a8a #7c7c7c
.000.
01112
11123
11223
.233.

enemy
white #ff7070 black #880000 red
01414
14343
14343
14443
43232

h_grav
black
.....
.....
..0..
.....
.....

h_step
red
.....
.....
..0..
.....
.....

(h_dead
black
)
pickupoverlay
pink

enemyoverlay
pink

destroy
red
0...0
.0.0.
..0..
.0.0.
0...0
scrolling
blue
.....
.....
..0..
.....
.....

Shoes
#ff11f7 #9711ff #641d9a
...0.
...10
...01
.1111
.2222

Eraser
#00ff12 #99ffa0 #008509
..10.
.1000
10000
.2000
..20.

Unraser
#00ff12 #99ffa0 #008509
.01..
0001.
00001
0002.
.02..

Shoesworn
purple pink
.....
.....
.....
.....
10.01


=======
LEGEND
=======
# = Dirtm
. = Background
P = playerS
o = Rock
s = shoes
x = enemy
@ = dirtm and destroy
$ = dirtm and inflow
e = exit and Dirtm
% = unraser

dirt = dirtm or dirtu
Player = PlayerS or PlayerU
Helpers = h_grav or scrolling or h_step
Pickups = shoes or Eraser or Unraser
Heldpickups = shoesworn
Solid = Dirt or Player or Rock or Pickups or enemy
Heavy = Rock or Pickups or enemy
overlays = pickupoverlay or enemyoverlay
Everything = Solid or tempwall or overlays

=======
SOUNDS
=======
SFX1 36137902
SFX2 78903905
SFX3 14420703
SFX4 25525902
SFX5 49701704
SFX6 98046907
SFX7 16284302
SFX8 96668708
SFX9 86449100
================
COLLISIONLAYERS
================

helpers
Background
tempwall, solid
Heldpickups
overlays
destroy, inflow, exit


======
RULES
======

up [ > PlayerU ] -> cancel
down [ > PlayerU ] -> [ PlayerS ]

(digging/jumping up)
up [ > PlayerS | no Solid | no Solid no inflow ] -> [ | | PlayerU scrolling ] SFX2
up [ > PlayerS | no Solid | Dirt no inflow ] -> [ | | PlayerU scrolling ] SFX7
up [ > PlayerS | no Solid no inflow ] -> [ | PlayerU scrolling ] SFX2
up [ > PlayerS | Dirt no inflow ] -> [ | PlayerU scrolling ] SFX7

(scrolling and terraingen)
[ scrolling ] [ Everything destroy ] -> [ scrolling ] [ destroy ]
[ scrolling ] [ inflow no Player ] -> [ scrolling ] [ inflow tempwall ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow random overlays ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow enemyoverlay ]
random [ scrolling ] [ inflow ] -> [ scrolling ] [ inflow enemyoverlay ]



startloop
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ dirtm ]
random [ tempwall ] -> [ ]
random [ tempwall ] -> [ ]
random down [ tempwall | solid ] -> [ rock | Solid ]
random down [ tempwall | solid ] -> [ rock | Solid ]
endloop


[ pickupoverlay rock ] -> [ random pickups]
[ enemyoverlay rock ] -> [ enemy ]

random down [ Solid inflow | rock | rock ] -> [ rock inflow | rock | rock ]
[ no Solid | inflow Solid | no Solid ] -> [ | inflow | ]
[ no Solid | inflow Solid | inflow Solid | no Solid ] -> [ | inflow | inflow | ]


down [ scrolling ] [ Everything ] -> [ scrolling ] [ > Everything ]


(gravity)
down [ Heavy ] -> [ down Heavy ] again

(up [ > PlayerS | no Solid ] [ Everything destroy ] -> [ > PlayerS scrolling | ] [ destroy ]
up [ > PlayerS | Dirt ] [ Everything destroy ] -> [ > PlayerS scrolling | dirt ] [ destroy ]
down [ Everything ] [ Player scrolling ] -> [ > Everything ] [ PlayerU scrolling ]
)

(movement in general)
horizontal [ > PlayerU | Dirt ] -> [ | PlayerS ] SFX1
horizontal [ > PlayerU ] -> [ > PlayerS ]

[ action PlayerU ] -> [ PlayerS ]
[ > Player | Dirt ] -> [ | Player ] SFX1


(use pickup)

up [ action PlayerS shoesworn | Solid | no inflow no exit ] -> [ | Solid | PlayerS ] SFX4
up [ action PlayerS shoesworn | | Solid | no inflow no exit ] -> [ | | Solid | PlayerS ] SFX4
up [ action PlayerS shoesworn | | | | no inflow no exit ] -> [ | | | | PlayerU ] SFX4

(pushing)
Horizontal [ > Player | Heavy ] -> [ > Player | > Heavy ] SFX6
Horizontal [ > Heavy | Heavy ] -> [ > Heavy | > Heavy ]
Horizontal [ > Enemy | Dirt ] -> [ > Enemy | ] SFX1
Horizontal [ > Enemy | pickups | Solid ] -> [ > Enemy | | Solid ] SFX4
([Enemy h_dead no h_grav] -> message flattened to death)
(down [ Enemy h_dead | destroy ] -> [ Enemy | destroy ] message flattened to death)
([ > Enemy | Player ] -> [ | Enemy h_dead ] SFX5)
([ moving Enemy h_dead ] -> [ moving Enemy moving h_dead ])
[ moving Enemy h_grav ] -> [ moving Enemy moving h_grav ]
down [ > Enemy h_grav | Solid no Player no Enemy ] -> [ | Enemy ] SFX4
down [ > Enemy | Player ] -> [ > Enemy | ] SFX4




(pickup)

[ > Player | shoes ] -> [ | stationary Player shoesworn ] SFX3

[ > Player | Eraser ] [ Solid no Player no Pickups ] -> [ > Player | Eraser ] [ DirtM ]
startloop
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Rock ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
random [ > Player | Unraser ] [ Solid no Player | no Solid ] -> [ > Player | Unraser ] [ Solid | Dirtm ]
endloop
[ > Player | Pickups ] -> [ | stationary Player ] SFX8

(steps)
up [ PlayerS | no Solid ] -> [ PlayerS | h_step ]
[ moving PlayerS ] [ h_step ] -> [ moving PlayerS ] [ moving h_step ]

(late steps)
late down [ h_step | Player ] -> [ | Player ]
late [h_grav] [h_step] -> [h_grav] []
late down [ h_step no Solid | no Player ] [ PlayerS ] -> [ PlayerS | ] [ ]
late down [ h_step Dirt | no Player ] [ PlayerS ] -> [ PlayerS | ] [ ] SFX1

(player gravity)
late down [ PlayerS | h_grav ] -> [ | PlayerS ]
late down [ PlayerS | no Solid ] -> [ PlayerS | h_grav ]

late [ Player no shoesworn] [ shoesworn ] -> [ Player shoesworn ] [ ]

(enemy gravity)
late down [ enemy | no Solid ] -> [ enemy h_grav | ]
late down [ enemy | Player ] -> [ enemy h_grav | ]


(cleanup)
late [scrolling] -> []
late [overlays] -> []
late [h_step] -> []

(beautify)
late up [ Dirtm | no Dirt ] -> [ DirtU | ]
late up [ DirtU | Dirt ] -> [ Dirtm | Dirt ]

(death)
[ Player destroy ] -> [ destroy ] SFX4

(life)
late [ Player exit ] [ exit no Player ] -> [ Player exit ] [ ] SFX9
==============
WINCONDITIONS
==============
all exit on player
=======
LEVELS
=======

message Survive. x to use held item.
$$$$$$$$$$$$$$$$$$$
eeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeee
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
###################
#########P#########
###################
###################
###################
###################
###################
###################
@@@@@@@@@@@@@@@@@@@

message Is that a light at the end of the tunnel?
$$$$$$$$$$$$$$$$$$$$$$$$$
eeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeee
o.......................o
o.......................o
o..x.x.x.x.xpx.x.x.x.x..o
o#.#.#.#.#.#x#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.#.#.#.#.#.#.#.#.#.#.#.o
o#.#.#.#.#.#.#.#.#.#.#.#o
o.......................o
o.......................o
o.......................o
o.......................o
o......#................o
o.....##..............#.o
o....###...%...#..#..##.o
###..############.#######
########.##.#############
####.#####..#############
########.....############
#########################
#########################
@@@@@@@@@@@@@@@@@@@@@@@@@

title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate move 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..

######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


title Bouncers
author Tyler Glaiel
homepage twitter.com/tylerglaiel

========
OBJECTS
========

Bg
#111111 #222222
00010
11111
01000
01000
11111

Selection
white gray
..1..
..1..
11011
..1..
..1..

Wall
DarkBlue DarkGreen #333333
20002
22022
22122
21112
11111

Hole
DarkGray Gray Black
.111.
12221
10001
10001
.111.


Arrow
Red Red
..1..
..11.
11111
..11.
..1..


HudDivider
white black
00000
11111
11111
11111
11111

IconGO
green white
10111
10011
10001
10011
10111

Going
green white
10111
10011
10001
10011
10111

LeftBouncer
White White Blue
.221.
2.1.2
21..2
2.1.2
.221.

RightBouncer
White White Blue
.122.
2.1.2
2..12
2.1.2
.122.

UpBouncer
White White Blue
.222.
2.1.2
21.12
1...1
.222.

DownBouncer
White White Blue
.222.
1...1
21.12
2.1.2
.222.

HudBG
black

Empty
black

PlayEmpty
black
.....
.....
.....
.....
.....


Ball
#003300 Green
.000.
01110
01110
01110
.000.

WinBall
LightBlue LightGreen
.000.
01110
01110
01110
.000.



BallUp
#003300 Green Black
.000.
01210
01110
01110
.000.

BallDown
#003300 Green Black
.000.
01110
01110
01210
.000.

BallLeft
#003300 Green Black
.000.
01110
02110
01110
.000.

BallRight
#003300 Green Black
.000.
01110
01120
01110
.000.




=======
LEGEND
=======
Background = Bg or HudBG
. = bg and PlayEmpty
S = Selection and PlayEmpty
- = HudDivider and Wall
H = HudBG and PlayEmpty
A = Arrow and HudBG
G = IconGO
W = Wall
O = Hole

L = LeftBouncer and HudBG
R = RightBouncer and HudBG
U = UpBouncer and HudBG
D = DownBouncer and HudBG

B = BallLeft
N = BallRight
M = BallUp
K = BallDown

Player = Selection


PlacedLeftbouncer = LeftBouncer and Selection
PlacedRightbouncer = RightBouncer and Selection
PlacedUpbouncer = UpBouncer and Selection
PlacedDownbouncer = DownBouncer and Selection

Bouncer = LeftBouncer or RightBouncer or UpBouncer or DownBouncer

emptyPlayer = Selection and PlayEmpty


ballSwitchLeft = Ball and LeftBouncer
ballSwitchRight = Ball and RightBouncer
ballSwitchUp = Ball and UpBouncer
ballSwitchDown = Ball and DownBouncer

ballSwitchedLeft = BallLeft and LeftBouncer
ballSwitchedRight = BallRight and RightBouncer
ballSwitchedUp = BallUp and UpBouncer
ballSwitchedDown = BallDown and DownBouncer

gameGo = Selection and IconGO
gameGoing =  Going



WinL = BallLeft and Hole
WinR = BallRight and Hole
WinU = BallUp and Hole
WinD = BallDown and Hole

Win = WinBall

MovingBall = Ball or BallLeft or BallRight or BallUp or BallDown

=======
SOUNDS
=======
SFX0 41242705 (place bouncer)
SFX1 73889302 (press go)
MovingBall Move 68254307 (ball move)
SFX2 68257500 (pocket ball)
SFX3 82752503 (ball switch direction)

================
COLLISIONLAYERS
================

Background

Arrow, Empty, LeftBouncer, RightBouncer, UpBouncer, DownBouncer, PlayEmpty, IconGO, Going, Hole
WinBall
Wall, Ball, BallUp, BallDown, BallLeft, BallRight
Selection, HudDivider


======
RULES
======

(action button: take icon to the right of the arrow, place under selector)
[action selection PlayEmpty][Arrow|LeftBouncer] -> [PlacedLeftbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|RightBouncer] -> [PlacedRightbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|UpBouncer] -> [PlacedUpbouncer][Arrow|Empty] SFX0
[action selection PlayEmpty][Arrow|DownBouncer] -> [PlacedDownbouncer][Arrow|Empty] SFX0

(win conditions)
[WinL] -> [Win] again SFX2
[WinR] -> [Win] again SFX2
[WinU] -> [Win] again SFX2
[WinD] -> [Win] again SFX2

(slide unused icons over to the left if there's space between them and the arrow)
right [Empty | Bouncer] -> [Bouncer | Empty]

(selector on top of go button -> signals game to run)
[action selection iconGO] -> [gameGoing] again SFX1

(make genericball match the direction of the bouncer)
[ballSwitchLeft]->[ballSwitchedLeft] again
[ballSwitchRight]->[ballSwitchedRight] again
[ballSwitchUp]->[ballSwitchedUp] again
[ballSwitchDown]->[ballSwitchedDown] again

(if ball is going to move on top of a bouncer, switch it to generic ball first)
right [Going][Bouncer | BallLeft] -> [Going][Bouncer | Left Ball] again SFX3
left  [Going][Bouncer | BallRight] -> [Going][Bouncer | Right Ball] again SFX3
up    [Going][Bouncer | BallDown] -> [Going][Bouncer | Down Ball] again SFX3
down  [Going][Bouncer | BallUp] -> [Going][Bouncer | Up Ball] again SFX3



(move the ball if Going)
[Going][BallLeft] -> [Going][LEFT BallLeft] again
[Going][BallRight] -> [Going][RIGHT BallRight] again
[Going][BallUp] -> [Going][UP BallUp] again
[Going][BallDown] -> [Going][DOWN BallDown] again



[Going] -> [Going] again

==============
WINCONDITIONS
==============

no MovingBall

=======
LEVELS
=======

message place bouncers, hit play

......w.....
..o...w.....
......w.....
......w.....
......w..b..
......s.....
............
g-----------
-hhadluhhhhh

message Level 2

............
......o.....
..s.........
......w.....
...o.....b..
......m.....
............
g-----------
-hhalurhhhhh

message Level 3

............
............
..o.wwww....
..s.n..b....
....wwww.o..
............
............
g-----------
-hhaudrlhhhh

message Level 4

............
............
..o......o..
............
............
.s..bbbb....
............
............
..o......o..
............
g-----------
-hhalrudu...

message Level 5

.....n......w...
..wwww.k....o.w.
......b..m......
...o............
.......w........
.....b.w........
......wwo.......
w.ww.www........
.o..............
....s...........
..........wwwo..
g---------------
-hhaddddddrrr...

message I didn't feel like making more levels

title Octat
author increpare
homepage www.increpare.com

noundo
require_player_movement

(
    
A port of a flash game I made.  The original's here:

http://ded.increpare.com/~locus/octat/

)

========
OBJECTS
========

Background
purple
.....
.000.
.000.
.000.
.....

Activetile
pink red
00000
0...0
0...0
0...0
00000

Target
red
0...0
.0.0.
..0..
.0.0.
0...0

Player
white
.....
.000.
.000.
.000.
.....

Void 0
black

Temp
black

=======
LEGEND
=======

. = Background
P = Player and Activetile
a = Activetile
x = Target
y = target and Activetile

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Void
Activetile
Player
Temp
Target

======
RULES
======

[ > Player | no Activetile ] -> cancel

late [ Activetile | Player ] -> [ Temp | Player ] 
late [ no Temp | Player ] -> [ Activetile | Player ] 
late [ Temp ] -> [ ] 

late [ Activetile Void ] -> [ Void ] 

==============
WINCONDITIONS
==============

some Player on target

=======
LEVELS
=======

message level 1 of 8

..........
..........
..........
..........
..........
.x...ap...
..........
..........
..........
..........

message level 2 of 8

...........
...........
...........
...........
...........
....xpa....
...........
...........
...........
...........

message level 3 of 8

...........
...........
...........
...........
..a........
.axaaap....
..a........
...........
...........
...........

message level 4 of 8

...........
...........
...a.......
..a.a......
.a.a.a.....
a.aya.a.ap.
.a.a.a.....
..a.a......
...a.......
...........

message level 5 of 8

...........
...........
...........
...........
aaaaaaaaaaa
...y..ap...
aaaaaaaaaaa
...........
...........
...........

message level 6 of 8

000000....0
000000..0.0
000000..0..
000000000..
....A...0.0
.AY.A...AAP
....A...0.0
000000000..
000000..0..
000000..0.0
000000....0

message level 7 of 8

..AAA...000
.AY.A...AP.
..AAA...000

message level 8 of 8

0AAAA..00
0AAAA..00
YAAAA..AP
0AAAA..00
0AAAA..00

message the end


USER PROMPT:
The following PuzzleScript game code:
```plaintext
========
OBJECTS
========

Background
white
.....
.....
.....
.....
.....

Wall
black
.....
111..
111..
111..
.....

Player
blue
.....
..0..
.000.
..0..
.....

Goal
green
.....
..0..
..0..
.....

Box
brown
.....
.....
.000.
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
G = Goal
B = Box

=======
SOUNDS
=======

==============
COLLISIONLAYERS
==============

Background
Wall
Player, Goal, Box

======
RULES
======

==============
WINCONDITIONS
==============

All Goal on Box

=======
LEVELS
=======

#######
#.....#
#..P..#
#.#BG.#
#######

#######
#G.P..#
#.....#
#.....#
#.B...#
#######


```
produced the following console output:
=================================
line 16 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 17 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 18 : Trying to access color number 1 from the color palette of sprite WALL, but there are only 1 defined in it.
line 29 : Sprite graphics must be 5 wide and 5 high exactly.
line 36 : Sprite graphics must be 5 wide and 5 high exactly.
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.