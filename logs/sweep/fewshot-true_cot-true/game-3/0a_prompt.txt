SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title IceCrates
author Tyler Glaiel
homepage twitter.com/tylerglaiel
run_rules_on_level_start true
noaction

========
OBJECTS
========

Background
DarkBlue White LightBlue
22112
21122
11222
12221
22211




Wall_0000
DarkBlue Gray DarkGray DarkGray Gray
10001
00000
00000
00000
30003

Wall_0001
DarkBlue Gray DarkGray DarkGray Gray
11111
00000
00000
00000
30003

Wall_0010
DarkBlue Gray DarkGray DarkGray Gray
10002
00002
00002
00002
30002

Wall_0011
DarkBlue Gray DarkGray DarkGray Gray
11111
00002
00002
00002
30002

Wall_0100
DarkBlue Gray DarkGray DarkGray Gray
10001
00000
00000
00000
33333

Wall_0101
DarkBlue Gray DarkGray DarkGray Gray
11111
00000
00000
00000
33333

Wall_0110
DarkBlue Gray DarkGray DarkGray Gray
10002
00002
00002
00002
33333

Wall_0111
DarkBlue Gray DarkGray DarkGray Gray
11111
00002
00002
00002
33333

Wall_1000
DarkBlue Gray DarkGray DarkGray Gray
40001
40000
40000
40000
40003

Wall_1001
DarkBlue Gray DarkGray DarkGray Gray
11111
40000
40000
40000
40003

Wall_1010
DarkBlue Gray DarkGray DarkGray Gray
40002
40002
40002
40002
40002

Wall_1011
DarkBlue Gray DarkGray DarkGray Gray
11111
40002
40002
40002
40002

Wall_1100
DarkBlue Gray DarkGray DarkGray Gray
40001
40000
40000
40000
33333

Wall_1101
DarkBlue Gray DarkGray DarkGray Gray
11111
40000
40000
40000
33333

Wall_1110
DarkBlue Gray DarkGray DarkGray Gray
40002
40002
40002
40002
33333

Wall_1111
DarkBlue Gray DarkGray DarkGray Gray
11111
40002
40002
40002
33333



PlayerStill
Red Orange DarkGrey Gray Black
.000.
01110
04140
01210
.333.

PlayerL
Red Orange DarkGrey Gray Black
.000.
04110
01410
02110
.333.

PlayerR
Red Orange DarkGrey Gray Black
.000.
01140
01410
01120
.333.

PlayerU
Red Orange DarkGrey Gray Black
.000.
04140
01110
01210
.333.

PlayerD
Red Orange DarkGrey Gray Black
.000.
01110
01110
04240
.333.


Crate
Brown Yellow Orange
11111
10002
10002
10002
22222


Water1
Blue LightBlue
00000
01100
10011
00000
01100

Water2
Blue LightBlue
00000
00110
11001
00000
00110

Water3
Blue LightBlue
00000
00011
11100
00000
00011

Water4
Blue LightBlue
00000
10001
01110
00000
10001

Water5
Blue LightBlue
00000
11000
00111
00000
11000

Water6
Blue LightBlue
00000
01100
10011
00000
01100

FilledWater
LightBrown LightBlue White
11111
10002
10002
10002
22222

Goal
Black Green DarkGreen
..12.
.112.
1112.
...2.
...2.



StillCrate
Orange



=======
LEGEND
=======

Wall = Wall_0000 or Wall_0001 or Wall_0010 or Wall_0011 or Wall_0100 or Wall_0101 or Wall_0110 or Wall_0111 or Wall_1000 or Wall_1001 or Wall_1010 or Wall_1011 or Wall_1100 or Wall_1101 or Wall_1110 or Wall_1111

Water = Water1 or Water2 or Water3 or Water4 or Water5 or Water6

. = Background
# = Wall_1111
P = PlayerStill
* = Crate
W = Water1
G = Goal
(@ = Crate and Target
O = Target)

Player = PlayerStill or PlayerL or PlayerR or PlayerU or PlayerD
Obstacle = Wall or StillCrate or Water

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
FilledWater
Goal
(Target)
Player, Wall, Crate, StillCrate, Water

======
RULES
======

(     0001

1000         0010

      0100
)

(make pretty walls)
Right [Wall | Wall_1111 | Wall] -> [Wall | Wall_0101 | Wall]
Right [Wall_1111 | Wall] -> [Wall_1101 | Wall]
Right [Wall | Wall_1111] -> [Wall | Wall_0111]


Down [Wall | Wall_1111 | Wall] -> [Wall | Wall_1010 | Wall]
Down [Wall_1111 | Wall] -> [Wall_1011 | Wall]
Down [Wall | Wall_1111] -> [Wall | Wall_1110]


Down [Wall | Wall_0101 | Wall] -> [Wall | Wall_0000 | Wall]
Down [Wall_0101 | Wall] -> [Wall_0001 | Wall]
Down [Wall | Wall_0101] -> [Wall | Wall_0100]


Down [Wall | Wall_1101 | Wall] -> [Wall | Wall_1000 | Wall]
Down [Wall_1101 | Wall] -> [Wall_1001 | Wall]
Down [Wall | Wall_1101] -> [Wall | Wall_1100]


Down [Wall | Wall_0111 | Wall] -> [Wall | Wall_0010 | Wall]
Down [Wall_0111 | Wall] -> [Wall_0011 | Wall]
Down [Wall | Wall_0111] -> [Wall | Wall_0110]


(animate water)
[Water5]->[Water6]
[Water4]->[Water5]
[Water3]->[Water4]
[Water2]->[Water3]
[Water1]->[Water2]

[Water6]->[Water1]


(game logic)

[ LEFT  PlayerStill ] -> [ PlayerL ]
LEFT [ PlayerL | Crate ] -> [ PlayerL | LEFT Crate ] again
LEFT [ > Crate | Crate ] -> [ > Crate | > Crate ] again
LEFT [ > Crate | Water ] -> [ | FilledWater]
LEFT [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
LEFT [ PlayerL | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerL ] -> [ LEFT PlayerL ] again

[ RIGHT  PlayerStill ] -> [ PlayerR ]
RIGHT [ PlayerR | Crate ] -> [ PlayerR | RIGHT Crate ] again
RIGHT [ > Crate | Crate ] -> [ > Crate | > Crate ] again
RIGHT [ > Crate | Water ] -> [ | FilledWater]
RIGHT[ > Crate | Obstacle ] -> [StillCrate | Obstacle]
RIGHT [ PlayerR | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerR ] -> [ RIGHT PlayerR ] again

[ UP  PlayerStill ] -> [ PlayerU ]
UP [ PlayerU | Crate ] -> [ PlayerU | UP Crate ] again
UP [ > Crate | Crate ] -> [ > Crate | > Crate ] again
UP [ > Crate | Water ] -> [ | FilledWater]
UP [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
UP [ PlayerU | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerU ] -> [ UP PlayerU ] again

[ DOWN  PlayerStill ] -> [ PlayerD ]
DOWN [ PlayerD | Crate ] -> [ PlayerD | DOWN Crate ] again
DOWN [ > Crate | Crate ] -> [ > Crate | > Crate ] again
DOWN [ > Crate | Water ] -> [ | FilledWater]
DOWN [ > Crate | Obstacle ] -> [StillCrate | Obstacle]
DOWN [ PlayerD | Obstacle ] -> [ PlayerStill | Obstacle ]
[ PlayerD ] -> [ DOWN PlayerD ] again

[StillCrate]->[Crate]


==============
WINCONDITIONS
==============

Some PlayerStill on Goal

=======
LEVELS
=======



message Level 1: Get to the Goal

#######
#g.#..#
#.....#
#.....#
#.#.p.#
###...#
#######

message Level 2: You must land ON the goal

#########
#########
#...g...#
#.......#
#....#p.#
#.......#
#....#..#
##....#.#
#########

message Level 3: Push Crates

#########
####.####
#.......#
#..#...g#
##......#
#...*.###
#.....###
###....p#
..##....#
...######


message Level 4: Fill the Water Hole

###########
#.........#
####......#
#g..W..p..#
####...#..#
#..#***.#.#
#..#......#
#........##
##...##..##
###########

message Level 5

#############
#......#....#
#...........#
#........p..#
##....w.....#
#..**wgw....#
#.....w....##
#.....*.....#
#.....*.....#
#...........#
#....#......#
#############

message Level 6

##############.
#...###......#.
#.#...#....####
#.#...w..**...#
#.....#.......#
#####w#......##
.##..........#.
.##..........#.
###.*........#.
.###.g....p..#.
.#.##........#.
##..##.......#.
.#############.

message You are win congratulations


title Extended Bodies:Multiple Parallel Players, Multiple Extended Object
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(
    
THIS IS A DELIBERATELY BROKEN GAME, JUST FOR ILLUSTRATION

see https://www.puzzlescript.net/Documentation/rigidbodies.html#parallel_many
)


========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Movable

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

( 1. Propagate movements forward )
[ > Mover | Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]
+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]

==============
WINCONDITIONS
==============

=======     
LEVELS
=======

###################
#.................#
#.................#
#...*..g.g.#......#
#...*......#...g###
#...*...o.%%%.....#
#...+++.o.%.......#
#....+....%%%.....#
#....+.....P...g..#
#....p.gg.........#
###################


title Colour Chained
author Dennis Au
youtube _VzrmRkLfxM
run_rules_on_level_start
again_interval 0.015
noundo

(version 201310152126 - added some harder levels, added sfx for rotate and drop, decided to use noundo)
(version 201310142256 - tweaked scoring, added pop animation and reworked code)

========
OBJECTS
========
Background
Black

P1 p
Black
0...0
.....
.....
.....
0...0

P2 q
Black
0...0
.....
.....
.....
0...0

hasN
Orange
0....
.....
.....
.....
....0

Remove
White
.....
.....
.....
.....
.....


NP1 n
White
.....
.....
.....
.....
.....

NP2 m
White
.....
.....
.....
.....
.....

LoseFlag
Grey Black LightGrey
.....
10120
.....
02010
.....

PieceGen
Black

HBorder -
DarkGrey
.....
.....
0...0
.....
.....

VBorder |
DarkGrey
..0..
.....
.....
.....
..0..

(pieces)
C1 R
Red LightGrey Black
.000.
00010
00000
00000
.000.

C2 G
Green LightGrey Black
.000.
00010
00000
00000
.000.

C3 B
Blue LightGrey Black
.000.
00010
00000
00000
.000.

C4 Y
Yellow LightGrey Black
.000.
00010
00000
00000
.000.

(Numbers)
No1 1
DarkGrey
..0..
.00..
..0..
..0..
.000.

No2 2
DarkGrey
.00..
0..0.
..0..
.0...
0000.

No3 3
DarkGrey
000..
...0.
.00..
...0.
000..

No4 4
DarkGrey
..0..
.00..
0.0..
0000.
..0..

No5 5
DarkGrey
0000.
0....
000..
...0.
000..

No6 6
DarkGrey
.00..
0....
000..
0..0.
.00..

No7 7
DarkGrey
0000.
...0.
..0..
.0...
0....

No8 8
DarkGrey
.00..
0..0.
.00..
0..0.
.00..

No9 9
DarkGrey
.00..
0..0.
.000.
...0.
.00..

No0 0
DarkGrey
.00..
0..0.
0..0.
0..0.
.00..

Pop
LightGrey White
...1.
..101
...1.
.....
.....

Inc
Black

PlayArea
Green


=======
LEGEND
=======
. = Background
u = PieceGen
+ = Inc

Player = P1 or P2
Piece = C1 or C2 or C3 or C4
PieceB = Piece

NP = NP1 or NP2
Border = HBorder or VBorder
Score = No1 or No2 or No3 or No4 or No5 or No6 or No7 or No8 or No9 or No0

Obstacle = Piece or Score
Match3Logic = hasN or Remove or Pop

=======
SOUNDS
=======
startlevel 17589703

(death)
sfx0 45317502

(match3)
sfx1 530500

(piece drop)
sfx2 75273507

(piece rotate)
sfx3 21774107

================
COLLISIONLAYERS
================
PlayArea
Background
Player, NP, PieceGen, Border
Piece, Score, Inc,
Match3Logic, LoseFlag

======
RULES
======
(set preview area)
[] -> [PlayArea]
Down [NP|PlayArea] -> [NP|]
Vertical [No PlayArea| PlayArea] -> [|]

(match 3 rules)
Right [C1|C1] -> [C1 hasN|C1 hasN]
Right [C2|C2] -> [C2 hasN|C2 hasN]
Right [C3|C3] -> [C3 hasN|C3 hasN]
Right [C4|C4] -> [C4 hasN|C4 hasN]

Vertical [C1 hasN|C1] -> [Remove C1| Remove C1]
Vertical [C2 hasN|C2] -> [Remove C2| Remove C2]
Vertical [C3 hasN|C3] -> [Remove C3| Remove C3]
Vertical [C4 hasN|C4] -> [Remove C4| Remove C4]

[Remove C1| C1] -> [Remove C1| Remove C1]
[Remove C2| C2] -> [Remove C2| Remove C2]
[Remove C3| C3] -> [Remove C3| Remove C3]
[Remove C4| C4] -> [Remove C4| Remove C4]

[C1|C1|C1] -> [Remove C1|Remove C1|Remove C1]
[C2|C2|C2] -> [Remove C2|Remove C2|Remove C2]
[C3|C3|C3] -> [Remove C3|Remove C3|Remove C3]
[C4|C4|C4] -> [Remove C4|Remove C4|Remove C4]

[hasN] -> []

[PlayArea Remove Piece][P1] -> [PlayArea Pop][P1] sfx1
random [Pop][inc] -> [][left inc] again


(down drops pieces)
Down [> Player Piece|No Piece] -> [Player|> Piece] sfx2
Down [> Player No Piece] -> Cancel


(x rotates clockwise)
[Up P1|P2] -> [> P1|v P2] sfx3
[Action P1|P2] -> [> P1|v P2] sfx3
[Moving Player Piece] -> [Moving Player Moving Piece]
[> Player| Border] -> cancel


(gravity)
Down [PlayArea Piece No Player|No Obstacle][stationary inc] -> [PlayArea|> Piece][stationary inc] again


(explicit loss if piece ends on border)
[Piece Border][stationary inc][P1] -> [Piece Border LoseFlag][inc][] sfx0
[LoseFlag|No LoseFlag] -> [LoseFlag|LoseFlag] again


(scoring)

left [> inc| score] -> [> inc| > score]
left [> No9| score] -> [No0|> score]
left [> No9| border] -> [No0| border]

left [> No0] -> [No1]
left [> No1] -> [No2]
left [> No2] -> [No3]
left [> No3] -> [No4]
left [> No4] -> [No5]
left [> No5] -> [No6]
left [> No6] -> [No7]
left [> No7] -> [No8]
left [> No8] -> [No9]


(preview area)

startloop
(for endless mode)
[PieceGen No Piece] -> [PieceGen Random Piece]
(antigrav)
Up [Piece No PlayArea No NP| No Obstacle] -> [|> Piece]
(get next piece)
[P1 no Piece][P2 no Piece][NP1 Piece|NP2 PieceB]-> [P1 Piece][P2 PieceB][NP1|NP2]
endloop


==============
WINCONDITIONS
==============
No Piece
No Pop

=======
LEVELS
=======
(Empty Level Template

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
..|000000+

)

nm|..pq..|
RR|......|
..|------|
..|......|
..|......|
..|......|
..|..Y...|
..|..RR..|
..|R.YY..|
..|000000+

nm|..pq..|
GR|......|
..|------|
..|......|
..|......|
..|....B.|
..|...BG.|
..|...RG.|
..|.R.RB.|
..|000000+

nm|..pq..|
RR|......|
BB|------|
BR|......|
..|......|
..|......|
..|......|
..|....B.|
..|..RRB.|
..|000000+


nm|..pq..|
BG|......|
RB|------|
..|......|
..|......|
..|......|
..|......|
..|..GB..|
..|RRGB..|
..|000000+

nm|..pq..|
BG|......|
GB|------|
..|......|
..|......|
..|......|
..|...G..|
..|..BB..|
..|..GG.B|
..|000000+

nm|..pq..|
RG|......|
GB|------|
BR|......|
..|......|
..|......|
..|...G..|
..|...B..|
..|..RRG.|
..|000000+

nm|..pq..|
GR|......|
RY|------|
BG|......|
YB|......|
..|......|
..|..B...|
..|..RB..|
..|.GYB..|
..|000000+

nm|..pq..|
RG|......|
YY|------|
YG|......|
BB|......|
..|BY....|
..|YB.G..|
..|YRRG..|
..|BGGBBY|
..|000000+

nm|..pq..|
rb|......|
bb|------|
by|......|
ry|......|
..|....r.|
..|...rb.|
..|.bybyb|
..|bybyrr|
..|000000+

nm|..pq..|
br|......|
ry|------|
yy|......|
..|....b.|
..|...gb.|
..|...yy.|
..|.bygb.|
..|byrgrr|
..|000000+


nm|..pq..|
by|......|
ry|------|
ry|......|
yg|....y.|
..|..rgby|
..|b.gbyg|
..|rrgbyg|
..|bbyyrr|
..|000000+


message Thank you for playing.
message Music: Puzzle Pieces - Desert of Lost Endings by Nick Tanski (nicholastanski.bandcamp.com)

(endless mode)
message Endless Mode unlocked!

nm|..pq..|
..|......|
..|------|
..|......|
..|......|
..|......|
..|......|
..|......|
..|......|
uu|000000+

(CC BY-NC-SA 3.0)

title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

debug

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

Crate
Orange
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target


=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ >  Player | Crate ] -> [  >  Player | > Crate  ]

==============
WINCONDITIONS
==============

All Target on Crate

=======
LEVELS
=======


####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..


######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


title Robot Spawner
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background (special, automatically placed in its own layer)
green darkgreen
11111
01111
11101
11111
10111

Spawner (Name)
yellow 	(Color)
..... 	(Sprite)
..0..
.000.
..0..
.....

Player (Required by game)
pink
..0..
00000
..0..
.000.
.0.0.

RedRobot
gray black red
.000.
.200.
...0.
00000
01010

GreenRobot
gray black lightgreen
.000.
.200.
...0.
00000
01010

BlueRobot
gray black lightblue
.000.
.200.
...0.
00000
01010

=======
LEGEND
=======

Robot = RedRobot or GreenRobot or BlueRobot
Obstacle = Player or Robot
. = Background
P = Player
* = Robot
O = Spawner

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Spawner
Player, Robot

======
RULES
======

[ stationary Robot ] -> [ randomDir Robot ] 
[ Spawner no Obstacle ] -> [ Spawner random Robot ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

.......
.......
.......
...O...
.......
.P.....
.......


title PUSH
author lonebot - demake by rmmh
homepage http://lonebot.net/games/push/

youtube UXlXgFDgXow
again_interval 0.1
noaction

========
OBJECTS
========

Background .
#756C5E

Wall #
#635854

StrongPlayer P
#E8D2AC #67453D Black #282D3C Red
11111
02020
40004
43334
33.33

WeakPlayer
#E8D2AC #67453D Black #282D3C
11111
02020
.000.
.333.
33.33

GibbedPlayer
Red
...0.
.0...
0..0.
.....
..0.0

Rock *
#202020 #706249 #A6957B
.000.
02220
02210
01110
.000.

RockDust (destroyed by a projectile)
#A6957B
...0.
.0...
0..0.
.....
..0.0

Idol G
#945527 #C97536 #F4EF0B
.000.
01210
.222.
.010.
01210

Pit _
Black #5A5349
.1.1.
1000.
.000.
.0001
..11.

PitFilled
Black #5A5349 #706249
.1.1.
1222.
.222.
.2221
..11.

PitPlayer
Black #5A5349 #E8D2AC #282D3C
.1.1.
1020.
.222.
.3331
..11.

WeakGround x
#5A5349
.0..0
00..0
..00.
00..0
0.0..

GunUSingle U
Black Grey Yellow
..0..
12021
11011
11111
.111.

GunDSingle D
Black Grey Yellow
.111.
11111
11011
12021
..0..

GunRSingle R
Black Grey Yellow
.111.
1112.
11000
1112.
.111.

GunLSingle L
Black Grey Yellow
.111.
.2111
00011
.2111
.111.

GunUMulti M
Black Grey Red
..0..
.202.
12021
12221
.111.

GunLMulti N
Black Grey Red
..11.
.2221
00021
.2221
..11.

GunRMulti O
Black Grey Red
.11..
1222.
12000
1222.
.11..


Button T
#969283 #4A4A4A
.000.
01110
01010
01110
.000.

ButtonPressed
#969283 #3A3A3A
.000.
01110
01110
01110
.000.

ArrowU
Brown
..0..
.000.
..0..
.....
.....

ArrowR
Brown
.....
...0.
..000
...0.
.....

ArrowL
Brown
.....
.0...
000..
.0...
.....

ArrowD
Brown DarkBrown
.....
.....
..0..
.000.
..0..

Firing
Black

Fired
Brown

(used for linking buttons to guns, and for generic flags)
LinkA
Red

LinkB
Green

LinkC
Blue

LinkD
White

LinkE
Black

=======
LEGEND
=======

Player = StrongPlayer or WeakPlayer or GibbedPlayer
DeadPlayer = GibbedPlayer or PitPlayer
GunU = GunUSingle or GunUMulti
GunD = GunDSingle
GunL = GunLSingle or GunLMulti
GunR = GunRSingle or GunRMulti
MultiGun = GunUMulti or GunLMulti or GunRMulti
Gun = GunU or GunR or GunD or GunL
Movable = Rock or Gun
Q = StrongPlayer and WeakGround
Heavy = Movable or Player
Arrow = ArrowU or ArrowR or ArrowD or ArrowL
Link = LinkA or LinkB or LinkC or LinkD or LinkE
Blockers = Player or Wall or Idol or Movable

1 = Wall and LinkA
2 = Wall and LinkB
3 = Wall and LinkC
4 = Wall and LinkD
5 = Wall and LinkE

7 = GunRSingle and LinkE
8 = Button and LinkE

=======
SOUNDS
=======

Idol destroy 47224903
Pit create 4141702
PitPlayer create 19700104
PitFilled create 87604304
ButtonPressed create 25424301
(using sfxN here to deal with bug where 'again' triggers sounds twice)
sfx0 36787702 (rock destroyed by arrow)
sfx1 59184504 (player explodes)
Arrow create 98842708 (arrow shot)

================
COLLISIONLAYERS
================

Link (move layer to top for debugging linkages)
Firing, Fired
Background
Pit, PitFilled, WeakGround, Button, ButtonPressed, PitPlayer, RockDust
Blockers
Arrow

======
RULES
======

(player can move an object only once)
[ > StrongPlayer | Movable | no Blockers ] -> [ > WeakPlayer | > Movable | ]
[ > Movable Link ] -> [ > Movable > Link ]
[ DeadPlayer ] -> cancel

(pit behaviors)
late [ Player Pit ] -> [ PitPlayer ] (falling into a pit kills you)
late [ Pit Rock ] -> [ PitFilled ]  (they can be filled)
[ Player WeakGround ] -> [ Player WeakGround LinkA ] (mark WeakGround as visited)
late [ WeakGround LinkA no Player ] -> [ Pit ] (pits appear when you move off weakground)

(initialize gun linkages -- try linking on a line first)
[Wall Link] [Button no Link | ... | Gun no Link] -> [Wall] [Button Link | ... | Gun Link]
[Wall Link] [Button no Link] [Gun no Link] -> [Wall] [Button Link] [Gun Link]

(buttons cause linked gun to fire)
late [ Button Heavy LinkA ] [ Gun LinkA ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkB ] [ Gun LinkB ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkC ] [ Gun LinkC ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkD ] [ Gun LinkD ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again
late [ Button Heavy LinkE ] [ Gun LinkE ] -> [ ButtonPressed Heavy ] [ Gun Firing ] again

( MultiGuns fire 3 shots. do this by cycling LinkB->LinkA->None )
[ MultiGun Firing no Link ] -> [ MultiGun Firing LinkB ]
[ MultiGun Fired LinkB ] -> [ MultiGun Firing LinkA ]
[ MultiGun Fired LinkA ] -> [ MultiGun Firing ]

( create arrows )
[ GunU Firing ] -> [ GunU ArrowU Fired ]
[ GunR Firing ] -> [ GunR ArrowR Fired ]
[ GunL Firing ] -> [ GunL ArrowL Fired ]
[ GunD Firing ] -> [ GunD ArrowD Fired ]
( move )
[ ArrowL ] -> [ left ArrowL ] again
[ ArrowU ] -> [ up ArrowU ] again
[ ArrowR ] -> [ right ArrowR ] again
[ ArrowD ] -> [ down ArrowD ] again

late [ Arrow Rock ] -> [ RockDust ] sfx0
late [ Arrow Player ] -> [ GibbedPlayer ] sfx1
late [ Arrow Blockers ] -> [ Blockers ] sfx0

(grabbing an idol)
[ DeadPlayer ] -> cancel
[ > Player | Idol ] -> [ Player | Pit ]

==============
WINCONDITIONS
==============

no Idol

=======
LEVELS
=======

message 1/20: You only get one push!
###########
#.........#
#......*..#
#.*.....*.#
#...***...#
#..**g*...#
#..*.*....#
#.........#
#...p...*.#
#.........#
###########

message 2/20: Mind the gap
###########
#**.......#
#*....*.*.#
#.........#
#...***...#
#...*g*...#
#...*_*...#
#*........#
#..*.p..*.#
#.........#
###########

message 3/20: Shaky footing
###########
#****g****#
#.*_..****#
#x********#
#.********#
#.x.xx...*#
#*******x*#
#......x.*#
#.********#
#p*.......#
###########

message 4/20: Firepower
1##########
#*...g...*#
#........*#
#*********#
#**.....*.#
#**.......#
#**_.p....#
#*t*...**.#
#**_...**.#
#**..u...*#
###########

message 5/20: Artillery
1##########
#**.....*.#
#*......**#
#...*g*...#
#.*.......#
#.........#
#*********#
#..*.**...#
#*......t.#
#..*.u...p#
###########

message 6/20: Traps
1##########
#t**.****.#
#.*...**g*#
#.x.....**#
#.**.*....#
#..*.*....#
#.**......#
#**.......#
#**p..*...#
#**..**.u*#
###########

message 7/20: Sequencing
12#########
#*********#
#*t****_..#
#*x*.d**..#
#.....**..#
#.....*...#
#t..._*...#
#r...**.g.#
#...***...#
#p..****..#
###########

message 8/20: Hamiltonian Cycle
(8/20 - 3 guns, order irrelevant)
123########
#*....**.*#
#..***l**.#
#g****l***#
#*****l***#
#tx**xxxxx#
#xxxqxxx*t#
#xx*_**x_x#
#*x_xxxxx*#
#*xtx*x**_#
###########

message 9/20: Barrage
(9/20 -- 4 guns, all inline with triggers)
1234#######
#****x***_#
#***.tt.**#
#xg_.dd.**#
#*__......#
#_*__**.lt#
#_*..*..lt#
#.........#
#*p.......#
#**...*..*#
###########

message 10/20: Rotary
(10/20 -- 4 guns, mostly inline with triggers)
1234#######
#**_*...t.#
#*......d.#
#r......**#
#*.****..*#
#t.*.g**.*#
#..******x#
#....**_xt#
#.....p***#
#_.u*t._.l#
###########

message 11/20: Shooting Gallery
(11/20)
1234#######
#t..*..*_l#
#_.****.__#
#r.*x**.t*#
#******.**#
#**xtr_.*g#
#__.__..**#
#_......**#
#....p.u.*#
#**....t..#
###########

message 12/20: Co-op
(12/20: 2 players!)
1##########
#*t.._____#
#...._*g__#
#.r.._.*..#
#...._*.**#
#**_._.*.*#
#****_....#
#*..*_..**#
#*.**_..**#
#*p**_..p*#
###########

message 13/20: Rescue
12#########
#**...._.g#
#*.t..._*.#
#*...d._.*#
#*p..__*_*#
#*...__.u*#
#.*..._.t*#
#*...**_**#
#*..***.**#
#*.**....p#
###########

message 14/20: Friendly Fire
(14/20 -- corridor toggle triggers left-wall gun )
12#########
#*********#
#*********#
#g*8...pl*#
#*********#
#7********#
#...***...#
#......p.t#
#....*.*..#
#.ut......#
###########

message 15/20: Interference
123########
#**..*..**#
#*.......*#
#....p...*#
#t......**#
#r.**..**g#
#...*...**#
#..uup..**#
#*.......*#
#**tt...**#
###########

message 16/20: Machine guns
1##########
#*********#
#p..*g****#
#....*****#
#..*******#
#..**.*.**#
#***......#
#***.p....#
#....t.m..#
#_........#
###########

message 17/20: Trapped
(17/20 -- top toggle triggers magma)
123########
#p**...n*g#
#*****..*_#
#******.**#
#***..t*.*#
#*7_*.....#
#8.x*....l#
#...xp...x#
#...u*.._t#
#*..t*...x#
###########

message 18/20: Crossfire
(18/20 -- modified to be more difficult)
12345######
#_g.*_****#
#____**...#
#.....*...#
#rx.***.x.#
#t..*.*...#
#.px..*.pl#
#o.**.*x.*#
#t...*.x.t#
#.xtm*mtx.#
###########

message 19/20: Stylite
(19/20)
1##########
#*********#
#..*t***x*#
#p...*****#
#.r..*g***#
#.*_____*_#
#**_...___#
#*__p..___#
#*x_...__*#
#_*_______#
###########

message 20/20: Spinal Cannon
(20/20 -- inverted so I don't have to make an upwards magma gun)
1##########
#p.**g*_.p#
#....**x..#
#_*.._..**#
#.*..*...*#
#..*.x....#
#_x__*.._.#
#*.x_*x.._#
#*x..***..#
#*_.tm.*..#
###########

(finale -- pushes gold into pit, gold gets smashed, eyes bug out)
###########
#*.......*#
#....p....#
#._....._.#
#_...*..._#
#_..._..._#
#__._g_.__#
#_________#
#_________#
#*_______*#
###########

message Congratulations!

(Credits
Code: Yotam Frid
Art: Mati & Itamar Ernst
Music: Jason Lord

www.lonebot.net
Ludam Dare 28)

(blank level template()
###########
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
#.........#
###########
()

USER PROMPT:
Output the code for a complete PuzzleScript game. First, reason about your task and determine the best plan of action. Then, write your code. Return your code in full, inside a ```plaintext code block.