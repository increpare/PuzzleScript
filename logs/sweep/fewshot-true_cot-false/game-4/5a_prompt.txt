SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title By Your Side
author Alan Hazelden
homepage www.draknek.org

require_player_movement
key_repeat_interval 0.12

(

A port of alan hazelden's game, By Your Side, in 6 lines of code, made with the permission of the author -

the original is here
http://www.draknek.org/games/by-your-side/

)

========
OBJECTS
========

(Objects in all scenes)

Grass .
darkgreen green
00000
01000
00000
00010
00000

Player_Casual P
black pink gray
..0..
..1..
.222.
..2..
.2.2.

TargetMain T
yellow
00000
0...0
0...0
0...0
00000

(Initial Scenes)

GirlFriend G
pink red
..0..
.010.
..1..
.111.
.0.0.

Tree #
darkbrown lightgreen
.111.
11111
.111.
..0..
..0..

(Wedding Scene)

Player_Formal Q
black pink white
..0..
..1..
.020.
..0..
.0.0.

WoodenFloor ,
brown
00000
00000
00000
00000
00000

ChurchWall H
darkbrown brown
11101
00000
10111
00000
11101

Chair C
darkbrown brown
11111
11101
11101
00001
01101

Altar A
gray
.....
00000
.000.
.000.
.000.

Spectator1 B
black pink white
..0..
..1..
.020.
..0..
.0.0.

Spectator2 D
purple pink white
..0..
..1..
10001
.000.
00000

Wife_Wedding W
white pink
..1..
.000.
.101.
.000.
00000

(Post Wedding Scene)

house @
black grey red
..0..
.000.
00000
.111.
.121.

pavement `
darkblue

Road '
gray white
00000
00000
01110
00000
00000

Wife_Repulsed X
white pink
..1..
.000.
.101.
.000.
00000

(grave scene)

gravedirt ~
green brown
01001
10000
00100
00001
01000

grave R
lightgray darkgray grey
.111.
10201
12221
10201
10001

coffin F
darkbrown brown black
.000.
01210
02220
01210
02220

(final scene)

Wife_Dying Y
white pink
..1..
.000.
.101.
.000.
00000

Wife_Coffin
darkbrown brown black
.000.
01210
02220
01210
02220

ColdFeet I
black

=======
LEGEND
=======

Target = TargetMain or Road
Player = Player_Casual or Player_Formal
Background = Grass or WoodenFloor or Pavement or GraveDirt
Spectator = Spectator1 or Spectator2
Obstacle = House or Spectator or Chair or Tree or Altar or Grave or Coffin or Wife_Coffin or ChurchWall
Wife_Attracted = Girlfriend or Wife_Wedding or Wife_Dying
Wife = Wife_Attracted or Wife_Repulsed or Wife_Coffin
Person = Player or Wife
GrassyTarget = Grass and TargetMain
E = GrassyTarget

=========
SOUNDS
=========

Player cantmove 82269707
endlevel 54461500
startgame 10582309
endgame 66004102
Wife_Repulsed move 44043907
sfx0 16417502

================
COLLISIONLAYERS
================

ColdFeet
Background
Target
Obstacle, Person

======
RULES
======

(game logic)

[ > Player ] [ Wife_Attracted ] -> [ > Player ] [ > Wife_Attracted ] 
[ > Player ] [ Wife_Repulsed ] -> [ > Player ] [ < Wife_Repulsed ] 

late [ Wife_Dying ] -> [ Wife_Coffin ] 
late [ Player | Wife_Coffin ] -> [ Player | Wife_Dying ] 

(level-specific events)
late [ ColdFeet Player ] -> [ Player ] message ...
late [ Wife Road ] -> sfx0

==============
WINCONDITIONS
==============

all person on target

=======
LEVELS
=======

....#################
...###...#....#######
..##.........##.....#
.##...#######.......#
##....#....###......#
#...###.............#
#...#...#...#..######
#...#...#..##.P.....#
#....####.T##..######
##......#...#.......#
###..##..#...#...##.#
#.##..#..##..#...#..#
#..#..#....###...#..#
#..##........#......#
#...##...##...##....#
#.......##.....######
.##############......

....#################
...###...#....#######
..##.........##.....#
.##...#######.......#
##....#....###......#
#...###.............#
#...#...#...#..######
#...#...#..##..T...T#
#....####.P##G.######
##......#...#.......#
###..##..#...#...##.#
#.##..#..##..#...#..#
#..#..#....###...#..#
#..##........#......#
#...##...##...##....#
#.......##.....######
.##############......

....#################
...###...#....#######
..##.........##.....#
.##...#######.......#
##....#....###......#
#...###.............#
#...#T..#...#..######
#...#T..#..##..P...G#
#....####..##..######
##......#...#.......#
###..##..#...#...##.#
#.##..#..##..#...#..#
#..#..#....###...#..#
#..##........#......#
#...##...##...##....#
#.......##.....######
.##############......

HHHHHHHHHHHHHHHHHHHHH
,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
,CCCCCCCCCCCCCCCCCCCC
,CCCCCCCCCCCCCCCCCCCC
A,B,,D,B,D,,B,D,,,B,C
A,T,,I,,,I,,,,I,Q,,,C
A,T,,,,,,,,,,,,,W,,,C
,CCCCCCCCCCCCCCCCCCCC
,CCCCCCCCCCCCCCCCCCCC
,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,
HHHHHHHHHHHHHHHHHHHHH

`````````@@@@````````
`````````@TT@````````
``@@@@@@`@`@@````````
``@````@`@`@@@@``````
``@`@@`@`@````@``````
``@`@@`@`@`@@@@``````
``@`@@`@@@P@`````````
``@```````W@@@@@@````
``@`@@@@@@``````@````
``@`@````@`@@@@`@````
``@`@````@`@``@`@````
@@@@@@@@@@@@@@@@@@@@@
'''''''''''''''''''''
@@@@@@@@@@@@@@@@@@@@@
`````````````````````

`````````@@@@````````
`````````@PX@````````
``@@@@@@`@`@@````````
``@````@`@`@@@@``````
``@`@@`@`@````@``````
``@`@@`@`@`@@@@``````
``@`@@`@@@T@`````````
``@```````T@@@@@@````
``@`@@@@@@``````@````
``@`@````@`@@@@`@````
``@`@````@`@``@`@````
@@@@@@@@@@@@@@@@@@@@@
'''''''''''''''''''''
@@@@@@@@@@@@@@@@@@@@@
`````````````````````

`````````@@@@````````
`````````@TT@````````
``@@@@@@`@`@@````````
``@````@`@`@@@@``````
``@`@@`@`@````@``````
``@`@@`@`@`@@@@``````
``@`@@`@@@P@`````````
``@```````X@@@@@@````
``@`@@@@@@``````@````
``@`@````@`@@@@`@````
``@`@````@`@``@`@````
@@@`@@@@@@`@@@@`@@@@@
'''''''''''''''''''''
@@@@@@@@@@@@@@@@@@@@@
`````````````````````

RRRRRRR~RRRRRR~RRRRR
R~~~~~R~R~~~~R~R~~~~
R~~~~~~~R~~~~R~R~~~~
R~~~~~R~R~~~~R~R~~~~
RRRRRRR~RR~~RR~RRRRR
R~~~~BDBDBDBDBD~~~~R
RQ~~~~~i~i~~i~~~~EFR
RRRRRRRRRRRRRRRRRRRR
R~~R~~~~~~~~~~~R~~~~
R~~R~~~~~~~~~~~R~~~~
R~~RRR~~~RRRR~~R~~~~
R~~~~~~~~R~~~~~R~~~R
R~~R~~~~~R~~R~~~~~~R
R~~R~~~~~R~~R~~~~~~R
RRRRRRRRRR~~RRRRRRRR

RRRRRR~~~~~~~~~~~~~~
R~~~~R~~~~~RRRRRR~~~
R~QY~R~~~~~R~~~~R~~~
R~~~~R~~RRRRR~R~R~~~
R~~~~RRRR~~R~~R~R~~~
R~~~~~~~~~~R~~R~RRR~
RRRRRRRRR~~R~~~~~~R~
~~R~~~~~R~~R~RRR~~R~
~~R~~R~~R~~RRR~R~~R~
~~R~~R~~~~~~~~~~~~R~
~~R~~R~~RR~~~~~RRRR~
~~R~~R~~~RRRRRTTR~~~
~~R~~R~~~R~~~~~~R~~~
~~R~~R~~~~~RRR~~R~~~
~~RRRRRRRRRR~RRRR~~~

RRRRRR~~~~~~~~~~~~~~
R~~~~R~~~~~RRRRRR~~~
R~~~~R~~~~~R~~~~R~~~
R~~~~R~~RRRRR~R~R~~~
R~~~~RRRR~~R~~R~R~~~
R~~~~~~~~~~RT~R~RRR~
RRRRRRRRR~~RT~~~~~R~
~~R~~~~~R~~R@RRR~~R~
~~R~~R~~R~~RRR~R~~R~
~~R~~R~~~~~~~~~~~~R~
~~R~~R~~RR~~~~~RRRR~
~~R~~R~~~RRRRRYQR~~~
~~R~~R~~~R~~~~~~R~~~
~~R~~R~~~~~RRR~~R~~~
~~RRRRRRRRRR~RRRR~~~

message Commiserations

message It is over

title Extended Body Example: 1 Player, Multiple Extended Objects
author Scott Hughes

(

Usable in the case where there's only a single player that's pushing stuff around.

Example for
https://www.puzzlescript.net/Documentation/rigidbodies.html#one_many

)

=======
OBJECTS
=======

Background
white

Player
pink

Box1
red

Box2
green

Box3
blue

Box4
orange

Wall
grey

======
LEGEND
======

. = Background
@ = Player
1 = Box1
2 = Box2
3 = Box3
4 = Box4
# = Wall

Box = Box1 or Box2 or Box3 or Box4

======
SOUNDS
======

===============
COLLISIONLAYERS
===============

Background
Player, Box, Wall

=====
RULES
=====

[ > Player | Box ] -> [ > Player | > Box ]

startloop

(Propagate movements through crates of different types.)
[ moving Box1 | Box1 ] -> [ moving Box1 | moving Box1 ]
[ moving Box2 | Box2 ] -> [ moving Box2 | moving Box2 ]
[ moving Box3 | Box3 ] -> [ moving Box3 | moving Box3 ]
[ moving Box4 | Box4 ] -> [ moving Box4 | moving Box4 ]

(Extend the movements between crates of different types.)
[ > Box | Box ] -> [ > Box | > Box ]

endloop

(Just cancel the whole turn if something can't move.)
[ > Box | Wall ] -> cancel

=============
WINCONDITIONS
=============

======
LEVELS
======

################
#....###.......#
#....#.....##..#
#...........#..#
#...@..222..#..#
##.....2.......#
#...3.....1....#
#..33.....1....#
#..3.....11....#
#....4........##
#...444...##...#
#..#.....##....#
################


title Robot Spawner
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background (special, automatically placed in its own layer)
green darkgreen
11111
01111
11101
11111
10111

Spawner (Name)
yellow 	(Color)
..... 	(Sprite)
..0..
.000.
..0..
.....

Player (Required by game)
pink
..0..
00000
..0..
.000.
.0.0.

RedRobot
gray black red
.000.
.200.
...0.
00000
01010

GreenRobot
gray black lightgreen
.000.
.200.
...0.
00000
01010

BlueRobot
gray black lightblue
.000.
.200.
...0.
00000
01010

=======
LEGEND
=======

Robot = RedRobot or GreenRobot or BlueRobot
Obstacle = Player or Robot
. = Background
P = Player
* = Robot
O = Spawner

=========
SOUNDS
=========

================
COLLISIONLAYERS
================

Background
Spawner
Player, Robot

======
RULES
======

[ stationary Robot ] -> [ randomDir Robot ] 
[ Spawner no Obstacle ] -> [ Spawner random Robot ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

.......
.......
.......
...O...
.......
.P.....
.......


title Simple Action Example
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.


Blood
DarkRed red white
.01.0
.1202
2.0.1
02.1.
.1.0.

Sheep O
black white gray
..11.
01111
01112
.212.
.0.0.


=======
LEGEND
=======

. = Background
# = Wall
P = Player


=======
SOUNDS
=======

Sheep MOVE 76935307
SFx0 52519108

================
COLLISIONLAYERS
================

Background
Blood
Player, Wall, Sheep

======
RULES
======

[ Action Player | Sheep ] -> [  Action  Player | > Sheep  ]

[ > Sheep |  Sheep ] -> [ blood | > Sheep ] Sfx0

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#################
#...............#
#...............#
#......ooo......#
#########ooo....#
#P.o...o..ooo...#
#########oooo...#
#...oooooooo....#
#......oo.......#
#...............#
#################



title Wrapping Recipe
author increpare
homepage http://www.puzzlescript.net

========
OBJECTS
========

Wrap
Black

Background
White

Player
Blue

=======
LEGEND
=======

. = Background
~ = Wrap
@ = Player

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Wrap
Player

======
RULES
======

[ Wrap | < Player | ... | | Wrap ] -> [ Wrap | | ... | Player | Wrap ]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

~~~~~~~
~.....~
~.....~
~..@..~
~.....~
~.....~
~~~~~~~


title horizontal Block Pushing Game
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
blue white
00000
00000
01110
00000
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

horizontal [ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

#########
#.......#
#.....@.#
#.P.*.O.#
#.......#
#.......#
#########

.#######.
.#.....#.
.#O##..##
##.##.*.#
#.*..**.#
#.OOO.#.#
#.P.....#
#########


title MazezaM
author Malcolm Tyrrell
homepage https://sites.google.com/site/malcolmsprojects/

noaction

(
License:

(C)2013 Malcolm Tyrrell
You can use and distribute this code under the terms of the AGPLv3:

http://www.gnu.org/licenses/agpl-3.0.html
)

========
OBJECTS
========

Background
DarkBlue Black
11111
01111
11101
11111
10111

Entrance
Blue
.....
.....
.....
.....
.....

Wall
Lightgrey Darkgrey Grey
11101
12111
11112
11011
11111

CPlayer
Red DarkGreen Green
..0..
22222
02220
01110
.1.1.

LPlayer
Red DarkGreen Green
0.0..
.222.
0002.
.111.
.1.1.


RPlayer
Red DarkGreen Green
..0.0
.222.
.2000
.111.
.1.1.

ACrate
Orange Brown DarkBrown
00001
01102
01012
00112
12222

LCrate
Orange Brown DarkBrown
00000
01101
01011
00111
12222

ICrate
Orange Brown DarkBrown
00000
11101
11011
10111
22222

RCrate
Orange Brown DarkBrown
00001
11102
11012
10112
22222

Target
Orange Yellow
.....
.....
.....
.....
.....

Exit
DarkBrown
.....
.000.
.0.0.
.000.
.....

Gate
DarkBrown
.0.0.
00000
.0.0.
00000
.0.0.

=======
LEGEND
=======

. = Background
# = Wall
P = CPlayer
C = ACrate
L = LCrate
R = RCrate
I = ICrate
+ = Entrance
* = Exit
X = Target

Crate = ACrate or LCrate or RCrate or ICrate
WallLike = Wall or Gate or Exit
Obstacle = Gate or Wall
Object = Obstacle or Crate
Player = CPlayer or LPLayer or RPlayer
Space = Background or Exit

=======
SOUNDS
=======

Player CantMove 68096304
Gate Create 97629502
Crate Move 64536307
EndLevel 56439303

================
COLLISIONLAYERS
================

Background
Exit, Entrance, Target
Player, RPlayer, Wall, LCrate, Crate, RCrate, ICrate, Gate

======
RULES
======

(Select the appropriate pushing sprite)

Right [ > Player ] -> [ > RPlayer ]
Left [ > Player ] -> [ > LPlayer ]

(Except when moving vertically or not pushing)

Vertical [ > Player ] -> [ > CPlayer ]
Horizontal [ > Player | No Object ] -> [ > CPlayer | ]

(The player can push a crate when the end of the row is free)

Horizontal [ > Player | Crate | ... | No Object | WallLike ] -> [ > Player | > Crate | ... | | WallLike ]

(All crates on a row move together)

Horizontal [ > Crate | ... | Crate ] -> [ > Crate | ... | > Crate ]
Horizontal [ Crate | ... | > Crate ] -> [ > Crate | ... | > Crate ]

(The gate closes when the player passes the entrance)

Late Right [ Entrance | Player ] -> [ Gate | Player ]

==============
WINCONDITIONS
==============

All Player on Target

=======
LEVELS
=======

message First Principles

(Pushes: rRRuLdrRurr)
(Moves: rRRuLdrRurr)

###########
###.C.C.*.X
P.+.C...###
###########

message Humble Origins

(Pushes: rdRRurRdLuLrdLLrurRdrrr)
(Moves: rdRRurRdLuLrdLLrurRdrrr)

#############
P.+.C..LR.###
###.C..C..*.X
#############

message Baby Steps

(Pushes: rddRRuRuLrdLurRdRdLLuuLrdLurRdRdLruLdrrur)
(Moves: rddRRuRuLrdLurRdRdLLuuLrdLurRdLdRRurr)

#############
P.+.LR..LR###
###.C.C.C.*.X
###.LR.C..###
#############

message Easy Does It

(Pushes: rurRdRRuLuLrdRdLLuurRdLuLrdLurRddRRurr)
(Moves: rurRdRRuLuLrdRdLLuurRdLuLrdLurRddRRurr)

##############
###..C..LIR###
###..C.C.C.*.X
P.+.C.C.C..###
##############

message Little Rascal

(Pushes: ruuuRRddRdlLuluurrdLddrRuLdLruLdrRuruuLLLrrrddldlLuuurrrdddr)
(Moves: ruuuRRddRdlLuluurrdLddrRuLdLruLdrRuruuLLLddRdLruLuurrrdddr)


###########
###.C...###
###.C.LR###
###.C.C.###
P.+.C..C*.X
###########

message Leap-frog

(Pushes: rRdRRuLLdlddRRuLuuRRddRdLruLdLruuuLLddRdLruLuuRRddRdrrr)
(Moves: rRdRRuLLdlddRRuLuuRRddRdLruLdLruuLLdRdLruLuRRdRdrrr)

#############
P.+.C.C.C.###
###C.LIR..###
###.C.C.LR###
###.C..C..*.X
#############

message Shuttles

(Pushes: rrdRRdddLLuuurrdLLddrRRRuuuLLLLdRRurruLdrruLdlldLLuRRRRdddlLLLuuurruRRddddrr)
(Moves: rrdRRdddLLuuurrdLLddrRRRuuuLLLLdRRurruLLddLLuRRRRdddlLLLuuurruRRddddrr)

#############
P.+..LIR.C###
###..C.C..###
###..C.LIR###
###C.C.C.C###
###..C..C.*.X
#############

message The Nudge

(Pushes: rRuuRRRRdLdLLuLurrdRRuLLdLdRRuRuLLrrdLdLLuRurrdLurrrddr)
(Moves: rRuuRRRRdLdLLuLurrdRRuLLdLdRRuRuLLrrdLdLLuLuRRRRRdrdr)

##############
###C.C.....###
###..C.C.LR###
P.+.LR.LIR.*.X
##############

message Opening Gambit

(Pushes: rurRRdLdLdRRuRRuuLLLdRRuLrdLurrrdLdLLdLLuRuRurrrddr)
(Moves: rurRRdLdLdRRuRRuuLLLdRRuLrdLurrrdLdLLdLLuRuRurrrddr)

#############
###..C.C..###
P.+.LR.LR.###
###.C.C.C.*.X
###C.LIR..###
#############

message Loop-de-Loop

(Pushes: rrrdrRRuruLdLruRRRdrRRuLdLruLdrdLuLruLdLruRRRdrrdLdlLLLuuuLdrRRuLdLruLdLruRRRdrrddr)
(Moves: rrrdrRRuruLdLruRRRdrRRuLdLruLdrdLuLruLdLruRRRdrrdLdlLLLuuuLdrRRuLdLruLdLruRRRdrrddr)

####################
###.LIIIR.LR.LR..###
P.+...LR..LR..LR.###
###LR..C.LR.LIR..###
###...LIIIIIIR..C*.X
####################

message Nudge-nudge

(Pushes: ruRldRlddrruRuLLddrRuuRuLLdLddrruLLuRuRRdRdrdLLLLrrruuLuLLdLdRdrrrruur)
(Moves: rRluRdldRdrRuuLLddrruuRuLLdLddrruLLuRuRRdRdrdLLLLrrruuLuLLdLdRdrrrruur)

#############
###.LR.LR.###
P.+.C.C.C.*.X
###.C.LIR.###
###...LR..###
#############

message To and Fro

(Pushes: rrdRdRdrdLdRRurrdLLurrRdrRRuruuLLrrddldlLLullLdRRulldLLuurRuRRRururrrr)
(Moves: rrdRdRdrdLdRRurrdLLurrRdrRRuruuLLrrddldlLLullLdRRulldLLuRuRuRRRururrrr)

###################
P.+...LIIIR.....*.X
###C.LIIIR..LIR.###
###.C.LIR.LIIR..###
###C.C..LIIIIIR.###
###.LIR.C...LR..###
###C.C.C.LR..C..###
###################

message Ragged Rascal

(Pushes: ruuuRRRddRululllddddrRuLuluurrrdrdLuLrdLurRdrddlLLLuRuRuLrdLdLdrrrruuur)
(Moves: ruRlddrRuLuluuRRRRddLuLrdLurRdrddlLLLuRuRuLrdLdLdrrrruuur)

############
###.C....###
###.LR..C*.X
###.LR.C.###
P.+.C.LIR###
###..C...###
############

message Hold Your Horses

(Pushes: rruuRRllddRdRRRRuLLuLullldddrrrruRRdLLLLulluurrrdLddRRRRuuruLLLLrrrdddLLLLuuRurrrrdLddrr)
(Moves: rruuRRllddRdRRRRuLLuLullldddrrrruRRdLLLLulluurrrdLddRRRRuuruLLLLrrrdddLLLLuuRurrrrdLddrr)

##############
###..LIR...###
###..LR.LIR###
P.+..LIR.C.###
###.C.C....*.X
##############

message Knot Theory

(Pushes: rrdddRRuuuLLddddRRuuuurrddLLdddLLuuuuuRRddrruuLLddddLLuuuuRRdddLLuRRRdrddr)
(Moves: rrdddRRuLLddRRuurruuLLdddddLLuuuRRuurrddLLddLLuuRRdLLuuuRRddRdrddr)

############
P.+..C.C.###
###C.C.C.###
###..C.C.###
###C.LR..###
###C.LR..###
###..C.LR*.X
############

message Rack and Pinion

(Pushes: rrRRddLruRRdRdRRuLuLuLLdLdRdLuLrdLuruRuRRdLdRdRRuuuLLLdRRuLrdLurrrdLddLLuLuRurrrddr)
(Moves: rrRRddLruRRdRdRRuLuLuLLdLdRdLuLrdLuruRRdRdRRuLuLuLLdLdRdLuLrdLuruRRdRdRRuLuLurrrddr)

################
P.+..LR.C.C..###
###LIR.C.LR..###
###.LR..C.C.C*.X
###LR.LIR.C..###
################

message Blue Meanie

(Pushes: rRRdLdRuRldRdLruLdLruLdrRRRuuuLLLdLruRRdRddlLLLuRuLrdLdrRRRuruuLrddldlLLLuurRuRRddrdr)
(Moves: rRRdLdRRdLLuurRdLLdrRRRuuuLLLdLruRRdRddlLLLuRuLrdLdrRRRuruuLrddldlLLLuurRuRRddrdr)

#############
P.+.LR.C..###
###.C..C.C###
###C.LIR..###
###..C..C.*.X
#############

message Up, Up and Away

(Pushes: rRRluRdlluuuRuRRdLdddlluuuuuuRuRRdLLuluuurRllddRluurrdLdddRRuLLdlddddddrruuuRuLLdldddrruuRuuruLuuruuur)
(Moves: rRRluRdlluuuRuRRdLLuluuRuRRdLLuluRluurRdLdddRRuLLdlddrdRRuLLdldddrruuRuuruLuuruuur)

###########
###..C..*.X
###.C.LR###
###.LR..###
###C.C..###
###.C.C.###
###.LIR.###
###C.C..###
###.C.C.###
###.C.C.###
###C.LR.###
P.+.C...###
###########

message Great Things

(Pushes: ruuRRRdddlLuluRddrRuLdLruLdrRuRuLLddLruLdrRuRRuuLLLdRRuLrdLurrrdLdLLdlLuRuRurrrdddr)
(Moves: ruuRRRdddlLuluRddrRuLdLruLdrRuRuLLddLruLdrRuRRuuLLLdRRuLrdLurrrdLdLLdlLuRuRurrrdddr)

#############
###.C.C...###
###.LR.LR.###
P.+..C.C.C###
###.C..LIR*.X
#############

message Through and Through

(Pushes: rRRdLuruRRddrRRuLdLruLdLruRRuLLuLrdLddrRRuuRRRurRdLuLrdRddLruLdLruLuurRdLuLrdLddrRRuruur)
(Moves: rRRdLuruRRddrRRuLdLruLdLruRRuLLuLrdLddrRRuuRRRurRdddLruLdLruLdrRRuLuLuLrdLLdRRRurrur)

#####################
###.LIIR..LIIR..LR*.X
###.C.LR.LR.C.LR..###
P.+.C.LR.LIIR.LR..###
###.C.LR..LIIR..C.###
#####################

message Just Enough

(Pushes: rrruRuRRdLdLLLdRRuRuRuLLdLdLddrRuLLuRuRuRRdLdRRdrdLLLLrrruuLLuRuLLdLdLddRRRRRurur)
(Moves: rrruRuRRdLdLLLdRRuRuRuLLdLdLddrRuLLuRuRuRRdLdRRdrdLLLLrrruuLLuRuLLdLdLddRRRRRurur)

##############
###C.C.LR..###
###LR.C.LR.###
P.+...C.C.C*.X
###C.LIIR..###
###...C.C..###
##############

message The Secret Staircase

(Pushes: rRRRRdlLdldRuRldRRRRRRuuuLLLLLddlLruruRRRdRdRdLLLLLuuLrddRRRRRuuRuLLrrdLddLLLLLulLrurRuRRRdddrrrur)
(Moves: rRRRdLdRuRldlLdRRRRRRuuuLLLLdLruRRRdRddLLLLLuRuLddRRRRRRuuRuLLrrdLddLLLLLulLrurRuRRRdddrrrur)

#################
P.+.LIR.LR....###
###.LR..LR.C.C###
###C..LIIR.LR.*.X
###C.LR.......###
#################

message Clear the Way

(Pushes: ruurrddRdlLuluurrdLddrRuLdLruLdrRuRRuuLLuLrdLuLrdrRRddLLdlLuuuurRRdrRldRulLLLdLddrRuRRuurrr)
(Moves: ruurrddRdlLuluurrdLddrRuLdLruLdrRuRRuuLLLruLLrdrRRddLLdlLuuuurRRdrRldRulLLLdLddrRuRRuRurr)

##############
###..C..LIR###
###...LR..C*.X
###.C.LIR.C###
P.+.C.C.LR.###
###.C..C.LR###
##############

message A Mismatch Made in Heaven

(Pushes: rRRRuRRdLLLLuRuRRullLdddRRRRRuLLdlllluururrRdLLurrRRRddLrrdLLLrruuullLLLdRdRRdrrruuur)
(Moves: rRRRuRRdLLLLuRuRRullLdddRRRRRuLLuLLurRRRRdrddLLruLruullLLLdRdRdRRRuruur)

###############
###.C...C...*.X
###LR.LIIR..###
###LIR.LR...###
P.+.C.C.....###
###############

message Double Cross

(Pushes: ruRuuRuuLrddRdLruLdLruuLururRdRRddRdrddlllllLLuurruLdlddrrrrrrruuuur)
(Moves: ruRuuRRdLLrruLuuLrdLururRdRRddRdrddlllllLLuurruLdlddrrrrrrruuuur)

###############
###.C..LIIR.###
###.C..C.LR.###
###.C.LIIR.C*.X
###C.LR..C..###
###..C...LIR###
###.LIIIIR..###
P.+..C......###
###############

message Zen Garden

(Pushes: rdRRurRdLuLrdLuLrdLurRRddRululLLdRuRldRulLdlddrdRulluururRdLuLrdLurRRdrdLdLLddlluuRlddrruLdrrrrruuuulldRululLLdRuRldRulLdlddrddrrrrruuLLruLdrruuur)
(Moves: rdRRurRdLuLrdLuLrdLurRRddRululLLdRuRldRulLdlddrdRulluururRdLuLrdLurRRdrdLdLLdLdrrrrruuuulldRululLLdRuRldRulLdlddRddrrrrruuLLruLdrruuur)

#############
P.+.C..LR.*.X
###.C.LR..###
###LIIR.C.###
###...C.LR###
###C.LIIR.###
###.......###
#############

message Inside Out

(Pushes: ruuuuRldRuluuurrrrrrrrrrdLdlllllLdLLdldddddrrrrrrrrrrrruuuuLrdLrdddlllllllllllluuRuRRurruLLdrrRRurRuRRuruur)
(Moves: ruRluRluRluuRluurrrrrrrrrrddddlLLdllLLuRRdlldLLuuluRuluurrrrrrrrrrdLdllllLLdLLdddRRurruLLdrrRRurRuRRuruur)

###################
###...........C.*.X
###.LIIIIIIIR..C###
###.LIR......LR.###
###.C.LIIIIIR.C.###
###.LIR.LIR..LR.###
###.C.C...C..LR.###
###.C.LIIIIR.LR.###
P.+.C.C.C...LIR.###
###.LIIIIIIIIIR.###
###.............###
###################

message Double Decker

(Pushes: ruRRRddRRuuLrdLuLrdRdLLuuLrdLuLrdRdRRuurrdLurrddLruulldRulldLdRRuRulldLdLLuuRldRuRldLdRRuulLddllddrdRdRRRuLrdLLLLuRRuLLddRRuLLuRRRdrRRdLuLLuLLLdRdRRRururrr)
(Moves: ruRRRddRRuuLrdLuLrdRdLLuuLrdLuLrdRdRRuurrdLurrddLruulldRulldLdRRuRulldLdLLuuRldRuRldLdRRuulLddllddrdRdRRRuLrdLLLLuRRuLLddRRuLLuRRRdrRRdLuLLuLLLdRdRRRurRurr)

###############
###.C..LR...###
P.+.LR.C.C.C###
###C.C.LR...###
###.LIIIIIIR###
###..C.LIIR.*.X
###C.LR..C..###
###.C.LCR...###
###############

message Back to Front

(Pushes: rrrrrrrrrrrddddLLLLuRRRdllluLLLuRRRdRRRdllluuLLdLLLdRRRRdRRdLdLruRuLLuLLLLuRRRuRRddrrrrdddLLLuRuulluuLLdLLLdRRRRddLLdRluRdRluRdRluuRRRdLLdRluRRuLLLdLLdlllddrrrrrrrrrrr)
(Moves: rrrrrrrrrrrddddLLLLuRRRdllluLLLuRRRdRRRdllluuLLdLLLdRRRRdRRdLdLruRuLLuLLLLuRRRuRRddrrrrdddLLLuRuulluuLLdLLLdRRRRddLLdRluRdRluRdRluuRRRdLLdRluRRuLLLdLLdlllddrrrrrrrrrrr)

#################
P.+...........###
###LIIIIIIIIR.###
###LIR.LIIR...###
###C.C.LR.C...###
###....C.LIIR.###
###LIIIR.LR...###
###.LIR.LR.LR.###
###....LR..LIR###
###.LIIIIIIIIR###
###...........*.X
#################

message The Beast

(Pushes: rRddRRuuLLddlddddrRlluuuurrrdddRdLLLuuluurrrddRdLLulluurrrdLddRRuLLLddRRRuLuRRuuLLLLuuRRddRRddLLdRdLLLuuRuRuuuLLddRlldddrdRRRuuRRuuRuurrr)
(Moves: rRddRRuuLLddlddddrRlluuuurrrdddRdLLLuuluurrrddRdLLulluurrrdLddRRuLLLddRRRuLuRRuuLLLLuuRRddRRddLLdRdLLLuuRuRuuuLLddRlldddrdRRRuuRRuuRuurrr)

################
P.+.C.LR.C...*.X
###C.C.LIR.LR###
###..C.C.C...###
###.LR.LR.LIR###
###..C.C.C.C.###
###.LR.C.LIR.###
###..C.LIR.C.###
################

message Well done. You escaped.



USER PROMPT:
The following PuzzleScript game code:
```plaintext
title Gem Collector

========
OBJECTS
========

Background
black

Player
LightBlue
.....
..0..
.....
.....
.....

Wall
DarkGray
.....
00000
.....
.....
.....

Gem
Yellow
.....
..0..
.....
.....
.....

Finish
LightGreen
.....
.0...
.....
.....
.....

=======
LEGEND
=======

. = Background
P = Player
# = Wall
G = Gem
F = Finish

================
COLLISIONLAYERS
================

Background
Player, Wall, Gem, Finish

======
RULES
======

[ Player | Gem ] -> [ Player | Background ]

[ Player | Finish ] -> win

==============
WINCONDITIONS
==============

all Gem on Background

========
LEVELS
========

..####..
..#..#..
..#..#..
P.#..#.F
..#..#..
..#..#..
..####..

```
produced the following console output:
=================================
line 53 : section "COLLISIONLAYERS" is out of order, must follow  "SOUNDS" (or it could be that the section "SOUNDS"is just missing totally.  You have to include all section headings, even if the section itself is empty).
line 63 : Name "player", referred to in a rule, does not exist.
line 63 : Name "gem", referred to in a rule, does not exist.
line 63 : Name "background", referred to in a rule, does not exist.
line 65 : Name "player", referred to in a rule, does not exist.
line 65 : Name "finish", referred to in a rule, does not exist.
too many errors, aborting compilation
Errors detected during compilation; the game may not work correctly.
Return a repaired version of the code that addresses these errors. Return your code in full, inside a ```plaintext code block.