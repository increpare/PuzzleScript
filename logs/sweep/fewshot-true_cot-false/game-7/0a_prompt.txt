SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title 2D Whale World
author increpare
homepage www.increpare.com

background_color orange
text_color darkblue

color_palette mastersystem

run_rules_on_level_start
require_player_movement

(
    
This game is a port of the Whale section of my puzzle game English Country Tune (www.englishcountrytune.com), in only 8 lines of code.

)

========
OBJECTS
========

Background
blue

Void
orange

Player
lightblue

Whale
brown
00000
00000
00000
00000
00000

Wall
black
00000
0...0
0...0
0...0
00000

HBeam
yellow
.....
.....
0.0.0
.....
.....

VBeam
yellow
..0..
.....
..0..
.....
..0..

=======
LEGEND
=======

Beam = HBeam or VBeam
. = Background
# = Wall
P = Player
W = Whale
0 = Void

=========
SOUNDS
=========

whale destroy 62981708
player move 69405107
whale move 32823307
endlevel 99636708
restart 92555303
startgame 60661308
CloseMessage 123434
ShowMessage 123434

================
COLLISIONLAYERS
================

Background
void
Player, Wall, Whale
HBeam
VBeam

======
RULES
======

(While we allow whales to move onto the void, player's aren't)
[ > player | void ] -> [ player | void ] 

(Beams detect motion)
horizontal [ > Player | VBeam ] -> [ > Player | > VBeam ] 
vertical [ > Player | HBeam ] -> [ > Player | > HBeam ] 

(If beams detected motion, transfer that to the whales)
[ Whale | ... | perpendicular Beam ] -> [ perpendicular Whale | ... | perpendicular Beam ] 

(Remove whales, if necessary)
late [ Whale Void ] -> [ Void ] 

(Remove beams)
[ Beam ] -> [ ] 

(Place HVeams and VBeams)
late horizontal [ Whale | ... | ] -> [ Whale | ... | HBeam ] 
late vertical [ Whale | ... | ] -> [ Whale | ... | VBeam ] 

==============
WINCONDITIONS
==============

no Whale

=======
LEVELS
=======

message Push a whale off to free it.

0000000000000000
0########0000000
0.......#0000000
0###.W..###00000
0.........#00000
0#####.##.###000
0000#...#...#000
0000#...#...#000
0000#...#...###0
0000#.P.#.....#0
0000#...#.....#0
0000#####...W##0
0000000000....#0
0000000000#####0
0000000000000000

message level 2 of 8

00000000000
0000####000
000##..##00
0###....##0
0#.......#0
0###.W.###0
000#P...000
000#####000
00000000000

message level 3 of 8

0000000000000000
00###00000000000
00#.#####0000000
00#.#...##000000
00#......#000000
00#..##.#######0
00#..#........#0
00#..#........#0
0##..######...#0
0#........#.W.#0
0##.......#..P#0
00######..#####0
00000000..000000
0000000000000000

message level 4 of 8

0000000000000000
000000#########0
0######.......#0
0.............#0
0.....#.#####.#0
0######.#.....#0
00000##.#...P.#0
00000#........#0
00000##.#.W...#0
000000#.......#0
000000###.#...#0
00000000#######0
0000000000000000

message level 5 of 8

00000000000000000
0000############0
0000#.#........#0
0000#..........#0
0####..###.....#0
0......#.#.....#0
0####..#W#.#W#.#0
0..........#.#.#0
0####.....P###.#0
0...#.#........#0
0##...##########0
00#####0000000000
00000000000000000

message level 6 of 8

00000000000000000
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.#.#.#0
000000000#.....#0
0000000###...###0
0000000#.#...#000
0000000#.#.#.#000
0#######.#.#.#000
0#...........#000
0#.#.W...W...#000
0#...........#000
0#.....P.....#000
0#...........#000
0#############000
00000000000000000

message level 7 of 8

000000000#000000
00000####.####00
0####.........#0
0........#....#0
0####....W....#0
0000#.........#0
0000#.#W.P.W#..#
0####.........#0
0........W....#0
0####....#....#0
00000#........#0
000000########00
0000000000000000

message level 8 of 8

00000000000
0########00
0#...#..#00
0##.....000
0#......#00
0#..WW..##0
0#..WW...#0
0##...P.##0
0#...#.##00
0#######000
00000000000

message all the 2d whales are freed


title BROKEN Rigid Body example
author Anonymous
homepage www.puzzlescript.net

verbose_logging

(

BROKEN Example Game FOR ILLUSTRATION PURPOSES ONLY. DO NOT USE.

Example for
https://www.puzzlescript.net/Documentation/rigidbodies.html#many_many

)

========
OBJECTS
========

Background 
white  

Target 
DarkBlue    

Wall 
DarkGrey

Player
Blue
..0..
..0.0
00000
.000.
.0.0.

Shadow
Black
..0..
0.0..
00000
.000.
.0.0.

( three multi-cells blocks )
Crate 
orange

Chest
green

Box
red

( 1-cell small block )
Small
darkred
.....
.000.
.000.
.000.
.....

( sticky, multicellular block when in contact )
Glue
pink
.000.
00000
00000
00000
.000.

( a flag to know what is allowed move )
Wanna_Move
#ff00ff
.....
.....
..0..
.....
.....

=======
LEGEND
=======

. = Background
# = Wall
P = Player
S = Shadow
* = Crate
+ = Box
% = Chest
o = Small
g = Glue

( blocks that can be moved by the player )
Movable = Crate or Box or Chest or Small or Glue

( all things that can move and push blocks )
Mover = Player or Shadow or Movable 

( things that can stop a movement if they are stationary )
Obstacle = Wall or Mover

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Target
Obstacle
Wanna_Move

======
RULES     
======     

[ > player ] [ stationary shadow ] -> [ > player ] [ < shadow ]

( 1. Propagate movements forward )
[ > Mover | stationary Movable ] -> [ > Mover | > Movable  ]
+ [ > Box    ] [ stationary Box   ] -> [ > Box    ] [ > Box    ]
+ [ > Crate  ] [ stationary Crate ] -> [ > Crate  ] [ > Crate  ]
+ [ > Chest  ] [ stationary Chest ] -> [ > Chest  ] [ > Chest  ]
+ [ moving Glue | stationary Glue ] -> [ moving Glue | moving Glue ]

( 2. Propagate obstructions backwards )
[ > Mover  | stationary Obstacle ] -> [ stationary Mover | Obstacle ]

	(the next lines deal with directional conflicts)
+ [ ^ Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ ^ Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ ^ Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ v Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ v Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ v Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ < Crate | > Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ < Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ < Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

+ [ > Crate | < Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ > Crate | ^ Crate ] -> [ stationary Crate | stationary Crate ] 
+ [ > Crate | v Crate ] -> [ stationary Crate | stationary Crate ] 

(also one space removed)
+ [ > Mover | |  < Mover ] -> [ stationary Mover | |  < Mover ] 

+ [ > Crate  ] [ stationary Crate ] -> [ stationary Crate ] [ Crate ]
+ [ > Box    ] [ stationary Box   ] -> [ stationary Box   ] [ Box   ]
+ [ > Chest  ] [ stationary Chest ] -> [ stationary Chest ] [ Chest ]
+ [ moving Glue | stationary Glue ] -> [ stationary Glue | Glue ]

( 3. remove all movement, keep a flag )
[ > Movable ] -> [ Movable wanna_move ]

( 4. propagate movement only on wanna_move things )
(    ie redo step 1 but with WANNA_MOVE added to the first line below )
[ > Mover  | stationary Movable WANNA_MOVE ] -> [ > Mover | > Movable ]
+ [ > Box   ] [ stationary Box   ] -> [ > Box   ] [ > Box   ]
+ [ > Crate ] [ stationary Crate ] -> [ > Crate ] [ > Crate ]
+ [ > Chest ] [ stationary Chest ] -> [ > Chest ] [ > Chest ]
+ [ moving Glue | stationary Glue ] -> [ moving Glue | moving Glue ]

( 5. cleanup, remove flag )
[ wanna_move ] -> [ ]


==============
WINCONDITIONS
==============

=======     
LEVELS
=======

#########
#.......#
#..p...p#
#.......#
#.......#
#..***..#
#.......#
#s...S..#
#.......#
#########

#########
#.......#
#.......#
#.......#
#...s...#
#..+++..#
#...p...#
#.......#
#.......#
#########


title Cake Monsters
author Matt Rix
homepage www.magicule.com
color_palette whitingjp
text_color #FF5588
background_color #050A0A
noaction
youtube Z6ih1aKeETk (tycho!)

========
OBJECTS
========

(-----------------------)
(----MONSTER COLOURS----)
(-----------------------)

RedMon
#D8144D #B00F3F BLACK WHITE
00000
020.3
000..
00000
1..1.

YellowMon
#F3F333 #C7C829 BLACK WHITE
00000
020.3
000..
00000
1..1.

BlueMon
#0366E3 #0A52BB BLACK WHITE
00000
020.3
000..
00000
1..1.

PurpleMon
#9E14E2 #800FBA BLACK WHITE
00000
020.3
000..
00000
1..1.

OrangeMon
#E68A25 #BB711E BLACK WHITE
00000
020.3
000..
00000
1..1.

GreenMon
#1CED55 #15C346 BLACK WHITE
00000
020.3
000..
00000
1..1.

TrashMon
#7C6953 #6D5239 BLACK WHITE
00000
020.3
000..
00000
1..1.


(------------------------)
(------CAKE COLOURS------)
(------------------------)

RedCake
#D8144D #B00F3F
.000.
00000
00000
10001
.111.

YellowCake
#F3F333 #C7C829
.000.
00000
00000
10001
.111.

BlueCake
#0366E3 #0A52BB
.000.
00000
00000
10001
.111.


PurpleCake
#9E14E2 #800FBA
.000.
00000
00000
10001
.111.

OrangeCake
#E68A25 #BB711E
.000.
00000
00000
10001
.111.

GreenCake
#1CED55 #15C346
.000.
00000
00000
10001
.111.

TrashCake
#7C6953 #6D5239
.000.
00000
00000
10001
.111.

(-----------------------)
(------OTHER STUFF------)
(-----------------------)

Destroyer
#001111 #223333 #384949
.222.
20202
12021
10101
.111.

Background
#152020 #192525
01101
10110
01101
11010
01010


Wall
#334444 #384949 #445555 #475959 #4A6B6B
34443
23332
12221
01110
00000

Blackness
#050A0A


=======
LEGEND
=======


. = Background
_ = Blackness
# = Wall
X = Destroyer

R = RedMon
Y = YellowMon
B = BlueMon
P = PurpleMon
O = OrangeMon
G = GreenMon
T = TrashMon

Monster = RedMon or YellowMon or BlueMon or PurpleMon or OrangeMon or GreenMon or TrashMon
Player = Monster

PrimaryMon = RedMon or YellowMon or BlueMon
SecondaryMon = PurpleMon or OrangeMon or GreenMon

(each cake char is the next letter in the alphabet after the monster char)
(except for orange, sadly)
S = RedCake
Z = YellowCake
C = BlueCake
Q = PurpleCake
A = OrangeCake
H = GreenCake
U = TrashCake

Cake = RedCake or YellowCake or BlueCake or PurpleCake or OrangeCake or GreenCake or TrashCake

=======
SOUNDS
=======

sfx0 8478107 (move)
sfx1 18590508 (eat other monster)
sfx2 61437309 (eat cake)
sfx3 89161102 (monster destroyed)
startlevel 563108
endlevel 76028308
undo 82948709
restart 22851101

================
COLLISIONLAYERS
================

Background
Blackness, Wall, Destroyer
Monster,Cake



======
RULES
======

(------------------------)
(----MONSTER MOVEMENT----)
(------------------------)

(movement sound)
[ > Monster ] -> [ > Monster ] sfx0

(stop the monster if it hits a wall)
[ > Monster | Wall ] -> [ Monster | Wall]

(if monster hits a destroyer, remove the monster)
[ > Monster | Destroyer ] -> [ | Destroyer] sfx3

(monster eats cakes of the same color)
[ > RedMon | RedCake] -> [ | RedMon] sfx2
[ > BlueMon | BlueCake] -> [ | BlueMon] sfx2
[ > YellowMon | YellowCake] -> [ | YellowMon] sfx2
[ > PurpleMon | PurpleCake] -> [ | PurpleMon] sfx2
[ > OrangeMon | OrangeCake] -> [ | OrangeMon] sfx2
[ > GreenMon | GreenCake] -> [ | GreenMon] sfx2
[ > TrashMon | TrashCake] -> [ | TrashMon] sfx2

(stop the monster if it hits a cake of a different color)
(note: this is necessary to make sure the monster is marked as stationary)
[ > RedMon | Cake no RedCake] -> [ RedMon | Cake no RedCake]
[ > BlueMon | Cake no BlueCake] -> [ BlueMon | Cake no BlueCake]
[ > YellowMon | Cake no YellowCake] -> [ YellowMon | Cake no YellowCake]
[ > PurpleMon | Cake no PurpleCake] -> [ PurpleMon | Cake no PurpleCake]
[ > OrangeMon | Cake no OrangeCake] -> [ OrangeMon | Cake no OrangeCake]
[ > GreenMon | Cake no GreenCake] -> [ GreenMon | Cake no GreenCake]
[ > TrashMon | Cake no TrashCake] -> [ TrashMon | Cake no TrashCake]

(--------------------------)
(---MONSTER COLOR MIXING---)
(--------------------------)

(red+blue = purple)
[ > BlueMon | stationary RedMon] -> [ | PurpleMon] sfx1
[ > RedMon | stationary BlueMon] -> [ | PurpleMon] sfx1

(red+yellow = orange)
[ > RedMon | stationary YellowMon] -> [ | OrangeMon] sfx1
[ > YellowMon | stationary RedMon] -> [ | OrangeMon] sfx1

(blue+yellow = green)
[ > BlueMon | stationary YellowMon] -> [ | GreenMon] sfx1
[ > YellowMon | stationary BlueMon] -> [ | GreenMon] sfx1

(primary color + secondary color = brown aka trash)
[ > PrimaryMon | stationary SecondaryMon] -> [ | TrashMon] sfx1
[ > SecondaryMon | stationary PrimaryMon] -> [ | TrashMon] sfx1

(green+orange = trash)
[ > GreenMon | stationary OrangeMon] -> [ | TrashMon] sfx1
[ > OrangeMon | stationary GreenMon] -> [ | TrashMon] sfx1

(purple+orange = trash)
[ > PurpleMon | stationary OrangeMon] -> [ | TrashMon] sfx1
[ > OrangeMon | stationary PurpleMon] -> [ | TrashMon] sfx1

(green+purple = trash)
[ > GreenMon | stationary PurpleMon] -> [ | TrashMon] sfx1
[ > PurpleMon | stationary GreenMon] -> [ | TrashMon] sfx1

(trash+anything = trash)
[ > TrashMon | stationary Monster] -> [ | TrashMon] sfx1
[ > Monster | stationary TrashMon] -> [ | TrashMon] sfx1

(monster + monster of the same color = monster of the same color)
[ > Monster | stationary Monster] -> [ | Monster] sfx1


==============
WINCONDITIONS
==============

No Cake


=======
LEVELS
=======


message WELCOME TO CAKE MONSTERS!
message MONSTERS LIKE EATING CAKE

_______
#######
#.....#
#.r...#
#...s.#
#.....#
#######
_______
(diff 0)

message YOU MOVE ALL OF THE MONSTERS

######_######
#....#_#z...#
#.r..#_#....#
#..s.#_#....#
#....#_#...y#
######_######
_____________
######_######
#.c..#_#....#
#....#_#...h#
#..b.#_#g...#
#....#_#....#
######_######
(diff 0)

message MONSTERS ONLY LIKE THEIR OWN CAKE
message REMEMBER: Z TO UNDO, R TO RESTART
_________
#########
#r.z....#
#######.#
#.......#
#.sy....#
#########
_________
(diff 1)

message MONSTERS MIX WHEN THEY GET EATEN
_________
#########
#.......#
#.#####.#
#.r.q.b.#
#.#####.#
#.......#
#########
_________
(diff 1)


message BROWN + ANY COLOR = BROWN
__________
##########
#........#
#.rybpog.#
#........#
#........#
#.szcqah.#
#........#
#........#
#.uuuuuu.#
#........#
##########
__________
(diff 1)


message HAVE FUN!
############
#y........c#
#b........z#
#####..#####
____#..#____
____#..#____
____#hh#____
____####____
(diff 1)

(----------------------------)


_____
#####
#RCQ#
#.CS#
#Q.B#
#####
_____
(diff 2)




______
######
#R...#
#B...#
#Q.QQ#
#CSCS#
######
______
(diff 2)

_______
#######
#R.H.B#
#.....#
#.....#
#Y.Q.B#
#######
_______
(diff 2)

_______
#######
#CCHCB#
#.....#
#YZHZZ#
#######
_______
(diff 2)


______
######
#R..B#
#S.C.#
#.A.C#
#Y.C.#
######
______
(diff 2)


message PIECE OF CAKE, RIGHT?


#########
#ccccccc#
#bcccccc#
######cc#
_____#ch#
######zz#
#yzzzzzz#
#yzzzzzz#
######zz#
_____#sa#
######ss#
#rssssss#
#sssssss#
#########
(diff 3, fun)

_______
#######
#R.B.Y#
#Y.B.R#
#R.B.Y#
#Y.B.R#
#AHQHA#
#######
_______
(diff 3)


_______
#######
#AR.BA#
#.#.#.#
#H...H#
##.A.##
#HY#YH#
#######
_______
(diff 3)



message X TILES DESTROY MONSTERS
_________
_###_###_
#...#...#
#.q.x.p.#
#...x...#
_#..x..#_
__#...#__
___#.#___
____#____
_________
(diff 0, destroyerz)


_____
#####
#RAR#
#RXY#
#YAY#
#####
_____
(diff 1, destroyerz)

______
######
#BHHB#
#YXXY#
#YXXY#
#BHHB#
######
______
(diff 1 destroyerz)

_______
#######
#RQXQR#
#SQXQS#
#BQXQB#
#######
_______
(diff 1 destroyerz)

___________
#####_#####
#sss#_#qqq#
#sss###qqq#
#x.......x#
##x.rxb.x##
#x.......x#
#qqq###ccc#
#qqq#_#ccc#
#####_#####
___________
(diff 2 destroyerz)

___________
###########
#...#q#.b.#
#sxr#.#xx.#
#.x.....c.#
###########
___________
(diff 3 destroyerz)



message YOU'RE CAKING THIS LOOK EASY!

______
######
#RZSZ#
#YSZS#
#..SZ#
#..ZS#
######
______
(diff 3)


#######
#Y#B#Y#
#.#R#.#
#.#.#.#
#.....#
#.###.#
#HHAHH#
#######
(diff 3, fun!)



####__####
#qc####cb#
#c......c#
##.####.##
_#.#xx#.#_
_#.c.r#.#_
##.####.##
#c......c#
#qc####cq#
####__####
(diff 3)




_#########_
_#rrr.sss#_
_#.......#_
_#yyy.zzz#_
_#.......#_
##bbb.ccc##
#.........#
#.q..a..h.#
#.........#
###########

______
######
#RA.Y#
#....#
#HH..#
#SBCY#
######
______
(diff 4)

message LET'S CAKE IT TO THE NEXT TIER!


#############
#...#.h.#...#
#.r.#...#.y.#
#...c#c#s...#
###c.....s###
#..#.#h#.#..#
#z.h.z.c.s.c#
#..#.#s#.#..#
###......z###
#....#z#z...#
#.b.#...#.g.#
#...#.s.#...#
#############
(diff 3, easy but fun)


_____
#####
#B.B#
#RRY#
#.Q.#
#S.S#
#CHC#
#####
_____
(diff 5 - fun!)


______
######
#HYBH#
#YBYB#
#BBBB#
#HHHH#
######
______
(diff 4)




______
######
#BR.Y#
#..A.#
#SCZA#
#CSZA#
######
______
(diff 4)




______
######
#CZG.#
#ZCR##
###..#
#SHY##
#HSB.#
######
______
(diff 5 - very fun!)


message YOU'RE GETTING BATTER!

______
######
#YYYY#
#...R#
#AAAA#
#ZZZZ#
######
______
(diff 5 - fun but surprisingly hard)


_______
#######
#Y..YA#
#.BB.H#
#R..RQ#
#Y..YH#
#######
_______
(diff 4)


message ICING ON THE CAKE!

______
######
#ZBBZ#
#YBYB#
#....#
#ZHCZ#
######
______
(diff 5)




_______
#######
#A.S.A#
#.Z.Z.#
#SYRYS#
#.ZYZ.#
#A.S.A#
#######
_______
(diff 5 - not too hard)



message WILL YOU CAKE IT OUT ALIVE?
______
######
#ZZZZ#
#SSSS#
#CCCC#
#YRB.#
######
______
(diff 6 - fun but tricky)




message THE FINAL CHALLENGE!
message DOUGH YOU HAVE WHAT IT CAKES?
_____
#####
#AYA#
#...#
#CBC#
#SZY#
#RZS#
#CBC#
#...#
#HOH#
#####
_____
(diff 8 - a pretty tough one)



message WELL, YOU REALLY TOOK THE CAKE!
message CONGRATS, YOU WIN! :)




title Simple Block Pushing Game
author David Skinner
homepage www.puzzlescript.net

========
OBJECTS
========

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Crate
orange
00000
0...0
0...0
0...0
00000

=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = Crate
@ = Crate and Target
O = Target

=======
SOUNDS
=======

Crate move 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, Crate

======
RULES
======

[ > Player | Crate ] -> [ > Player | > Crate ] 

==============
WINCONDITIONS
==============

all Target on Crate

=======
LEVELS
=======

####..
#.O#..
#..###
#@P..#
#..*.#
#..###
####..

######
#....#
#.#P.#
#.*@.#
#.O@.#
#....#
######


title neko puzzle
author lexaloffle
homepage www.lexaloffle.com

(

An inadequate but illustrative demake of one of my favourite puzzle games ever, by the extremely amicable Lexaloffle, and with his permission.

www.lexaloffle.com/neko.htm

The game proper has a lot of magic and love in it.

)

========
OBJECTS
========

Background .
darkblue

Fruit F
red green lightred
..1..
.000.
00020
00000
.000.

Player P
gray white
.1.1.
10101
11111
.111.
00.00

=======
LEGEND
=======

=========
SOUNDS
=========

endlevel 97301508
startgame 97301508
endgame 97301508

================
COLLISIONLAYERS
================

Background
Player, Fruit

======
RULES
======

[ > Player | ... | Fruit ] -> [ | ... | Player ] 

(if you're not sure what this line does, try removing it, and see what happens)
[ > Player ] -> [ Player ] 

==============
WINCONDITIONS
==============

no Fruit

=======
LEVELS
=======

message level 1 of 10

......F.
........
F......F
......FF
........
........
P.......

message level 2 of 10

........
....P...
...F.F..
........
........
..F.FF..
........

message level 3 of 10

........
.FF....F
........
........
F...P...
........
........
F.F.....

message level 4 of 10

....F..F
........
.......F
F.......
P.......
........
F...F...

message level 5 of 10

........
....F.P.
F.F.....
........
F...F...
..F.F...
........

message level 6 of 10

F.....F.
........
........
FF..F...
F.....F.
........
.P......

message level 7 of 10

...FP..F
F.F.....
F......F
........
........
..F.....
........

message level 8 of 10

..F..P..
........
........
.FFF....
F..F..F.
........
........

message level 9 of 10

....F..F
........
.F..F...
........
.F.P..F.
.F......
........

message level 10 of 10

....F.F.
........
.F..F..F
...F..F.
.......F
...FP...
........

message congratulations!


title Heroes of Sokoban
author Jonah Ostroff
text_color yellow
key_repeat_interval 0.25

========
OBJECTS
========

Background
#AAAAAA #DDDDDD
00000
00100
00000
00010
00000

Goal
Brown Yellow
.000.
00000
00010
00000
00000

Wall
Darkgrey #222222
01000
11111
00010
00010
11111

Fighter
#FF4444 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

Wizard
#2266FF Pink
.000.
.010.
00000
.000.
00000

Thief
#00BB00 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.

SFighter
#880000 Pink DarkBrown
.000.
.111.
00000
.000.
.2.2.

SWizard
#000088 Pink
.000.
.010.
00000
.000.
00000

SThief
#006600 Pink DarkBrown
.000.
.010.
00000
.0.0.
.0.0.


Crate
Orange #552200
.111.
10001
10001
10001
.111.

YellowSwitch
Yellow Black
.....
.111.
.101.
.111.
.....

YellowOpen
Yellow
0...0
.....
.....
.....
0...0

YellowDoor
Yellow #AA7722
01010
10001
00000
10001
01010

PurpleSwitch
#6611CC Black
.....
.111.
.101.
.111.
.....

PurpleDoor
#6611CC #220088
01010
10001
00000
10001
01010

PurpleOpen
#6611CC
0...0
.....
.....
.....
0...0

Temp
Pink

ShadowDoor
Purple

=======
LEGEND
=======

Player = Fighter or Wizard or Thief
SPlayer = Swizard or Sthief or SFighter
Hero = Player or Splayer
ClosedDoor = PurpleDoor or YellowDoor
OpenDoor = YellowOpen or PurpleOpen
Switch = PurpleSwitch or YellowSwitch
Moveable = Crate or SPlayer
Static = Wall or ClosedDoor
Weighing = Crate or Player or SPlayer
. = Background
# = Wall
F = Fighter
W = Wizard
T = Thief
1 = SFighter
2 = SThief
3 = SWizard
* = Crate
G = Goal
[ = YellowDoor
] = PurpleDoor
{ = YellowSwitch
} = PurpleSwitch

=======
SOUNDS
=======

Moveable move 82056307
Sfx0 21221308
Endlevel 36315908
Sfx1 66399906
Sfx2 92172900
Sfx3 15129100
EndGame 86793500

================
COLLISIONLAYERS
================

Background
Temp
Goal, Switch, OpenDoor, ShadowDoor
ClosedDoor, Hero, Crate, Wall

======
RULES
======

[ >  Fighter | Moveable ] -> [  >  Fighter | > Moveable  ]
[ > Moveable | Moveable ] [ Fighter] -> [ > Moveable | > Moveable ] [ Fighter]

[ < Thief | Moveable ] -> [ < Thief | < Moveable ]

[ > Wizard ] -> [ Wizard > Temp]
[ > Temp | no Moveable no Static] -> [ | > Temp]
[ > Temp | Static] [Wizard] -> [ | Static ] [> Wizard]
[ > Temp | Moveable ] [Wizard] -> [ | Wizard Sfx0] [Moveable]

Late [Temp] -> []

[ Action Fighter] [SThief] -> [SFighter] [Thief Sfx1]
[ Action Thief] [SWizard] -> [SThief] [Wizard Sfx1]
[ Action Wizard] [SFighter] -> [SWizard] [Fighter Sfx1]
[ Action Fighter] [no SThief] [SWizard] -> [SFighter] [no SThief] [Wizard Sfx1]
[ Action Thief] [no Swizard] [SFighter] -> [SThief] [no SWizard] [Fighter Sfx1]
[ Action Wizard] [no SFighter] [SThief] -> [SWizard] [no SFighter] [Thief Sfx1]

late [Weighing  YellowSwitch] [YellowDoor] -> [Weighing  YellowSwitch] [ShadowDoor]
late [YellowSwitch no Weighing] [YellowOpen] -> [YellowSwitch] [YellowDoor sfx2]
late [YellowSwitch no Weighing] [ShadowDoor] -> [YellowSwitch] [YellowDoor]
late [ShadowDoor] -> [YellowOpen sfx3]

late [Weighing PurpleSwitch] [PurpleDoor] -> [Weighing PurpleSwitch] [ShadowDoor]
late [PurpleSwitch no Weighing] [PurpleOpen] -> [PurpleSwitch] [PurpleDoor sfx2]
late [PurpleSwitch no Weighing] [ShadowDoor] -> [PurpleSwitch] [PurpleDoor]
late [ShadowDoor] -> [PurpleOpen sfx3]

==============
WINCONDITIONS
==============

All Hero on Goal
All Goal on Hero

=======
LEVELS
=======

Message Walk to the exit.

#############
#...........#
#.F.......G.#
#...........#
#############

Message Red warrior pushes blocks.

#############
#...#.*.#.*.#
#.F...*.**G.#
#...#.*.#.*.#
#############

Message Hold down switches to open doors.

#############
#...#...#...#
#.F.*.{.#.G.#
#...#...[...#
#############

Message Press multiple switches at once.

#########
#.....#G#
#.#*..#[#
#.**.F..#
#.......#
#.{.{.{.#
#.......#
#########

Message Green thief pulls blocks.

#############
#...#..*#...#
#.T.*.{.#.G.#
#...#..*[...#
#############

#########
#.....#G#
#.#*..#[#
#.**.T..#
#.......#
#.{.{.{.#
#.......#
#########

#########
#...##G.#
#.#..##[#
#....{..#
#.#.#.#.#
#..*.T..#
#########

Message Blue wizard teleports to blocks.

#############
#...*.{.#...#
#.W.*.{.[.G.#
#...#...#...#
#############

#########
#.....#G#
#.#*..#[#
#.**.W..#
#.......#
#.{.{.{.#
#.......#
#########

#######
#W#G#*#
#.#.#.#
#*...*#
#.###.#
#*.*..#
#######

Message Press action to switch heroes.

#############
#...#...#...#
#.F...}.[.G.#
#...#...#...#
#############
#...#...#...#
#.3.].{...G.#
#...#...#...#
#############

Message Heroes can move each other.

###########
#*#..##G.G#
#.#.2.#...#
#.....#..##
#W###.*..*#
###########

###########
#F.*.#.*#{#
#..#...*..#
####...*.*#
#..#.##[###
#2...#*.GG#
###########

#############
#.###########
#*....{....3#
#.####.######
#.#..#.###..#
#.#G....[].G#
#.#..#.###..#
#.####.######
#.....}....T#
#############

#############
##G.#F#*#...#
#*..[.....{.#
##G.#3###...#
#############

###########
#W..{...[*#
#######.#[#
#G#G#G#.#2#
#.......#1#
###########

#########
#*......#
#######.#
#F23.]#.#
#..##G#.#
#..#GG#.#
##.####.#
#.......#
##}####.#
#########

#############
#...#G.G#...#
#.*.#F23#.G.#
#...#...#...#
##[###.###[##
#...#...#...#
#.{...{...{.#
#...#...#...#
#############

#######
#G***F#
#*****#
#G***2#
#*****#
#G***3#
#######

########
#3..G[*#
########
#F**G{{#
########
#2.[G..#
########

#############
#...#...#...#
#F#.*.#.*.#3#
#...#...#...#
######.######
#...#...#####
#2#.*.#...}*#
#...#...#####
######.######
#G..#...#...#
#G..].#...#.#
#G..#...#...#
#############

#############
#F.........G#
#############
#T.........G#
#############
#W.........G#
#############
Message Thanks for playing!


USER PROMPT:
Output the code for a complete PuzzleScript game. Return your code in full, inside a ```plaintext code block.