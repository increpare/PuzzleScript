SYSTEM PROMPT:
You are a game designer, familiar with the PuzzleScript game description language. Here are some example games, for inspiration (do not reproduce these games exactly):

title Des Poseidons Dreizack
author Stephen Lavelle
homepage www.increpare.com

text_color #e7cf5c
background_color #041646

noaction

run_rules_on_level_start

again_interval 0.1
(verbose_logging)


(flickscreen 14x13)

========
OBJECTS
========

Background
blue #204ec5
00000
01000
00000
00010
00000

smrocks k
brown darkbrown 
.1.1.
10101
.1.1.
10101
.1.1.

teleport T
lightblue blue darkblue
10101
01210
12221
01210
10101

Target
darkblue transparent 
01110
1.0.1
10001
1.0.1
01110

Wall
green lightgreen #2d6d0c
00000
00010
00000
01000
00000

wallalt "
green lightgreen #2d6d0c
00000
00000
00000
01000
00000


wallalt2 '
green lightgreen #2d6d0c
00000
00010
00000
00000
00000

coast_u
lightblue
.0.0.
.....
.....
.....
.....

coast_d
lightblue
.....
.....
.....
.....
.0.0.

coast_l
lightblue
.....
0....
.....
0....
.....

coast_r
lightblue
.....
....0
.....
....0
.....

endhand x
pink
0.0.0
.....
0...0
.....
0.0.0


Player
brown orange yellow lightblue
2.2.2
2.2.2
22222
..1..
.313.

underplayer
lightblue
..0..
.....
.....
.....
.....

magnet
lightblue blue
.0000
0....
0.000
0...0
.000.


flowers 
darkgreen brown
.000.
00000
.000.
..1..
..1..

hinge H
orange green darkgray 
10001
02220
02220
02220
10001

door_l L
pink darkgray transparent
.2.2.
0000.
11110
0000.
.2.2.


door_r R
pink darkgray transparent
.2.2.
.0000
01111
.0000
.2.2.



door_u U
pink darkgray transparent
.010.
20102
.010.
20102
..0..

door_d D
pink darkgray transparent
..0..
20102
.010.
20102
.010.


door_dl 1
pink darkgray
.....
..00.
.010.
010..
10...


door_dr 2
pink darkgray
.....
.00..
.010.
..010
...01


door_ul 3
pink darkgray
10...
010..
.010.
..00.
.....

door_ur 4
pink darkgray
...01
..010
.010.
.00..
.....

ul
orange
0....
.....
.....
.....
.....

ur
orange
....0
.....
.....
.....
.....


dl
orange
.....
.....
.....
.....
0....


dr
orange
.....
.....
.....
.....
....0

wu
green lightgreen
10101
.....
.....
.....
.....

wd
green lightgreen
.....
.....
.....
.....
10101

wl
green lightgreen
1....
0....
1....
0....
1....

wr
green lightgreen
....1
....0
....1
....0
....1

suck_d
lightblue
.....
.....
.0.0.
..0..
.....


suck_u
lightblue
.....
..0..
.0.0.
.....
.....


suck_r
lightblue
.....
..0..
...0.
..0..
.....


suck_l
lightblue
.....
..0..
.0...
..0..
.....

temp
transparent

A 
transparent

S
lightblue
.0.0.
0.0.0
.0.0.
0.0.0
.0.0.

nopull
transparent

spawned 
transparent


ip1 §
#ffff05 #ffa33b
0.0.0
0.0.0
00000
..1..
..1..

ip2 ±
#8e4833
.....
.....
....0
....0
....0

ip3 `
#8e4833 #dbc297
.....
00000
11111
1.1.1
11111

ip4 ~
#8e4833
.....
.....
0....
0....
0....

5
#ffa33b #dbc297
..0..
.111.
.111.
.111.
..011

6
#8e4833 #dbc297
....0
....0
.....
.....
....1

7
#8e4833 #dbc297
00000
01110
00000
00000
10001

8
#8e4833 #dbc297
0....
.....
.....
.....
1....

9
#ffa33b #dbc297
..0.1
.....
.....
.....
.....

0
#dbc297 white
0..00
00000
.00.0
....1
....1

bla !
#dbc297 white
00000
00000
00000
10000
11100

blo @
#dbc297
00...
000..
000..
0.00.
..00.


(BLANK)

ble £
white
....0
....0
....0
...00
...00

ble1 $
white #dbc297
00000
00000
00000
00001
00011

ble2 \
#dbc297 white
..00.
1.00.
1000.
1000.
100..

(SKIP)

ble3 Y
white #dbc297
...00
...00
....1
....1
....1

ble4 &
white #dbc297
00111
1.111
1..11
1..11
1..11

ble5 *
white
0....
.....
.....
.....
.....


ble6 -
#dbc297
.....
...00
.....
.....
.....

ble7 =
#dbc297
0..00
0.000
.....
.....
.....




=======
LEGEND
=======

. = Background
# = Wall
P = Player
M = magnet
O = Target


walls = wall or wallalt or wallalt2
ortho = door_u or door_d or door_l or door_r
diagonal = door_ul or door_ur or door_dl or door_dr
Door = ortho or diagonal
doorpart = door or hinge
obstacle = walls or player or hinge or magnet or door or smrocks
thick = wall or hinge or magnet or door or teleport


fixture = wall or hinge 

pixel = ul or ur or dl or dr
walltype = wall or wallalt or wallalt2

fillwalltype = wall  or hinge

suck = suck_u or suck_d or suck_l or suck_r

coast = coast_u or coast_d or coast_l or coast_r

verge = wl or wr or wu or wd
decoration = coast or verge 

% = flowers and wall

image = ip1 or ip2 or ip3 or ip4 or 5 or 6 or 7 or 8 or 9 or 0 or bla or blo or ble or ble1 or ble2 or ble3 or ble4 or ble5 or ble6 or ble7 


=======
SOUNDS
=======

sfx0 1415300 (swing)
sfx1 7555504 (cantmove)
sfx2 16800907 (whirlpool move)
sfx3 77044105 (teleport)
sfx4 43993702 (whirlpool destroy)
sfx5 43993702 (whirlpool create)
endlevel 30657706

player cantmove  7555504

================
COLLISIONLAYERS
================

Background
coast_u
coast_d
coast_l
coast_r
A
Target
S
underplayer
teleport
endhand 
Player, Wall, wallalt, wallalt2, magnet, hinge, door, smrocks
flowers
ul
ur
dl
dr
wu
wd
wl
wr
temp
suck_u
suck_d
suck_l
suck_r
nopull
spawned
image

======
RULES
======

[ player teleport no spawned | ... | teleport ] -> [ teleport | ... | player teleport spawned ] sfx3

[ teleport magnet ] -> [ ] sfx4

[decoration]->[]
[underplayer]->[]
[A]->[]
[temp]->[]
[suck]->[]
[nopull]->[]

right [ walls | ]->[walls | coast_l ]
left  [ walls | ]->[walls | coast_r ]
down  [ walls | ]->[walls | coast_u ]
up    [ walls | ]->[walls | coast_d ]



up [ walls | no walltype ] -> [ walls wu | ]
down [ walls | no walltype ] -> [ walls wd | ]
left [ walls | no walltype ] -> [ walls wl | ]
right [ walls | no walltype ] -> [ walls wr | ]

[pixel]->[]


[ > magnet | door ] -> cancel



[ > Player | magnet  ] -> [ > Player | > magnet  ]

[ > magnet | no obstacle ] -> [ | magnet ]  sfx2
+ [ > player | no obstacle ] -> [ | player  ] 
+ [ > player | no obstacle ] -> [ | player  ] 


[player no spawned] [ spawned] -> [player] []

[ magnet ] -> [ magnet suck_u suck_d suck_l suck_r ]

up [ suck_d | no thick ] -> [ suck_d | suck_d ]
down [ suck_u | no thick ] -> [ suck_u | suck_u ]
left [ suck_r | no thick ] -> [ suck_r | suck_r ]
right [ suck_l | no thick ] -> [ suck_l | suck_l ]


[S]->[]


up [ suck_d | door | no suck_u ]    -> [ suck_d | down door S | ]


down [ suck_u | door S | no suck_d ]  -> [ suck_u | stationary door S | ]
down [ suck_u | door no S | no suck_d ]  -> [ suck_u | up door S | ]


left [ suck_r | door S | no suck_l ]  -> [ suck_r | stationary door S | ]
left [ suck_r | door no S | no suck_l ]  -> [ suck_r | right door S | ]


right [ suck_l | door S | no suck_r ] -> [ suck_l | stationary door S | ]
right [ suck_l | door no S | no suck_r ] -> [ suck_l | left door S | ]

[ > player | door no S ] -> [ > player | > door ]

[s]->[]

up    [ suck_d | door ]    -> [ suck_d | door S ]
down  [ suck_u | door ]    -> [ suck_u | door S ]
left  [ suck_r | door ]    -> [ suck_r | door S ]
right [ suck_l | door ]    -> [ suck_l | door S ]


([ > player | > door S ] -> [ > player | > door ])


(push ortho doors)

up    [ up    door_l | no obstacle ] -> [ | door_dl ] sfx0
up    [ up    door_r | no obstacle ] -> [ | door_dr ] sfx0
down  [ down  door_l | no obstacle ] -> [ | door_ul ] sfx0
down  [ down  door_r | no obstacle ] -> [ | door_ur ] sfx0
left  [ left  door_u | no obstacle ] -> [ | door_ur ] sfx0
left  [ left  door_d | no obstacle ] -> [ | door_dr ] sfx0
right [ right door_u | no obstacle ] -> [ | door_ul ] sfx0
right [ right door_d | no obstacle ] -> [ | door_dl ] sfx0

(push diag doors)
up [ up door_ul | no obstacle ] -> [ | door_l ] sfx0
up [ up door_ur | no obstacle ] -> [ | door_r ] sfx0
left [ up door_dl no S | no obstacle ] -> [ | door_d ] sfx0
right [ up door_dr no S | no obstacle ] -> [ | door_d ] sfx0

left [ down door_ul no S | no obstacle ] -> [ | door_u ] sfx0
right [ down door_ur no S | no obstacle ] -> [ | door_u ] sfx0
down [ down door_dl | no obstacle ] -> [ | door_l ] sfx0
down [ down door_dr | no obstacle ] -> [ | door_r ] sfx0

left [ left door_ul | no obstacle ] -> [ | door_u ] sfx0
up [ left door_ur no S | no obstacle ] -> [ | door_r ] sfx0
left [ left door_dl | no obstacle ] -> [ | door_d ] sfx0
down [ left door_dr no S | no obstacle ] -> [ | door_r ] sfx0

up [ right door_ul no S | no obstacle ] -> [ | door_l ] sfx0
right [ right door_ur | no obstacle ] -> [ | door_u ] sfx0
down [ right door_dl no S | no obstacle ] -> [ | door_l ] sfx0
right [ right door_dr | no obstacle ] -> [ | door_d ] sfx0




[ moving door ] -> [ door ] 


late up   [ door_ul | ] -> [ door_ul | dl ]
late left [ door_ul | ] -> [ door_ul | ur ]

late down [ door_dl | ] -> [ door_dl | ul ]
late left [ door_dl | ] -> [ door_dl | dr ]

late up    [ door_ur | ] -> [ door_ur | dr ]
late right [ door_ur | ] -> [ door_ur | ul ]

late down  [ door_dr | ] -> [ door_dr | ur ]
late right [ door_dr | ] -> [ door_dr | dl ]

late [ thick suck ] -> [ thick ]

[player] -> again

late [magnet suck]->[]
late down [ player | ] -> [ player  | underplayer]

late [ magnet target ] -> [ teleport ] sfx5 




==============
WINCONDITIONS
==============

all player on endhand

=======
LEVELS
=======

message Level 1 von 3 : Ausbruch

##########%#%##
#%##...####%##%
####.m.######%#
##.....##...###
##...###.....##
##....##.....##
##.....##....##
###hl..##....##
###..........##
###....#hl...##
###.....#.#####
#########.#####
##....##......#
#.t....#....o.#
#...x..#..p...#
##....##......#
###############

message Level 2 von 3 : Flucht

##################
##%#####.....#####
#####%##.##.2...##
########.##.1h#.##
#....##..##h.##.##
#.p..hh..###.##.##
#....u.3####.#...#
#hl##.######.#.x.#
##.....#.....#...#
#....o.#.t...#####
#..m...#.....#####
#......########%##
##################

message Level 3 von 3 : Fensterrose


#######################
#######.........#######
######...........######
##..##...kkkkk...##..##
#....#...k...k...#....#
#.t..#...k.t.k...#..x.#
#....#...kk.kk...#....#
#....#....2d1....#....#
#..o.#...krhlk...#.t..#
#....#...k...k...#....#
#...##..m........#....#
#.hl.............#....#
#...##....p......#....#
#######.........#######
#######################

............
............
....x.......
............
............
............
............
........p...
............

............
............
....§±`~....
....5678....
....90!@....
.....£$\....
.....Y&*....
.....-=.....
............

message ICH BIN DER POSEIDON


(

#####################
#######.......#######
######.........######
##..##..kkkkk..##..##
#....#..k...k..#....#
#.t..#..k.t.k..#..x.#
#....#..kk.kk..#....#
#....#...2d1...#....#
#..o.#..krhlk..#.t..#
#....#..k...k..#....#
#...##.m.......#....#
#.hl...........#....#
#...##...p.....#....#
#######.......#######
#####################

#############
##.........##
#...........#
#...kkkkk...#
#...k...k...#
#...k.x.k...#
#...kk.kk...#
#....2d1....#
#...krhlk...#
#...k...k...#
#...........#
#..m........#
#....p......#
##.........##
#############


#############
##.........##
#...........#
#...kkkkk...#
#...k...k...#
#...k.x.k...#
#...kk.kk...#
#....2d1....#
#...krhlk...#
#...k...k...#
#...........#
#.m.........#
#...........#
#......p....#
##.........##
#############



###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#...m.........#
#.............#
#.....p.......#
#.............#
#.............#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#.............#
#..........m..#
#.............#
#......p......#
#.............#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#.....2d1.....#
#....krhlk....#
#....k...k....#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

######"########
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k.d.k....#
#....krhlk....#
#...kk.u.k....#
#...kt...k..o.#
#...kkkkkk....#
#..m......m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k.d.k....#
#....krhlk....#
#....k.u.k....#
#....k...k....#
#....k.t.k..o.#
#....kkkkk....#
#...m.........#
#.............#
##.....p.....##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k2d1k....#
#....krhlk....#
#....k........#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....kk.kk....#
#....k2d1k....#
#....krhlk....#
#.............#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#.....4u......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4u......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4.......#
#.............#
#.............#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k...k....#
#....k2d.k....#
#....krh.k....#
#....k4..k....#
#....k.k.k....#
#....k.kkk....#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k.kkk....#
#....k2d......#
#....krh......#
#....k4.......#
#....k........#
#....k........#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

###############
##...........##
#.............#
#.............#
#....kkkkk....#
#....k...k....#
#....k.x.k....#
#....k...k....#
#....k2d.k....#
#....krh.k....#
#....k4u.k....#
#....k.k.k....#
#....k.kkk....#
#...m.....m...#
#.............#
#......p......#
##...........##
###############

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2d.k....
...krh.k....
...k4..k....
...k.k.k....
...k.kkk....
..m.....m...
............
......p.....
............

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2d.k....
...krh.k....
...k4u.k....
...k.k.k....
...k.kkk....
..m.....m...
............
......p.....
............


............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k2..k....
...krh.k....
...k4..k....
...k.k.k....
...k.kkk....
..m.....m...
............
.....p......
............

............
............
............
...kkkkk....
...k...k....
...k.x.k....
...k...k....
...k.d.k....
...krh.k....
...k.u.k....
...k.k.k....
...k.kkk....
..m.....m...
............
.....p......
............

............
............
..kkkkk.....
..k...k.....
..k.x.k.....
..k...k.....
..k.d.k.....
..krh.k.....
..k.u.k.....
..k.k.k.....
..k.kkk.....
............
........m...
............
..........p.
............

##################
#####.......#....#
#####.......#....#
#####..##...#....#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####hlrh#hl.#..rh#
####....#.rh#hl..#
####....#...#....#
#.......#........#
#.m..p..##########
#.......#.........
#########.........

##################
#####.........#..#
#####...mp....#..#
#####..##d....#..#
####h..h#h2...#rh#
####u..u#..h###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####....#.....#..#
#.......#.....#..#
#.......#........#
#.......#........#
##################


###################
####....#.........#
####hlrh#.........#
####....#.........#
####hlrh#.........#
####....#.........#
####hlrh#.........#
####....#.........#
####....#.........#
#.................#
#.m..p............#
#.................#
###################



##################
#................#
#................#
#................#
#................#
#................#
#................#
###.###..........#
#.....#..........#
#.p...#..........#
#.....#..........#
#...m.#..........#
#.....#..........#
##################

##################
#####.........#..#
#####.....pmk.#..#
#####..##d..k.#..#
####h..h#h2.k.#rh#
####u..u#..h###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####h..h#hl...#rh#
####u..u#.rh###..#
####....#.....#..#
#.......#.....#..#
#...kkkk#........#
#.......#........#
##################

##################
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
#................#
##################

)

title Spriteaporter
author increpare
homepage www.puzzlescript.net

========
OBJECTS
========

Temp
black

Background
lightgreen green
11111
01111
11101
11111
10111

Target
darkblue
.....
.000.
.0.0.
.000.
.....

Wall
brown darkbrown
00010
11111
01000
11111
00010

Player
black orange white blue
.000.
.111.
22222
.333.
.3.3.

Sprite
pink blue red
.....
.000.
00100
01110
.202.

=======
LEGEND
=======

. = Background
# = Wall
P = Player
O = Sprite

=======
SOUNDS
=======

sfx0 67117309

================
COLLISIONLAYERS
================

Temp
Background
Target
Player, Wall, Sprite

======
RULES
======

late [ Sprite | ... | Player ] -> [ Temp | ... | Sprite ] 
late [ Temp ] -> [ Player ] 

==============
WINCONDITIONS
==============

=======
LEVELS
=======

#########
#.......#
#....O..#
#.P.....#
#.......#
#.......#
#########


title Gobble Rush!
author Mark Richardson
again_interval 0.05
noaction
require_player_movement
run_rules_on_level_start


========
OBJECTS
========

Background
Black

Exit
White Black
01010
10101
01010
10101
01010

Wall
Brown

Hole
Brown
00000
00.00
0...0
0...0
0...0

Player
Pink Blue Brown Red DarkBlue
.222.
.101.
33333
.444.
44.44

Enemy
LightBrown
.....
0..0.
.00..
0000.
0..0.

Alert
Red
....0
....0
.....
....0
.....

Chicken
#EA3 #FC9 #FEA
.....
2....
.110.
01100
.000.

Lettuce
#6C3 #5A2 #482 #361 #240
.2.2.
24342
12421
01310
.002.

LoS
White
.....
.....
.....
.....
.....

MoveU
White
.....
.....
.....
.....
.....

MoveD
White
.....
.....
.....
.....
.....

MoveL
White
.....
.....
.....
.....
.....

MoveR
White
.....
.....
.....
.....
.....

CanMove
White
.....
.....
.....
.....
.....

Level0
White #F00
.....
.....
.111.
.....
.....

Level1
White #F00
00000
.....
.111.
.....
.....

Level2
White #F00
.....
00000
.111.
.....
.....

Level3
White #F88
.....
.....
01110
.....
.....

Level4
White #F00
.....
.....
.111.
00000
.....

Level5
White #F00
.....
.....
.111.
.....
00000


=======
LEGEND
=======

. = Background
X = Exit
# = Wall
H = Hole
P = Player
Q = Player and Exit
E = Enemy
F = Enemy and Exit
C = Chicken
D = Chicken and Exit
L = Lettuce
M = Lettuce and Exit
0 = Level0
1 = Level1
2 = Level2
3 = Level3
4 = Level4
5 = Level5

Move = MoveU or MoveD or MoveL or MoveR
Obstacle = Wall or Enemy
Food = Player or Chicken


=======
SOUNDS
=======

SFX0            97542903 (enemy alerted)
Player  Destroy 41368102 (player eaten)
Chicken Destroy 74663702 (chicken eaten)
Lettuce Destroy 74663702 (lettuce eaten)
Enemy   Create  81259707 (enemy moving)
EndLevel        22595303


================
COLLISIONLAYERS
================

Background
Exit, Hole, Level0, Level1, Level2, Level3, Level4, Level5
Wall, Player, Enemy, Chicken, Lettuce
LoS, Move
Alert, CanMove


======
RULES
======

(Prevent illegal moves)
[ > Player | Hole ] -> cancel

(Tell alert enemies to move)
[ Enemy Move ] -> [ Enemy CanMove Move ]

(Stop enemies)
late up    [ Enemy CanMove MoveU |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late left  [ Enemy CanMove MoveL |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late right [ Enemy CanMove MoveR |    Obstacle no Move ] -> [ Enemy | Obstacle ]
late down  [ Enemy CanMove MoveD | Enemy CanMove MoveU ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy CanMove MoveL ] -> [ Enemy | Enemy    ]
late up    [ Enemy CanMove MoveU | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late down  [ Enemy CanMove MoveD | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late left  [ Enemy CanMove MoveL | Enemy      no Move  ] -> [ Enemy | Enemy    ]
late right [ Enemy CanMove MoveR | Enemy      no Move  ] -> [ Enemy | Enemy    ]

(Move enemies)
late up    [ Enemy CanMove MoveU | no Obstacle         ] -> [       | Enemy MoveU ] again
late down  [ Enemy CanMove MoveD | no Obstacle         ] -> [       | Enemy MoveD ] again
late left  [ Enemy CanMove MoveL | no Obstacle         ] -> [       | Enemy MoveL ] again
late right [ Enemy CanMove MoveR | no Obstacle         ] -> [       | Enemy MoveR ] again
late       [ Enemy CanMove       ]                       -> [ Enemy ]

(Remove alerts)
late       [ Enemy Alert         ]                       -> [ Enemy ]

(Create line of sight)
late [ Food no CanMove ] -> [ Food CanMove ]
late [ Move ] [ CanMove ] -> [ Move ] [ ]

(Chase player)
late [ Player CanMove ] -> [ Player LoS ]
late [ Player LoS | no Wall no LoS ] -> [ Player LoS | LoS ]
late [ Player Los | ... | LoS | no Wall no LoS ] -> [ Player LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveU Alert | ... | Player LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveD Alert | ... | Player LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveL Alert | ... | Player LoS ] SFX0
late right [ Enemy LoS no Move | ... | Player LoS ] -> [ Enemy MoveR Alert | ... | Player LoS ] SFX0
late [ LoS ] -> [ ]

(Chase chickens)
startloop
late random [ Chicken CanMove ] -> [ Chicken LoS ]
late [ Chicken LoS | no Wall no LoS ] -> [ Chicken LoS | LoS ]
late [ Chicken Los | ... | LoS | no Wall no LoS ] -> [ Chicken LoS | ... | LoS | LoS ]
late up    [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveU Alert | ... | Chicken LoS ] SFX0
late down  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveD Alert | ... | Chicken LoS ] SFX0
late left  [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveL Alert | ... | Chicken LoS ] SFX0
late right [ Enemy LoS no Move | ... | Chicken LoS ] -> [ Enemy MoveR Alert | ... | Chicken LoS ] SFX0
late [ LoS ] -> [ ]
endloop


==============
WINCONDITIONS
==============

some Exit on Player
no Alert
no Move


=======
LEVELS
=======

..#####....
..#X..#...3
..#...###.0
..#E....#.0
..###...#.0
....#..P#.0
....#####..

..#######..
..#P....#.4
..#.....#.0
..#####.#.0
..#EX...#.0
..###...#.0
....#####..

..#######..
..#.....#.5
..#..#..#.0
..#.....#.0
..#.P##E#.0
..#..#XE#.0
..#######..

..#######..
..#.....#.0
..#.E...#.1
..#.E...#.0
..#.E...#.0
..#XE.P.#.0
..#######..

..#######..
..#..#.X#.0
..#..E..#.2
..##.#E##.0
..#.....#.0
..#P.#..#.0
..#######..

..#######..
..#X...P#.0
..##.#..#.3
..#...#.#.0
..#.....#.0
..#.E#.E#.0
..#######..

..######...
..#P.#.##.0
..#.X..E#.4
..##.#..#.0
..#.....#.0
..##..E.#.0
...######..

...####....
..##..##..0
..#.P..##.5
..#..X.E#.0
..##...##.0
...##E##..0
....###....

..#######..
..#XE...#.0
..#EE..##.0
..#..P..#.1
..#.....#.0
..#.#...#.0
..#######..

..#######..
..#P..#X#.0
..#.....#.0
..##....#.2
..#.....#.0
..#E..#E#.0
..#######..

..#######..
..#X...P#.0
..#.###.#.0
..#.....#.3
..#E###.#.0
..#....C#.0
..#######..

..#######..
..#P....#.0
..#..#.E#.0
..#.....#.4
..##.C.##.0
...##X##..0
....###....

..#######..
..#....C#.0
..##X#.##.0
..#EH..#..5
..##...#..0
...#.PC#..0
...#####...

...######..
...#.#..#.0
..##Q..E#.0
..#...#.#.0
..#..#..#.1
..#.E.C.#.0
..#######..

.....####..
...###.E#.0
...#P...#.0
..##..L.#.0
..#..LXL#.2
..#E..L.#.0
..#######..

...######..
..##LLCX#.0
..#LLCLC#.0
..#LCL.L#.0
..#ELLPL#.3
..#LLC#L#.0
..#######..

..#######..
..#....P#.0
..#E.#E.#.0
..#.....#.0
..##LLL##.4
...##X##..0
....###....

..#######..
..##LXL##.0
..#..L..#.0
..#..#..#.0
..#E...E#.5
..##.P.##.0
..#######..

..#######..
..#H.P..#.0
..#XH...#.0
..#..H.E#.0
..#...H.#.0
..#.E...#.1
..#######..

..#######..
..#.E.E.#.0
..#P....#.0
..#..X.E#.0
..#L..L.#.0
..#.E.EL#.2
..#######..

..#######..
..#L.L.L#.0
..#L.L.L#.0
..#L.P.L#.0
..#L.L.L#.0
..#L.L.L#.3
..##X#X##..


title BROKEN Naive Extended Bodies
author increpare
homepage www.puzzlescript.net

(
naive/broken implementation of rigid bodies
see https://www.puzzlescript.net/Documentation/rigidbodies.html#Introduction
)

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111


Target
DarkBlue
.....
.000.
.0.0.
.000.
.....

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

Player
Black Orange White Blue
.000.
.111.
22222
.333.
.3.3.

BigBlock
Orange Yellow
00000
0...0
0...0
0...0
00000


=======
LEGEND
=======

. = Background
# = Wall
P = Player
* = BigBlock
@ = BigBlock and Target
O = Target


=======
SOUNDS
=======

BigBlock MOVE 36772507

================
COLLISIONLAYERS
================

Background
Target
Player, Wall, BigBlock

======
RULES
======

[ >  Player | BigBlock ] -> [  >  Player | > BigBlock  ]
[ moving BigBlock | BigBlock ] -> [moving BigBlock|moving BigBlock]

==============
WINCONDITIONS
==============

=======
LEVELS
=======

.#######.
#.......#
#..***..#
#..p*...#
#.......#
.#######.


title Notsnake
author Terry Cavanagh
homepage www.distractionware.com

color_palette c64
require_player_movement

========
OBJECTS
========

Background
blue

Player
lightblue

Trail
purple

=======
LEGEND
=======

. = Background
P = Player
O = Trail

=======
SOUNDS
=======

startgame 50287705
sfx0 660507
sfx1 41058704
endgame 74955903

================
COLLISIONLAYERS
================

Background
Trail
Player

======
RULES
======

[ > Player | No Trail ] -> [ Trail | Player ] sfx0
[ > Player | Trail ] -> [ | Player ] sfx1

==============
WINCONDITIONS
==============

no Trail

=======
LEVELS
=======

OOOOOOOO
OOOOOOOO
O..POO.O
OOOOOOOO
OOOOOOOO


USER PROMPT:
Output the code for a complete PuzzleScript game. Return your code in full, inside a ```plaintext code block.