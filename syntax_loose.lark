%import common.WS_INLINE
%import common.INT
// %import common.NEWLINE -> NEWLINE

NEWLINE: "\n"

%ignore WS_INLINE

// Start rule
start: ps_game

ps_game: prelude? objects_section legend_section sounds_section collisionlayers_section rules_section winconditions_section levels_section
NEWLINES: NEWLINE+

// Section delimiters
section_delimiter: delimiter NEWLINE

delimiter: "="+

// Sections
objects_section: section_delimiter? "OBJECTS" NEWLINES section_delimiter? object_data+
legend_section: section_delimiter? "LEGEND" NEWLINES section_delimiter? legend_data+
sounds_section: section_delimiter? "SOUNDS" NEWLINES section_delimiter? sound_data*
collisionlayers_section: section_delimiter? "COLLISIONLAYERS" NEWLINES section_delimiter? layer_data+
rules_section: section_delimiter? "RULES" NEWLINES section_delimiter? rule_block+
winconditions_section: section_delimiter? "WINCONDITIONS"i NEWLINES section_delimiter? condition_data+ // Accept no win conditions
levels_section: section_delimiter? "LEVELS" NEWLINES section_delimiter? level_data+

// Prelude
prelude: prelude_data+

prelude_data: (KEYWORD_ID STRING*)? comment* NEWLINES

STRING: /[^\n]+/

// Can match anything inside comment, except for `)`
// comment: /\((?:[^\(\)]|\((?:[^\(\)]|\([^)]*\))*\))*\)/
comment: /\((?:[^\(\)]*\))/
       | "(" comment* ")"

// Object Data
object_data: object_name newlines_or_comments? legend_key? newlines_or_comments? colors newlines_or_comments? sprite?
           | newlines_or_comments

SPRITE_PIXEL: /[0-9.]/
colors: color+

sprite: (SPRITE_PIXEL~5 comment* NEWLINE)~5

// Legend Data
legend_data: (PIXEL | ID) "=" object_name legend_operation*
           | newlines_or_comments

legend_operation: "or"i object_name
                | "and"i object_name

// Sound Data
sound_data: (sound_id+ sound_number?)? comment* NEWLINE

sound_number: INT

sound: "sfx"i sound_id

// Layer Data
layer_data: ((object_name ("," | " "))* object_name ","*)?
          | newlines_or_comments

STARTLOOP: "startloop"i
ENDLOOP: "endloop"i

// Rule Data
rule_data: RULE_MOD* rule_part+ THEN (command | rule_part)* message? comment* NEWLINE
         | newlines_or_comments

THEN: "->"

RULE_MOD: "right"i | "down"i | "up"i | "left"i | PLUS | "late"i
        | "vertical"i | "horizontal"i | "random"i | "rigid"i
PLUS: "+"

rule_block_once: rule_data+
rule_block_loop: STARTLOOP NEWLINE rule_data+ ENDLOOP NEWLINE

rule_block: rule_block_once
          | rule_block_loop

message: "message"i STRING+

rule_part: "[" (rule_content? cell_border*)+ "]"

cell_border: "|"

rule_content: DIRECTIONAL? (ID+ | PIXEL)

ID: /[a-z0-9.A-Z#_]/+

// Command
command: command_keyword
       | sound

// Condition Data
condition_data: QUANT object_name (ON object_name)?
              | newlines_or_comments

ON: "on"i
QUANT: "all"i | "some"i | "no"i | "any"i


// Level Data

level_data: levellines
          | message
          | newlines_or_comments

// levellines: (levelline NEWLINE)+
levellines: levelline+ NEWLINE
levelline: /(?<!message)[¨å,äa-zA-Zぁ-㍿.!@#$%&*0-9\-,`\'~_"§\[\]è!çàé;?:\/+°£^{}|\><^v¬˅\\±]+/ comment* NEWLINE

newlines_or_comments: (NEWLINE | comment | "="+)+

// levelline: /(?<!message) / PIXEL+
PIXEL: /[a-zA-Zぁ-㍿.!@#$%&*0-9\-,`\'~_"§\[\]è!çàåäé;?:\/+°£^{}|\><^v¬˅\\±¨]/
sprite_key: PIXEL
          | "="  // To permit easyenigma
// Rewrite LEVELLINE to use PIXEL, but still inhibit message
// levelline: /(?<!message)./ sprite_key*

// PIXEL: /[a-zA-Z#\.]/

// Identifiers and Tokens
object_name: ID
color: ID
sound_id: ID
condition_id: ID

// A rule prefix is anything but `[`
legend_key: PIXEL
// ID_OR_DIRECTIONAL: /(?!\|)[\>\<a-zA-Z]+/

DIRECTIONAL: /[\^v<>]/

KEYWORD_ID: /[a-z0-9.A-Z_]+/
prefix: ID

// Keywords
prelude_keyword: "title" | "author" | "homepage" | "color_palette" | "again_interval" | "background_color" | "debug" 
               | "flickscreen" | "key_repeat_interval" | "noaction" | "norepeat_action" | "noundo" | "norestart" 
               | "realtime_interval" | "require_player_movement" | "run_rules_on_level_start" | "scanline" 
               | "text_color" | "throttle_movement" | "verbose_logging" | "youtube" | "zoomscreen"

legend_keyword: "or"i | "and"i
// command_keyword: "again"i | "cancel"i | "checkpoint"i | "restart"i | "win"i
command_keyword: AGAIN | CANCEL | CHECKPOINT | RESTART | WIN

AGAIN: "again"i
CANCEL: "cancel"i
CHECKPOINT: "checkpoint"i
RESTART: "restart"i
WIN: "win"i

// ID: /[a-z0-9.A-Z#_+]+/
