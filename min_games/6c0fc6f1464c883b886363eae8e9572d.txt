OBJECTS

BackgroundDarkblue
WallLightblue
BluePurple00001
01112
01112
01112
12222

PlayerWhite Lightgrey
.......0..
.0.1...1..
.....White
WhiteLightgray Black
0000102021
0011102121
11111Budger
GreyDarkgrey
RedDarkred Black
4323434043
2041234143
43234Pusher
GreyDarkgrey
RedDarkred Black
3222324042
2041224142
32223Puller
GreyDarkgrey
LightgreenGreen Black
3222324042
2041224142
32223Warper
GreyDarkgrey
LightblueBlue Black
3222324042
2041224142
32223Healer
GreyDarkgrey
YellowLightbrown Black32223
24042
20412
24142
32223

ImmunityYellow
..........
..0.......
.....Mover
GreyDarkgrey
BluePurple Black32223
24042
20412
24142
32223

MoverCtrlPurple Blue
..0.......
0...1.....
..1..Morpher
GreyDarkgrey
OrangeBrown Black
3222324042
2041224142
32223Deadhost
GreyDarkgrey Black
1000102220
0222002220
10001DangerWall
LightblueBlue
PurpleRed Darkred03031
31114
01112
31114
14242

Goal1White Black01010
10101
01010
10101
01010

Goal2White Black10101
01010
10101
01010
10101

SpikeUWhite.....
.....
.....
..0..
.000.

SpikeLWhite.....
....0
...00
....0
.....

SpikeDlightgray.000.
..0..
.....
.....
.....

SpikeRlightgray.....
0....
00...
0....
.....

SpikeBaseUWhite.0.0.
.....
.....
.....
.....

SpikeBaseLWhite.....
0....
.....
0....
.....

SpikeBaseDlightgray.....
.....
.....
.....
.0.0.

SpikeBaseRlightgray
.........0
.........0
.....Crate
OrangeBrown Lightbrown00001
00011
00111
01111
11111

CrateSpotBrown Orange.....
.001.
.011.
.111.
.....

TargetBlack
......000.
.0.0..000.
.....Blue
BluePurple Black
0000102011
0212101121
11111Red
RedDarkred Black
0000100021
0212102111
11111Yellow
YellowLightbrown Black
0000100221
0011102211
11111Green
LightgreenGreen Black00001
02211
00111
01221
11111

FlowDarkred..0..
..0..
..0..
.....
..0..

PinPink.....
.....
..0..
.....
.....

LaserUWhite.0.0.
..0..
.....
.....
.....

LaserLWhite.....
0....
.0...
0....
.....

LaserDWhite.....
.....
.....
..0..
.0.0.

LaserRWhite.....
....0
...0.
....0
.....

RayUWhite.0.0.
.0.0.
.0.0.
.0.0.
.0.0.

RayLWhite.....
00000
.....
00000
.....

RayDWhite.0.0.
.0.0.
.0.0.
.0.0.
.0.0.

RayRWhite
.....00000
.....00000
.....Fragile
GreyDarkgrey Black
0020100211
2212201211
11211Large
LightgreyGrey Black00001
00211
02221
01211
11111

HoleBlack

LEGEND

. = Background
# = Wall
* = Crate
@ = Crate or Target
O = Target
1 = Blue
2 = Red
3 = Yellow
4 = Green
5 = White
A = Blue or Pin
B = Red or Pin
C = Yellow or Pin
D = Green or Pin
E = White or Pin
6 = Pusher or Player
7 = Budger or Player
8 = Puller or Player
9 = Warper or Player
0 = Healer or Player
" = Mover or Player
' = Morpher or Player
F = Pusher
G = Budger
H = Puller
I = Warper
J = Healer
K = Mover
L = Morpher
% = Fragile
+ = Large
^ = LaserU or Fragile
< = LaserL or Fragile
v = LaserD or Fragile
> = LaserR or Fragile
& = SpikeBaseU or SpikeBaseL or SpikeBaseD or SpikeBaseR or Fragile
_ = Hole
$ = Goal1
! = DangerWall
? = Mover or Player or LaserD
Kolor = Blue or Red or Yellow or Green
Block = Crate or Kolor or Fragile or Large or White
Laserproof = Kolor or Crate or Large or Wall or Immunity or Deadhost
Laser = LaserU or LaserL or LaserD or LaserR
SpikeBase = SpikeBaseU or SpikeBaseL or SpikeBaseD or SpikeBaseR
Spike = SpikeU or SpikeL or SpikeD or SpikeR
Ray = RayU or RayL or RayD or RayR
Host = Pusher or Budger or Puller or Warper or Healer or Mover or Morpher
Movable = Block or Host
Goal = Goal1 or Goal2
Hazard = Spike or Ray
Weapon = SpikeBase or Laser
Immovable = Wall or DangerWall
Immutable = DangerWall or Kolor or Crate
Midlayer = Movable or Immovable

COLLISIONLAYERS

Background
Hole
Flow
Target, Goal
SpikeU
SpikeL
SpikeD
SpikeR
Deadhost
Midlayer
Player
MoverCtrl
CrateSpot
LaserU, SpikeBaseU
LaserL, SpikeBaseL
LaserD, SpikeBaseD
LaserR, SpikeBaseR
Pin, Immunity
RayU
RayL
RayD
RayR

RULES

late [ CrateSpot no Crate ] -> [  ] 
late [ Crate Target ] -> [ Crate Target CrateSpot ] (render the inverted part of the crate) 
right [ Goal1 | Goal1 ] -> [ Goal1 | Goal2 ] 
down [ Goal1 | Goal1 ] -> [ Goal1 | Goal2 ] 
right [ Goal2 | Goal2 ] -> [ Goal2 | Goal1 ] 
down [ Goal2 | Goal2 ] -> [ Goal2 | Goal1 ] (pretty up the goals if they're adjacent) 
late [ Fragile Hole ] -> [ Hole ] (cracked blocks fall into holes without filling them) 
late [ Laser Hole ] -> [ Hole ] (laser emitters also fall into holes. it's important that lasers are not allowed to fire the turn they fall into a hole) 
late [ Large Hole ] -> [  ] (large blocks turn holes into floor after falling in) 
late [ Host Hole][Wall ] -> [ Hole Flow no Player][WallDeadhost ] (if some ditz walks into a hole, death! you can't walk into a hole in sokofun, but due to bards/movers there need to be death cases for hosts being forced to walk into hazards. flow indicates when a host or something else important falls in a hole. this and door-slamming is the only way to kill a healer) 
late [ Crate Hole][Wall ] -> [ Hole Flow][WallDeadhost ] ("essential" blocks (kolors, crates) cannot be pushed into holes in sokofun, but for the reasons above it has to be allowed here) 
late [ Kolor Hole][Wall ] -> [ Hole Flow][WallDeadhost ] (white isn't important because white isn't required for win) 
[ Immunity ] -> [  ] (immunity provided by healer needs to be updated. flow temps take care of themselves in kolor) 
[ Deadhost ] -> cancel (got to restart or undo if a host dies) 
[ > Player Host ] -> [ > Player>Host ] (turns out the player moves hosts) 
[ > Pusher>Player | MovablenoPin ] -> [ > Pusher>Player | >Movable ] (pushers push objects like usual) 
[ > Movable | MovablenoPin][PusherPlayer ] -> [ > Movable | >Movable][PusherPlayer ] (while a pusher is active, objects can push other objects. essentially pusher can push multiple things at once.) 
[ > Budger>Player | MovablenoPin ] -> [ > Budger>Player | >Movable ] (budgers act identically to pushers, but cannot push multiple things at once. this is to maintain compatibility with sokofun and the like) 
[ > Host>PlayernoPushernoMovernoBudgernoWarper | MovablenoPin ] -> [ > Host Player | Movable ] (player can't move against something if they can't push, host tries moving anyways in case it's a warper) 
[ > Budger>Player | Movable | Movable ] -> [ Budger Player | Movable | Movable ] (account for budger) 
[ > Host>Player | >Movable | Immovable ] -> [ > Host Player | Movable | Immovable ] 
[ > Host>Player | >Movable | MovablePin ] -> [ > Host Player | Movable | MovablePin ] (i'm surprised the rule below doesn't cover this) 
[ > Host>Player | ... | >Movable | Immovable ] -> [ > Host Player | ... | Movable | Immovable ] 
[ > Host>Player | ... | >Movable | MovablePin ] -> [ > Host Player | ... | Movable | MovablePin ] (player can't move against line of objects that refuses to move, host tries moving anyways incase it's a morpher) 
[ > Host>Player | Immovable ] -> [ > Host Player | Immovable ] 
[ > Host>Player | MovablePin ] -> [ > Host Player | MovablePin ] (player can't move against something immovable, ditto) 
[ < Puller<Player | MovablenoPin ] -> [ < Puller<Player | <Movable ] (pullers pull objects towards them) 
[ > Warper ] -> [ Warper>Flow ] 
[ > Flow | noMidlayer ] -> [ |>Flow ] 
[ > Flow | Immovable][Warper ] -> [ |Immovable][>Warper ] 
[ > Flow | MovablePin][Warper ] -> [ |MovablePin][>Warper ] 
[ > Flow | MovableWeapon][WarperPlayer ] -> [ |actionWarperPlayer][actionBackgroundMovableWeapon ] 
[ action Warper Weapon][actionBackground ] -> [ action Warper][actionbackgroundWeapon ] 
[ > Flow | Movable][WarperPlayer ] -> [ |WarperPlayer][Movable ] 
[ > Flow][Warper ] -> [ ][>Warper ] 
late [ Host | Healer ] -> [ Flow Host | Healer ] (healers give invisible immunity that does not become visible until a hazard pops up. i'm trying to keep temp counts low so flow is reused here) 
[ > Morpher | Wall ] -> [ Morpher | Large ] (wall morphs to large) 
[ > Morpher | HostFlow ] -> [ Morpher | HostImmunity ] (immune hosts can't be stoned, emulating HOS 3) 
[ > Morpher | Healer ] -> [ Morpher | HealerImmunity ] (healers are immune) 
[ > Morpher | Immutable ] -> [ Morpher | Immutable ] (some stuff should never be transmuted. this includes win-essential blocks like kolors and crates) 
[ > Morpher | Movable ] -> [ Morpher | WallnoWeapon ] (other morph stuff; weapons are cleared because we wouldn't want a dragon to still shoot rays after being morphed to a wall do we now? (yeah dragons aren't in HOS 3 but whatever)) 
late [ Player no Host ] -> [ Deadhost ] (when host is forcibly removed by a door) 
[ > Mover Player no MoverCtrl ] -> [ > MoverCtrl>MoverPlayeractionFlow ] 
[ > MoverCtrl][MoverCtrl ] -> [ > MoverCtrl][>MoverCtrl ] 
startloop
[ > MoverCtrl Movable Weapon | noMidlayernoMover ] -> [ |MovableWeaponSfx7 ] 
[ > MoverCtrl Movable no Weapon | noMidlayernoMover ] -> [ |MovableSfx7 ] 
[ > MoverCtrl Mover Player Weapon action Flow | noMidlayernoMover ] -> [ |MoverPlayerWeapon ] 
[ > MoverCtrl Mover Player no Weapon action Flow | noMidlayernoMover ] -> [ |MoverPlayer ] 
endloop
[ MoverCtrl ] -> [  ] 
[ action Flow Mover ] -> cancel 
[ no MoverCtrl | noMoverCtrl | Mover ] -> [ ^ MoverCtrl | ^MoverCtrl | Mover ] 
[ no MoverCtrl | Mover ] -> [ ^ MoverCtrl | Mover ] 
[ > MoverCtrl | noMoverCtrl | noMoverCtrl ] -> [ MoverCtrl | MoverCtrl | MoverCtrl ] 
[ > MoverCtrl | noMoverCtrl ] -> [ MoverCtrl | MoverCtrl ] 
[ > MoverCtrl ] -> [ MoverCtrl ] 
[ Weapon>Midlayer ] -> [ > Weapon>Midlayer ] (weapons move with whatever they are mounted on) 
late [ Hazard ] -> [  ] (hazard positions must be updated) 
late up [ LaserU |  ] -> [ LaserU | RayU ] 
late left [ LaserL |  ] -> [ LaserL | RayL ] 
late down [ LaserD |  ] -> [ LaserD | RayD ] 
late right [ LaserR |  ] -> [ LaserR | RayR ] (fire rays from laser emitters) 
late up [ SpikeBaseU |  ] -> [ SpikeBaseU | SpikeU ] 
late left [ SpikeBaseL |  ] -> [ SpikeBaseL | SpikeL ] 
late down [ SpikeBaseD |  ] -> [ SpikeBaseD | SpikeD ] 
late right [ SpikeBaseR |  ] -> [ SpikeBaseR | SpikeR ] (spike bases hold spikes) 
startloop
late [ Ray Healer ] -> [ Healer Immunity ] (rays cannot be on top of healers, who are immune) 
late [ Host Flow Ray ] -> [ Host Immunity ] (protected hosts are immune to rays) 
late [ Ray Laserproof ] -> [ Laserproof ] (rays cannot be on top of laserproof objects) 
late [ Ray Fragile ] -> [ Ray no Weapon ] (rays destroy fragile blocks) 
late [ Host Ray no Immunity ] -> [ Deadhost no Player ] (rays kill hosts who are not immune) 
late up [ RayU | noLaserproof ] -> [ RayU | RayU ] 
late left [ RayL | noLaserproof ] -> [ RayL | RayL ] 
late down [ RayD | noLaserproof ] -> [ RayD | RayD ] 
late right [ RayR | noLaserproof ] -> [ RayR | RayR ] (rays try to advance) 
endloop
late [ Host Flow Spike ] -> [ Host Immunity Spike ] 
late [ Healer Hazard ] -> [ Healer Hazard Immunity ] 
late [ Host Spike no Immunity ] -> [ Deadhost Spike no Player ] (spikes try killing people and all that) 
late [ Spike Fragile ] -> [ Spike no Weapon ] 
late [ Weapon no Midlayer ] -> [  ] (weapons must be mounted on something) 
late up [ no LaserU no RayU | RayU ] -> [ | ] 
late left [ no LaserL no RayL | RayL ] -> [ | ] 
late down [ no LaserD no RayD | RayD ] -> [ | ] 
late right [ no LaserR no RayR | RayR ] -> [ | ] (clean up rays from destroyed laser emitters) 
late up [ no SpikeBaseU | SpikeU ] -> [ | ] 
late left [ no SpikeBaseL | SpikeL ] -> [ | ] 
late down [ no SpikeBaseD | SpikeD ] -> [ | ] 
late right [ no SpikeBaseR | SpikeR ] -> [ | ] (clean up spikes from ded spike things) 
late [ DangerWall ] -> [ Flow DangerWall ] (every turn, dangerwalls try to disappear) 
late [ Flow DangerWall][WeaponnoHost ] -> [ DangerWall][Weapon ] (dangerwalls fail to disappear if there exists at least one weapon and it is not tied to a host (because there's no way to rid a host of a weapon without killing the host and losing)) 
late [ Flow DangerWall ] -> [  ] (if dangerwalls do not detect weapons, they disappear) 
late [ MoverCtrl no Movable ] -> [  ] (make sure mover isn't trying to move destroyed stuff) 
[ Flow ] -> [  ] ("flow" is updated each turn) 
random [ Blue ] -> [ Blue Flow ] 
random [ Red ] -> [ Red Flow ] 
random [ Yellow ] -> [ Yellow Flow ] 
random [ Green ] -> [ Green Flow ] (flow is spawned on a random color block for each color in the level. this check is only started when a block is pushed, as to eliminate unneeded checks... still wonder if this could be reduced to 1 rule) 
[ Flow>Block ] -> [ > Flow>Block ] (flow moves with moving blocks, so that it can not be left behind and turn what should be a winning push into a mysterious "nothing is happening!" scenario) 
late [ Flow Blue | Blue ] -> [ Flow Blue | FlowBlue ] 
late [ Flow Red | Red ] -> [ Flow Red | FlowRed ] 
late [ Flow Yellow | Yellow ] -> [ Flow Yellow | FlowYellow ] 
late [ Flow Green | Green ] -> [ Flow Green | FlowGreen ] (flow "spreads" to adjacent blocks of same color. this repeats until it has no more blocks to spread to. level is winnable while all blocks on the map can be flowed to from an arbitrary flow placement, i.e. all blocks of the same color are touching) 
late [ Flow White | White ] -> [ Flow White | FlowWhite ] 
late [ Flow Kolor | White ] -> [ Flow Kolor | FlowWhite ] 
late [ Flow White | Kolor ] -> [ Flow White | FlowKolor ] (white is a universal flow transmitter) 


WINCONDITIONS

All Target on Crate
All Kolor on Flow
All Goal on Host
No Deadhost

LEVELS

..####..

###.1###
#3.1.2.#
#.374.2#
###4.###
..####..

#########

#$......#
#.......#
#.7.v...#
#.......#
#..1....#
#.......#
#########

#########

#$......#
#.......#
#..1....#
#.".....#
#...^...#
#.......#
#########

#########

#$......#
#.......#
#.?.....#
#.......#
#..1....#
#.......#
#########
