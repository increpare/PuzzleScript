"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-env jasmine */
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const parser_1 = __importDefault(require("./parser/parser"));
const GISTS_ROOT = path_1.default.join(__dirname, '../games/');
const GIST_SOLUTIONS_ROOT = path_1.default.join(__dirname, '../game-solutions/');
describe('parsing files unambiguously', () => {
    const gistDirs = fs_1.default.readdirSync(GISTS_ROOT);
    // it('checks all files that they parse uniquely', () => {
    gistDirs.forEach((gistDirName) => {
        // Only parse files that do not have solutions
        // because solutions will be tested by running the games
        if (!fs_1.default.existsSync(path_1.default.join(GIST_SOLUTIONS_ROOT, `${gistDirName}.json`))) {
            const codeFile = path_1.default.join(GISTS_ROOT, gistDirName, 'script.txt');
            if (fs_1.default.existsSync(codeFile)) {
                it(`parses ${gistDirName} uniquely`, () => {
                    const code = fs_1.default.readFileSync(codeFile, 'utf-8');
                    parser_1.default.parse(code);
                });
            }
        }
    });
    // })
});
//# sourceMappingURL=parseFilesUnique.spec.js.map