title Routing Puzzle
author Zithral
homepage www.puzzlescript.net

background_color #181818

norepeat_action
run_rules_on_level_start

========
OBJECTS
========

LetterP !
lightgrey
.00..
.0.0.
.000.
.0...
.....

LetterR @
lightgrey
.00..
.0.0.
.00..
.0.0.
.....

LetterE #
lightgrey
.000.
.00..
.0...
.000.
.....

LetterS $
lightgrey
.00..
.000.
...0.
.000.
.....

LetterX %
lightgrey
.0.0.
..0..
.0.0.
.0.0.
.....

RightArrow
lightgray #181818
11011
11101
00000
11101
11011


Background
purple

ShapeConnectionColor
gray

DisconnectedColor
#393939

BorderColor
#393939

Outer
#181818

BorderMid
#393939
00.00
00000
.000.
00000
00.00

BorderU
#393939
..0..
.....
.....
.....
.....

BorderD
#393939
.....
.....
.....
.....
..0..

BorderL
#393939
.....
.....
0....
.....
.....

BorderR
#393939
.....
.....
....0
.....
.....

1
blue
.....
.000.
.000.
.000.
.....

1u
blue
.000.
.000.
.....
.....
.....

1d
blue
.....
.....
.....
.000.
.000.

1l
blue
.....
00...
00...
00...
.....

1r
blue
.....
...00
...00
...00
.....

2
red
.....
..00.
.0.0.
.00..
.....

2u
red
.000.
.000.
.....
.....
.....

2d
red
.....
.....
.....
.000.
.000.

2l
red
.....
00...
00...
00...
.....

2r
red
.....
...00
...00
...00
.....

3
yellow
.....
..0..
.000.
..0..
.....

3u
yellow
.000.
.000.
.....
.....
.....

3d
yellow
.....
.....
.....
.000.
.000.

3l
yellow
.....
00...
00...
00...
.....

3r
yellow
.....
...00
...00
...00
.....

4
lightgreen
.....
.000.
.0.0.
.000.
.....

4u
lightgreen
.000.
.000.
.....
.....
.....

4d
lightgreen
.....
.....
.....
.000.
.000.

4l
lightgreen
.....
00...
00...
00...
.....

4r
lightgreen
.....
...00
...00
...00
.....

5
orange
.....
.00..
.000.
..00.
.....

5u
orange
.000.
.000.
.....
.....
.....

5d
orange
.....
.....
.....
.000.
.000.

5l
orange
.....
00...
00...
00...
.....

5r
orange
.....
...00
...00
...00
.....

6
pink
.....
..0..
.0.0.
..0..
.....

6u
pink
.000.
.000.
.....
.....
.....

6d
pink
.....
.....
.....
.000.
.000.

6l
pink
.....
00...
00...
00...
.....

6r
pink
.....
...00
...00
...00
.....

(
7
lightgray
.....
.0.0.
.000.
.0.0.
.....
)

Empty
black
00.00
00000
.000.
00000
00.00

Intersection
black
00.00
00.00
..0..
00.00
00.00

Turnup
black
00.00
0.000
.000.
000.0
00.00

Turndown
black
00.00
000.0
.000.
0.000
00.00

PlayerEmpty
#222222
00.00
00000
.000.
00000
00.00

PlayerIntersection
#222222
00.00
00.00
..0..
00.00
00.00

PlayerTurnup
#222222
00.00
0.000
.000.
000.0
00.00

PlayerTurndown
#222222
00.00
000.0
.000.
0.000
00.00


( "Visited" markers )

vu
gray
.000.
.000.
.....
.....
.....

vd
gray
.....
.....
.....
.000.
.000.

vl
gray
.....
00...
00...
00...
.....

vr
gray
.....
...00
...00
...00
.....


Win
transparent

Inited
transparent

Singleton
transparent

( Global states )
(Initializing)
sI
transparent
(Randomizing)
sR
transparent
(Tracing a randomized wire)
sT
transparent
(Playing)
sP
transparent

ConnectorUD (There is a connector above or below)
transparent
ConnectorLR (There is a connector to the left or right)
transparent


RandomShape
purple blue red yellow lightgreen orange pink
.....
.612.
.5.3.
.214.
.....

RandomConnector
black transparent
01110
10101
11011
10101
01110

RandomConnectorNoTurnup
black transparent
00110
00101
11011
10100
01100

RandomConnectorNoTurndown
black transparent
01100
10100
11011
00101
00110

RandomPlayer
#222222 transparent
01110
10101
11011
10101
01110

Traced
transparent
NoShape
transparent


=======
LEGEND
=======

. = Background
o = Empty
+ = Intersection
/ = Turnup
\ = Turndown
p = Empty and PlayerEmpty
- = Intersection and PlayerIntersection
? = Turnup and PlayerTurnup
} = Turndown and PlayerTurndown
0 = RandomShape
* = RandomConnector
` = RandomConnectorNoTurnup
' = RandomConnectorNoTurndown
& = RandomConnector and RandomPlayer

DefaultColor = ShapeConnectionColor or BorderColor or DisconnectedColor
Player = RandomPlayer or PlayerEmpty or PlayerIntersection or PlayerTurnup or PlayerTurndown

Letter = LetterP or LetterR or LetterE or LetterS or LetterX
Shape = 1 or 2 or 3 or 4 or 5 or 6
Connector = Empty or Intersection or Turnup or Turndown

RandomPlaceholder = RandomShape or RandomConnector or RandomConnectorNoTurnup or RandomConnectorNoTurndown
IntersectionTurnupTurndown = Intersection or Turnup or Turndown
IntersectionTurnup = Intersection or Turnup
IntersectionTurndown = Intersection or Turndown
ShapeOrNot = 1 or 2 or 3 or 4 or 5 or 6 or NoShape

u = 1u or 2u or 3u or 4u or 5u or 6u
d = 1d or 2d or 3d or 4d or 5d or 6d
l = 1l or 2l or 3l or 4l or 5l or 6l
r = 1r or 2r or 3r or 4r or 5r or 6r

Visited = vu or vd or vl or vr
Glow1 = 1u or 1d or 1l or 1r
Glow2 = 2u or 2d or 2l or 2r
Glow3 = 3u or 3d or 3l or 3r
Glow4 = 4u or 4d or 4l or 4r
Glow5 = 5u or 5d or 5l or 5r
Glow6 = 6u or 6d or 6l or 6r
Glow = Glow1 or Glow2 or Glow3 or Glow4 or Glow5 or Glow6

BorderUD = BorderU or BorderD
BorderLR = BorderL or BorderR
Border = BorderMid or BorderU or BorderD or BorderL or BorderR
Frame = Outer or Border

State = sI or sR or sT or sP
Generated = Inited or Singleton or State or Frame or DefaultColor or ConnectorUD or ConnectorLR

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
Outer
DefaultColor
vu
vd
vl
vr
u
d
l
r
Connector
Player
BorderMid
BorderU
BorderD
BorderL
BorderR
ShapeOrNot
Letter
RightArrow
Win
Inited
Singleton
State
ConnectorUD
ConnectorLR
RandomPlaceholder
Traced

======
RULES
======


( START one-time initialization )

( If anything not inited, re-init everything)
[ no Inited ] [ Generated ] -> [ no Inited ] [ ]
( Put Singleton at bottom right )
[ no Inited ] [ ] -> [ no Inited ] [ Singleton ]
down [ no Inited ] [ Singleton | ... | Singleton ] -> [ no Inited ] [ | ... | Singleton ]
right [ no Inited ] [ Singleton | ... | Singleton ] -> [ no Inited ] [ | ... | Singleton ]
( Set state to Initializing )
[ Singleton ] -> [ Singleton sI ]

( <RANDOMIZER> )
[sI] [ RandomPlaceholder ] -> [sR] [ RandomPlaceholder ]
( Random connnectors )
[sR] [ RandomConnector ] -> [sR] [ random IntersectionTurnupTurndown ]
[sR] [ RandomConnectorNoTurnup ] -> [sR] [ random IntersectionTurndown ]
[sR] [ RandomConnectorNoTurndown ] -> [sR] [ random IntersectionTurnup ]

( Loop to trace wires )
[sR] [ Singleton ] -> [sR] [ Singleton 1 ]
startloop
[sR] [ RandomShape ] -> [sT] [ RandomShape Traced ]

up [sT] [ Connector | Traced ] -> [sT] [ Connector vu | Traced ]
down [sT] [ Connector | Traced ] -> [sT] [ Connector vd | Traced ]
left [sT] [ Connector | Traced ] -> [sT] [ Connector vl | Traced ]
right [sT] [ Connector | Traced ] -> [sT] [ Connector vr | Traced ]

up [sT] [ | + vu ] -> [sT] [ vu | + vu ]
+ down [sT] [ | + vd ] -> [sT] [ vd | + vd ]
+ left [sT] [ | + vl ] -> [sT] [ vl | + vl ]
+ right [sT] [ | + vr ] -> [sT] [ vr | + vr ]
+ up [sT] [ | / vr ] -> [sT] [ vu | / vr ]
+ down [sT] [ | / vl ] -> [sT] [ vd | / vl ]
+ left [sT] [ | / vd ] -> [sT] [ vl | / vd ]
+ right [sT] [ | / vu ] -> [sT] [ vr | / vu ]
+ up [sT] [ | \ vl ] -> [sT] [ vu | \ vl ]
+ down [sT] [ | \ vr ] -> [sT] [ vd | \ vr ]
+ left [sT] [ | \ vu ] -> [sT] [ vl | \ vu ]
+ right [sT] [ | \ vd ] -> [sT] [ vr | \ vd ]

[sT] [ Visited no Connector ] -> [sT] [ Traced no Connector ]
[sT] [ Visited ] -> [sT] [ ]

([sT] [ Singleton no ShapeOrNot ] -> [sT] [ Singleton random ShapeOrNot ])
[sT] [ Singleton ShapeOrNot ] [ Traced ] -> [sT] [ Singleton ShapeOrNot ] [ Traced ShapeOrNot ]
[sT] [ RandomShape Traced ] -> [sT] [ ]

[sT] [ Singleton 1 ] -> [sR] [ Singleton 2 ]
[sT] [ Singleton 2 ] -> [sR] [ Singleton 3 ]
[sT] [ Singleton 3 ] -> [sR] [ Singleton 4 ]
[sT] [ Singleton 4 ] -> [sR] [ Singleton 5 ]
[sT] [ Singleton 5 ] -> [sR] [ Singleton 6 ]
[sT] [ Singleton 6 ] -> [sR] [ Singleton 1 ]

[sT] -> [sR]
endloop
[sR] [ Singleton ShapeOrNot ] -> [sR] [ Singleton ]
[sR] [ NoShape ] -> [sR] [ ]

( Replace random connectors with empty connectors )
[sR] [ IntersectionTurnupTurndown ] -> [sR] [ Empty ]
[sR] -> [sI]
( </RANDOMIZER> )

( Make borders etc )
[sI] [ Connector ] -> [sI] [ Connector DisconnectedColor ]
[sI] [ no Connector ] -> [sI] [ Outer ]
down [sI] [ | Connector | ] -> [sI] [ ConnectorUD | Connector | ConnectorUD ]
right [sI] [ | Connector | ] -> [sI] [ ConnectorLR | Connector | ConnectorLR ]
down [sI] [ | ConnectorLR | ] -> [sI] [ BorderMid | BorderMid | BorderMid ]
right [sI] [ | ConnectorUD | ] -> [sI] [ BorderMid | BorderMid | BorderMid ]
[sI] [ Connector BorderMid ] -> [sI] [ Connector ]
( Border tile edges )
up [sI] [ BorderMid | Outer ] -> [sI] [ BorderMid BorderU | Outer ]
down [sI] [ BorderMid | Outer ] -> [sI] [ BorderMid BorderD | Outer ]
left [sI] [ BorderMid | Outer ] -> [sI] [ BorderMid BorderL | Outer ]
right [sI] [ BorderMid | Outer ] -> [sI] [ BorderMid BorderR | Outer ]
( Set default connection color )
[sI] [ Border no Shape ] -> [sI] [ Border BorderColor ]
[sI] [ Border Shape ] -> [sI] [ Border Shape ShapeConnectionColor ]

( Set every tile to inited, so init will not be repeated unless level is edited )
[sI] [ ] -> [sI] [ Inited ]
( Change state to Playing )
[ sI ] -> [ sP ]

( END one-time initialization )


[ action Player + ] -> [ Player / ]
[ action Player / ] -> [ Player o ]
[ action Player o ] -> [ Player \ ]
[ action Player \ ] -> [ Player + ]
(In a winning position, moving deletes player to go to next level)
[ Win ] [ moving Player ] -> [ Win ] [ ]
[ > Player | no Connector ] -> [ Player | ]

[ Glow ] -> [ ]
[ Visited ] -> [ ]

up [ Connector | 1 ] -> [ Connector 1u | 1 ]
down [ Connector | 1 ] -> [ Connector 1d | 1 ]
left [ Connector | 1 ] -> [ Connector 1l | 1 ]
right [ Connector | 1 ] -> [ Connector 1r | 1 ]
up [ Connector | 2 ] -> [ Connector 2u | 2 ]
down [ Connector | 2 ] -> [ Connector 2d | 2 ]
left [ Connector | 2 ] -> [ Connector 2l | 2 ]
right [ Connector | 2 ] -> [ Connector 2r | 2 ]
up [ Connector | 3 ] -> [ Connector 3u | 3 ]
down [ Connector | 3 ] -> [ Connector 3d | 3 ]
left [ Connector | 3 ] -> [ Connector 3l | 3 ]
right [ Connector | 3 ] -> [ Connector 3r | 3 ]
up [ Connector | 4 ] -> [ Connector 4u | 4 ]
down [ Connector | 4 ] -> [ Connector 4d | 4 ]
left [ Connector | 4 ] -> [ Connector 4l | 4 ]
right [ Connector | 4 ] -> [ Connector 4r | 4 ]
up [ Connector | 5 ] -> [ Connector 5u | 5 ]
down [ Connector | 5 ] -> [ Connector 5d | 5 ]
left [ Connector | 5 ] -> [ Connector 5l | 5 ]
right [ Connector | 5 ] -> [ Connector 5r | 5 ]
up [ Connector | 6 ] -> [ Connector 6u | 6 ]
down [ Connector | 6 ] -> [ Connector 6d | 6 ]
left [ Connector | 6 ] -> [ Connector 6l | 6 ]
right [ Connector | 6 ] -> [ Connector 6r | 6 ]

up [ | + 1u ] -> [ 1u | + 1u ]
+ down [ | + 1d ] -> [ 1d | + 1d ]
+ left [ | + 1l ] -> [ 1l | + 1l ]
+ right [ | + 1r ] -> [ 1r | + 1r ]
+ up [ | / 1r ] -> [ 1u | / 1r ]
+ down [ | / 1l ] -> [ 1d | / 1l ]
+ left [ | / 1d ] -> [ 1l | / 1d ]
+ right [ | / 1u ] -> [ 1r | / 1u ]
+ up [ | \ 1l ] -> [ 1u | \ 1l ]
+ down [ | \ 1r ] -> [ 1d | \ 1r ]
+ left [ | \ 1u ] -> [ 1l | \ 1u ]
+ right [ | \ 1d ] -> [ 1r | \ 1d ]
+ up [ | + 2u ] -> [ 2u | + 2u ]
+ down [ | + 2d ] -> [ 2d | + 2d ]
+ left [ | + 2l ] -> [ 2l | + 2l ]
+ right [ | + 2r ] -> [ 2r | + 2r ]
+ up [ | / 2r ] -> [ 2u | / 2r ]
+ down [ | / 2l ] -> [ 2d | / 2l ]
+ left [ | / 2d ] -> [ 2l | / 2d ]
+ right [ | / 2u ] -> [ 2r | / 2u ]
+ up [ | \ 2l ] -> [ 2u | \ 2l ]
+ down [ | \ 2r ] -> [ 2d | \ 2r ]
+ left [ | \ 2u ] -> [ 2l | \ 2u ]
+ right [ | \ 2d ] -> [ 2r | \ 2d ]
+ up [ | + 3u ] -> [ 3u | + 3u ]
+ down [ | + 3d ] -> [ 3d | + 3d ]
+ left [ | + 3l ] -> [ 3l | + 3l ]
+ right [ | + 3r ] -> [ 3r | + 3r ]
+ up [ | / 3r ] -> [ 3u | / 3r ]
+ down [ | / 3l ] -> [ 3d | / 3l ]
+ left [ | / 3d ] -> [ 3l | / 3d ]
+ right [ | / 3u ] -> [ 3r | / 3u ]
+ up [ | \ 3l ] -> [ 3u | \ 3l ]
+ down [ | \ 3r ] -> [ 3d | \ 3r ]
+ left [ | \ 3u ] -> [ 3l | \ 3u ]
+ right [ | \ 3d ] -> [ 3r | \ 3d ]
+ up [ | + 4u ] -> [ 4u | + 4u ]
+ down [ | + 4d ] -> [ 4d | + 4d ]
+ left [ | + 4l ] -> [ 4l | + 4l ]
+ right [ | + 4r ] -> [ 4r | + 4r ]
+ up [ | / 4r ] -> [ 4u | / 4r ]
+ down [ | / 4l ] -> [ 4d | / 4l ]
+ left [ | / 4d ] -> [ 4l | / 4d ]
+ right [ | / 4u ] -> [ 4r | / 4u ]
+ up [ | \ 4l ] -> [ 4u | \ 4l ]
+ down [ | \ 4r ] -> [ 4d | \ 4r ]
+ left [ | \ 4u ] -> [ 4l | \ 4u ]
+ right [ | \ 4d ] -> [ 4r | \ 4d ]
+ up [ | + 5u ] -> [ 5u | + 5u ]
+ down [ | + 5d ] -> [ 5d | + 5d ]
+ left [ | + 5l ] -> [ 5l | + 5l ]
+ right [ | + 5r ] -> [ 5r | + 5r ]
+ up [ | / 5r ] -> [ 5u | / 5r ]
+ down [ | / 5l ] -> [ 5d | / 5l ]
+ left [ | / 5d ] -> [ 5l | / 5d ]
+ right [ | / 5u ] -> [ 5r | / 5u ]
+ up [ | \ 5l ] -> [ 5u | \ 5l ]
+ down [ | \ 5r ] -> [ 5d | \ 5r ]
+ left [ | \ 5u ] -> [ 5l | \ 5u ]
+ right [ | \ 5d ] -> [ 5r | \ 5d ]
+ up [ | + 6u ] -> [ 6u | + 6u ]
+ down [ | + 6d ] -> [ 6d | + 6d ]
+ left [ | + 6l ] -> [ 6l | + 6l ]
+ right [ | + 6r ] -> [ 6r | + 6r ]
+ up [ | / 6r ] -> [ 6u | / 6r ]
+ down [ | / 6l ] -> [ 6d | / 6l ]
+ left [ | / 6d ] -> [ 6l | / 6d ]
+ right [ | / 6u ] -> [ 6r | / 6u ]
+ up [ | \ 6l ] -> [ 6u | \ 6l ]
+ down [ | \ 6r ] -> [ 6d | \ 6r ]
+ left [ | \ 6u ] -> [ 6l | \ 6u ]
+ right [ | \ 6d ] -> [ 6r | \ 6d ]


( Mark connectors that have been visited )
[ u ] -> [ u vu ]
[ d ] -> [ d vd ]
[ l ] -> [ l vl ]
[ r ] -> [ r vr ]
up [ vu | ] -> [ vu | vd ]
down [ vd | ] -> [ vd | vu ]
left [ vl | ] -> [ vl | vr ]
right [ vr | ] -> [ vr | vl ]
[ Visited no Connector ] -> [ ]


up [ 1u | no 1d ] -> [ | ]
down [ 1d | no 1u ] -> [ | ]
left [ 1l | no 1r ] -> [ | ]
right [ 1r | no 1l ] -> [ | ]
up [ 2u | no 2d ] -> [ | ]
down [ 2d | no 2u ] -> [ | ]
left [ 2l | no 2r ] -> [ | ]
right [ 2r | no 2l ] -> [ | ]
up [ 3u | no 3d ] -> [ | ]
down [ 3d | no 3u ] -> [ | ]
left [ 3l | no 3r ] -> [ | ]
right [ 3r | no 3l ] -> [ | ]
up [ 4u | no 4d ] -> [ | ]
down [ 4d | no 4u ] -> [ | ]
left [ 4l | no 4r ] -> [ | ]
right [ 4r | no 4l ] -> [ | ]
up [ 5u | no 5d ] -> [ | ]
down [ 5d | no 5u ] -> [ | ]
left [ 5l | no 5r ] -> [ | ]
right [ 5r | no 5l ] -> [ | ]
up [ 6u | no 6d ] -> [ | ]
down [ 6d | no 6u ] -> [ | ]
left [ 6l | no 6r ] -> [ | ]
right [ 6r | no 6l ] -> [ | ]



late [ Empty Player ] -> [ Empty PlayerEmpty ]
late [ Intersection Player ] -> [ Intersection PlayerIntersection ]
late [ Turnup Player ] -> [ Turnup PlayerTurnup ]
late [ Turndown Player ] -> [ Turndown PlayerTurndown ]

( Mark whether position is a win )
late [ Win ] -> [ ]
late [ Player ] -> [ Player Win ]
late [ vu no u ] [ Win ] -> [ vu ] [ ]
late [ vd no d ] [ Win ] -> [ vd ] [ ]
late [ vl no l ] [ Win ] -> [ vl ] [ ]
late [ vr no r ] [ Win ] -> [ vr ] [ ]
( Show arrow if position is a win )
late [ Player ] [ RightArrow ] -> [ Player ] [ ]
late [ Win ] [ Singleton ] -> [ Win ] [ Singleton RightArrow ]


==============
WINCONDITIONS
==============

no Player


=======
LEVELS
=======

.........
..00.00..
.0``+''0.
.0`*+*'0.
..++.++..
.0'&+*`0.
.0''+``0.
..00.00..
.........

........
..0000..
.0`**'0.
.0****0.
.0*&**0.
.0'**`0.
..0000..
........




( intro press x )
.......
.......
...2...
..1p1..
...2...
.......
!@#$$.%

( intro controls )
( intro crossover )
( intro some colors start solved )
.......
.......
.......
...o2..
..1-1..
...2...
.......
.......

( intro multiple lines of same color )
( intro having to change something that looks solved initially )
........
........
...1....
...p....
..1+\1..
....1...
........
........

( boost multiple lines of same color )
( boost having to change something that looks solved initially )
( boost crossover )
........
........
...12...
..1+\...
..1?\1..
....2...
........
........

( boost creating crossover )
.......
.......
.......
.2\.o1.
.1\-\2.
..2.2..
.......
.......

( intro third color)
.......
.......
..32...
.1\\o1.
.3+/p2.
..11...
.......
.......

( intro corner shape )
.......
...2...
..1+o..
.2\++1.
..}/...
...1...
.......

( intro corner connected to self )
.......
....3..
..1+\..
.2+p+2.
..\+/..
...3...
.......

( intro fourth color )
.......
..314..
.2o//1.
../?+..
.4//\1.
..321..
.......



( intro 3-edge shape )
( intro 4-edge shape? )


........
.....2..
../++/1.
.2\-.+2.
..1/+\1.
.....2..
........


........
..000...
.0`*'...
.0'&*'0.
...'*`0.
...000..
........

........
..355...
.3/++...
.1+\-+5.
...++/4.
...254..
........

.......
....2..
..+++1.
.3+-+3.
.1+++..
..2....
.......

.......
..3.2..
.1+++1.
.2+-+3.
..+++..
.......
.......




.......
.......
...1...
.1\+/2.
.2+-/1.
...1...
.......
.......

........
........
....12..
..1/+?..
...+\+1.
...21...
........
........

.......
...1...
.2/+\..
.1+?/..
..+\+3.
..3.2..
.......


.......
..123..
.2+++6.
.4+-+1.
.3+++6.
..455..
.......




( all unsolvable 2x2 levels )

........
........
...11...
..2-+2..
..3++3..
...44...
........
........

.......
..11...
.2\/+2.
..\/\..
.3+/}3.
...44..
.......


........
........
...12...
..2-+1..
..3++3..
...44...
........
........

........
........
...11...
..2-+3..
..3++2..
...44...
........
........

........
........
...12...
..2-+1..
..3++4..
...43...
........
........

........
........
...11...
..2-+3..
..3++4..
...42...
........
........

........
........
...11...
..2-+4..
..3++3..
...42...
........
........

........
........
...13...
..2-+4..
..1++3..
...42...
........
........

........
........
...13...
..2-+4..
..4++3..
...21...
........
........

........
........
...13...
..2-+4..
..4++1..
...23...
........
........

........
........
...13...
..2-+4..
..3++1..
...42...
........
........

........
........
...12...
..3-+4..
..4++3..
...12...
........
........

........
........
...24...
..1-+3..
..3++2..
...41...
........
........

........
........
...14...
..2-+3..
..3++2..
...41...
........
........



