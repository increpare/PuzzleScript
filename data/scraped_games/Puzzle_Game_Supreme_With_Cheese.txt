title Puzzle Game Supreme With Cheese
author ncrecc
run_rules_on_level_start
background_color darkblue
verbose_logging

(my goal is to create a freaking trainwreck of coolness and overabundance of mechanics... this is pretty awesome)

========
OBJECTS
========

Background
Darkblue

Wall (obstruction)
Lightblue Blue Purple
00001
01112
01112
01112
12222

Player (indicates which host you control)
White Lightgrey
.....
..0..
.0.1.
..1..
.....

===========
(ORIGINAL)
===========

White (recieves flow from any kolor and output flow to any kolor, does not need flow for the level to be won)
White Lightgray Black
00001
02021
00111
02121
11111

Budger (pusher, but cannot push two movables at once. ensures compatibility with sokofun levels despite being super lame and hacky)
Grey Darkgrey Red Darkred Black
43234
34043
20412
34143
43234

====================
(HEROES OF SOKOBAN)
====================

Pusher (a host that can push things)
Grey Darkgrey Red Darkred Black
32223
24042
20412
24142
32223

Puller (a host that can pull things)
Grey Darkgrey Lightgreen Green Black
32223
24042
20412
24142
32223

Warper (a host that can swap places with things)
Grey Darkgrey Lightblue Blue Black
32223
24042
20412
24142
32223

Healer (a host who is immune to damage and stoning, and extends this immunity to all adjacent hosts)
Grey Darkgrey Yellow Lightbrown Black
32223
24042
20412
24142
32223

Immunity (for healers and hosts adjacent to them)
Yellow
.....
.....
..0..
.....
.....

Mover (a host who influences the movement of all movable objects in a 5x5 range)
Grey Darkgrey Blue Purple Black
32223
24042
20412
24142
32223

MoverCtrl (extension of mover that indicates who's being moved)
Purple Blue
..0..
.....
0...1
.....
..1..

Morpher (a host who can turn stones to walls, walls to stones, and other living beings to stones)
Grey Darkgrey Orange Brown Black
32223
24042
20412
24142
32223

Deadhost (what it sounds like. level restarts after a host dies)
Grey Darkgrey Black
10001
02220
02220
02220
10001

DangerWall (vanishes when all dangers (lasers, spiketraps, etc.) have been removed from the level. cannot be stoned)
Lightblue Blue Purple Red Darkred
03031
31114
01112
31114
14242

Goal1 (if goals exist, all goals must be stood on by hosts before the level can be won)
White Black
01010
10101
01010
10101
01010

Goal2 (goal1 and goal2 alternate)
White Black
10101
01010
10101
01010
10101

SpikeU (spikes on fragile blocks are my answer to goblins! as for dragons, those are basically already covered by rays)
White
.....
.....
.....
..0..
.000.

SpikeL
White
.....
....0
...00
....0
.....

SpikeD
lightgray
.000.
..0..
.....
.....
.....

SpikeR
lightgray
.....
0....
00...
0....
.....

SpikeBaseU
White
.0.0.
.....
.....
.....
.....

SpikeBaseL
White
.....
0....
.....
0....
.....

SpikeBaseD
lightgray
.....
.....
.....
.....
.0.0.

SpikeBaseR
lightgray
.....
....0
.....
....0
.....

==========
(SOKOBAN)
==========

Crate (movable)
Orange Brown Lightbrown
00001
00011
00111
01111
11111

CrateSpot (indicator that a crate is on a pit)
Brown Orange
.....
.001.
.011.
.111.
.....

Target (if these exist, they must all be plugged by crates for the level to be won)
Black
.....
.000.
.0.0.
.000.
.....

==========
(SOKOLOR)
==========

Blue (movable)
Blue Purple Black
00001
02011
02121
01121
11111

Red (movable)
Red Darkred Black
00001
00021
02121
02111
11111

Yellow (movable)
Yellow Lightbrown Black
00001
00221
00111
02211
11111

Green (movable)
Lightgreen Green Black
00001
02211
00111
01221
11111

Flow (level cannot be won while any kolors are missing flow. kolors spread flow to all other same-type kolors they touch. doubles as a general temp object and "important block fell down hole" texture)
Darkred
..0..
..0..
..0..
.....
..0..

==========
(SOKONEX)
==========

Pin (objects on a pin cannot move)
Pink
.....
.....
..0..
.....
.....

LaserU (lasers are laser blocks from sokonex AND dragons from HOS2)
White
.0.0.
..0..
.....
.....
.....

LaserL
White
.....
0....
.0...
0....
.....

LaserD
White
.....
.....
.....
..0..
.0.0.

LaserR
White
.....
....0
...0.
....0
.....

RayU (i feel terrible about having to make these directional but so it goes. rays kill non-immune hosts and fragile blocks, but are blocked by everything else. rays are generated by lasers and generate new rays in their direction. i took a creative liberty in that the rays in sokofun don't allow players to walk straight into them, but it shouldn't really affect how the level is played (except with HOS mechanics))
White
.0.0.
.0.0.
.0.0.
.0.0.
.0.0.

RayL
White
.....
00000
.....
00000
.....

RayD
White
.0.0.
.0.0.
.0.0.
.0.0.
.0.0.

RayR
White
.....
00000
.....
00000
.....

Fragile (movable, destroyed by lasers and pits. must be italian...)
Grey Darkgrey Black
00201
00211
22122
01211
11211

Large (movable, fills pits)
Lightgrey Grey Black
00001
00211
02221
01211
11111

Hole
Black

=======
LEGEND
=======

. = Background
# = Wall
* = Crate
@ = Crate and Target
O = Target
1 = Blue
2 = Red
3 = Yellow
4 = Green
5 = White
A = Blue and Pin
B = Red and Pin
C = Yellow and Pin
D = Green and Pin
E = White and Pin
6 = Pusher and Player
7 = Budger and Player
8 = Puller and Player
9 = Warper and Player
0 = Healer and Player
" = Mover and Player
' = Morpher and Player
F = Pusher
G = Budger
H = Puller
I = Warper
J = Healer
K = Mover
L = Morpher
% = Fragile
+ = Large
^ = LaserU and Fragile
< = LaserL and Fragile
v = LaserD and Fragile
> = LaserR and Fragile
& = SpikeBaseU and SpikeBaseL and SpikeBaseD and SpikeBaseR and Fragile
_ = Hole
$ = Goal1
! = DangerWall
? = Mover and Player and LaserD

Kolor = Blue or Red or Yellow or Green (because Sokolor is named such)
Block = Crate or Kolor or Fragile or Large or White
Laserproof = Kolor or Crate or Large or Wall or Immunity or Deadhost
Laser = LaserU or LaserL or LaserD or LaserR
SpikeBase = SpikeBaseU or SpikeBaseL or SpikeBaseD or SpikeBaseR
Spike = SpikeU or SpikeL or SpikeD or SpikeR
Ray = RayU or RayL or RayD or RayR
Host = Pusher or Budger or Puller or Warper or Healer or Mover or Morpher
Movable = Block or Host
Goal = Goal1 or Goal2
Hazard = Spike or Ray
Weapon = SpikeBase or Laser
Immovable = Wall or DangerWall
Immutable = DangerWall or Kolor or Crate
Midlayer = Movable or Immovable

=======
SOUNDS
=======

sfx0 59639908 (ray kills host)
sfx1 44313301 (fragile falls into pit)
sfx2 91484504 (fragile destroyed by spike)
sfx3 41887902 (fragile destroyed by ray)
sfx4 97882907 (spike imaples host) 
sfx5 96107307 (move something)
sfx6 89385102 (important thing falls in hole)
sfx7 20323503 (warp)
Large destroy 63980901
Player move 87832307
DangerWall destroy 94501308
cancel 52589507
restart 9780309
undo 16985906
endlevel 36553908

================
COLLISIONLAYERS
================

Background
Hole
Flow
Target, Goal
SpikeU
SpikeL
SpikeD
SpikeR
Deadhost
Midlayer
Player
MoverCtrl
CrateSpot
LaserU, SpikeBaseU
LaserL, SpikeBaseL
LaserD, SpikeBaseD
LaserR, SpikeBaseR
Pin, Immunity
RayU
RayL
RayD
RayR

======
RULES
======

(







FIND OUT WHY 
late [MoverCtrl no Movable] -> []
GETS SPAMMED WHEN MOVING ANYWHERE AS A LASERD MOVER








)

=========
(VISUAL)
=========

late [CrateSpot no Crate] -> []
late [Crate Target] -> [Crate Target CrateSpot] (render the inverted part of the crate)

right [Goal1|Goal1] -> [Goal1|Goal2]
down [Goal1|Goal1] -> [Goal1|Goal2]
right [Goal2|Goal2] -> [Goal2|Goal1]
down [Goal2|Goal2] -> [Goal2|Goal1] (pretty up the goals if they're adjacent)

========
(HOLES)
========

late [Fragile Hole] -> [Hole] sfx1 (cracked blocks fall into holes without filling them)
late [Laser Hole] -> [Hole] (laser emitters also fall into holes. it's important that lasers are not allowed to fire the turn they fall into a hole)

late [Large Hole] -> [] (large blocks turn holes into floor after falling in)

late [Host Hole] [Wall] -> [Hole Flow no Player] [Wall Deadhost] (if some ditz walks into a hole, death! you can't walk into a hole in sokofun, but due to bards/movers there need to be death cases for hosts being forced to walk into hazards. flow indicates when a host or something else important falls in a hole. this and door-slamming is the only way to kill a healer)
late [Crate Hole] [Wall] -> [Hole Flow] [Wall Deadhost] ("essential" blocks (kolors, crates) cannot be pushed into holes in sokofun, but for the reasons above it has to be allowed here)
late [Kolor Hole] [Wall] -> [Hole Flow] [Wall Deadhost] (white isn't important because white isn't required for win)

========
(HOSTS)
========

(some of this code is lifted from heroes of sokoban 3 (because guess what game the hosts are lifted from in general?). host abilities are only applied while the host is active, except in the case of healers. objects on pins cannot be moved or warped. a lot of this is just edge cases)

[Immunity] -> [] (immunity provided by healer needs to be updated. flow temps take care of themselves in kolor)

[Deadhost] -> cancel (got to restart or undo if a host dies)

[> Player Host] -> [> Player > Host] (turns out the player moves hosts)

[> Pusher > Player|Movable no Pin] -> [> Pusher > Player|> Movable] sfx5 (pushers push objects like usual)
[> Movable|Movable no Pin] [Pusher Player] -> [> Movable|> Movable] [Pusher Player] (while a pusher is active, objects can push other objects. essentially pusher can push multiple things at once.)

[> Budger > Player|Movable no Pin] -> [> Budger > Player|> Movable] sfx5 (budgers act identically to pushers, but cannot push multiple things at once. this is to maintain compatibility with sokofun and the like)

=====================
(PUSHING EDGE CASES)
=====================

[> Host > Player no Pusher no Mover no Budger no Warper|Movable no Pin] -> [> Host Player|Movable] (player can't move against something if they can't push, host tries moving anyways in case it's a warper)

[> Budger > Player|Movable|Movable] -> [Budger Player|Movable|Movable] (account for budger)

[> Host > Player|> Movable|Immovable] -> [> Host Player|Movable|Immovable]
[> Host > Player|> Movable|Movable Pin] -> [> Host Player|Movable|Movable Pin] (i'm surprised the rule below doesn't cover this)

[> Host > Player|...|> Movable|Immovable] -> [> Host Player|...|Movable|Immovable]
[> Host > Player|...|> Movable|Movable Pin] -> [> Host Player|...|Movable|Movable Pin] (player can't move against line of objects that refuses to move, host tries moving anyways incase it's a morpher)

[> Host > Player|Immovable] -> [> Host Player|Immovable]
[> Host > Player|Movable Pin] -> [> Host Player|Movable Pin] (player can't move against something immovable, ditto)

========
(HOSTS AGAIN)
========

[< Puller < Player|Movable no Pin] -> [< Puller < Player|< Movable] sfx5 (pullers pull objects towards them)

(a lot of this is directlyrestructured from HOS)
[> Warper] -> [Warper > Flow]
[> Flow|no Midlayer] -> [|> Flow]
[> Flow|Immovable] [Warper] -> [|Immovable] [> Warper]
[> Flow|Movable Pin] [Warper] -> [|Movable Pin] [> Warper]
(trying to get all weapons to move with the object was twisting my mind, so i made a much simpler mockup of the scenario, exported to github, and asked the thinky puzzly discord if they could help me do this. just as i sent the message, i went back and fiddled around a bit more to make sure i wasn't embarrassing myself. i was. i wrote the two lines below near-immediately, deleted the message, and recontextualized them to fit with this game.)
[> Flow|Movable Weapon] [Warper Player] -> [|action Warper Player] [action Background Movable Weapon] sfx7
[action Warper Weapon] [action Background] -> [action Warper] [action background Weapon]
[> Flow|Movable] [Warper Player] -> [|Warper Player] [Movable] sfx7
[> Flow] [Warper] -> [] [> Warper]

late [Host|Healer] -> [Flow Host|Healer] (healers give invisible immunity that does not become visible until a hazard pops up. i'm trying to keep temp counts low so flow is reused here)

[> Morpher|Wall] -> [Morpher|Large] (wall morphs to large)
[> Morpher|Host Flow] -> [Morpher|Host Immunity] (immune hosts can't be stoned, emulating HOS 3)
[> Morpher|Healer] -> [Morpher|Healer Immunity] (healers are immune)
[> Morpher|Immutable] -> [Morpher|Immutable] (some stuff should never be transmuted. this includes win-essential blocks like kolors and crates)
[> Morpher|Movable] -> [Morpher|Wall no Weapon] (other morph stuff; weapons are cleared because we wouldn't want a dragon to still shoot rays after being morphed to a wall do we now? (yeah dragons aren't in HOS 3 but whatever))

late [Player no Host] -> [Deadhost] (when host is forcibly removed by a door)

======================
(BARD/MOVER FUN TIME)
======================

(moving)
[> Mover Player no MoverCtrl] -> [> MoverCtrl > Mover Player action Flow]
[> MoverCtrl] [MoverCtrl] -> [> MoverCtrl] [> MoverCtrl]
startloop
[> MoverCtrl Movable Weapon|no Midlayer no Mover] -> [| Movable Weapon Sfx7]
[> MoverCtrl Movable no Weapon| no Midlayer no Mover] -> [| Movable Sfx7]
[> MoverCtrl Mover Player Weapon action Flow| no Midlayer no Mover] -> [| Mover Player Weapon]
[> MoverCtrl Mover Player no Weapon action Flow| no Midlayer no Mover] -> [| Mover Player]
endloop

[MoverCtrl] -> []
[action Flow Mover] -> cancel

(preparing MoverCtrls)
[no MoverCtrl | no MoverCtrl | Mover] -> [^ MoverCtrl | ^ MoverCtrl | Mover]
[no MoverCtrl | Mover] -> [^ MoverCtrl | Mover]
[> MoverCtrl | no MoverCtrl | no MoverCtrl] -> [MoverCtrl | MoverCtrl | MoverCtrl]
[> MoverCtrl | no MoverCtrl] -> [MoverCtrl | MoverCtrl]
[> MoverCtrl] -> [MoverCtrl]

(make this make sense)

====================
(HAZARDS & WEAPONS)
====================

[Weapon > Midlayer] -> [> Weapon > Midlayer] (weapons move with whatever they are mounted on)
late [Hazard] -> [] (hazard positions must be updated)

late up [LaserU|] -> [LaserU|RayU]
late left [LaserL|] -> [LaserL|RayL]
late down [LaserD|] -> [LaserD|RayD]
late right [LaserR|] -> [LaserR|RayR] (fire rays from laser emitters)

late up [SpikeBaseU|] -> [SpikeBaseU|SpikeU]
late left [SpikeBaseL|] -> [SpikeBaseL|SpikeL]
late down [SpikeBaseD|] -> [SpikeBaseD|SpikeD]
late right [SpikeBaseR|] -> [SpikeBaseR|SpikeR] (spike bases hold spikes)

startloop
late [Ray Healer] -> [Healer Immunity] (rays cannot be on top of healers, who are immune)
late [Host Flow Ray] -> [Host Immunity] (protected hosts are immune to rays)
late [Ray Laserproof] -> [Laserproof] (rays cannot be on top of laserproof objects)
late [Ray Fragile] -> [Ray no Weapon] sfx3 (rays destroy fragile blocks)
late [Host Ray no Immunity] -> [Deadhost no Player] sfx0 (rays kill hosts who are not immune)
late up [RayU|no Laserproof] -> [RayU|RayU]
late left [RayL|no Laserproof] -> [RayL|RayL]
late down [RayD|no Laserproof] -> [RayD|RayD]
late right [RayR|no Laserproof] -> [RayR|RayR] (rays try to advance)
endloop


late [Host Flow Spike] -> [Host Immunity Spike]
late [Healer Hazard] -> [Healer Hazard Immunity]
late [Host Spike no Immunity] -> [Deadhost Spike no Player] sfx4 (spikes try killing people and all that)

(these rules are specifically positioned as to emulate an odd behavior in HOS: pushing a goblin into another goblin while protected for the current tile will kill you and the goblins next turn. replace "goblin" with "spike block" of course. if you want everything to feel nicer and smoother, move the three rules above below the two rules below)

late [Spike Fragile] -> [Spike no Weapon] sfx2
late [Weapon no Midlayer] -> [] (weapons must be mounted on something)

late up [no LaserU no RayU|RayU] -> [|]
late left [no LaserL no RayL|RayL] -> [|]
late down [no LaserD no RayD|RayD] -> [|]
late right [no LaserR no RayR|RayR] -> [|] (clean up rays from destroyed laser emitters)

late up [no SpikeBaseU|SpikeU] -> [|]
late left [no SpikeBaseL|SpikeL] -> [|]
late down [no SpikeBaseD|SpikeD] -> [|]
late right [no SpikeBaseR|SpikeR] -> [|] (clean up spikes from ded spike things)

late [DangerWall] -> [Flow DangerWall] (every turn, dangerwalls try to disappear)
late [Flow DangerWall] [Weapon no Host] -> [DangerWall] [Weapon] (dangerwalls fail to disappear if there exists at least one weapon and it is not tied to a host (because there's no way to rid a host of a weapon without killing the host and losing))
late [Flow DangerWall] -> [] (if dangerwalls do not detect weapons, they disappear)

late [MoverCtrl no Movable] -> [] (make sure mover isn't trying to move destroyed stuff)

=========
(KOLORS)
=========

[Flow] -> [] ("flow" is updated each turn)

random [Blue] -> [Blue Flow] 
random [Red] -> [Red Flow]
random [Yellow] -> [Yellow Flow]
random [Green] -> [Green Flow] (flow is spawned on a random color block for each color in the level. this check is only started when a block is pushed, as to eliminate unneeded checks... still wonder if this could be reduced to 1 rule)

[Flow > Block] -> [> Flow > Block] (flow moves with moving blocks, so that it can not be left behind and turn what should be a winning push into a mysterious "nothing is happening!" scenario)

late [Flow Blue|Blue] -> [Flow Blue|Flow Blue]
late [Flow Red|Red] -> [Flow Red|Flow Red]
late [Flow Yellow|Yellow] -> [Flow Yellow|Flow Yellow]
late [Flow Green|Green] -> [Flow Green|Flow Green] (flow "spreads" to adjacent blocks of same color. this repeats until it has no more blocks to spread to. level is winnable while all blocks on the map can be flowed to from an arbitrary flow placement, i.e. all blocks of the same color are touching)
late [Flow White|White] -> [Flow White|Flow White]
late [Flow Kolor|White] -> [Flow Kolor|Flow White] 
late [Flow White|Kolor] -> [Flow White|Flow Kolor] (white is a universal flow transmitter)

==============
WINCONDITIONS
==============

All Target on Crate
All Kolor on Flow
All Goal on Host
No Deadhost

=======
LEVELS
=======

message COMBINATION OF THE SOKOBAN CLONE/EXPANSION "SOKOFUN" (CONTAINING STANDARD SOKOBAN, SOKOLOR, AND A GAME IT CALLS "SOKONEX") AND THE "HEROES OF SOKOBAN" SERIES

..####..
###.1###
#3.1.2.#
#.374.2#
###4.###
..####..

#########
#$......#
#.......#
#.7.v...#
#.......#
#..1....#
#.......#
#########

#########
#$......#
#.......#
#..1....#
#.".....#
#...^...#
#.......#
#########

#########
#$......#
#.......#
#.?.....#
#.......#
#..1....#
#.......#
#########