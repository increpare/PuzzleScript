title Filler
author HugoBDesigner
homepage hugobdesigner.blogspot.com
background_color #DEDEDE
key_repeat_interval 0.17
text_color #232323
noaction
run_rules_on_level_start (For decorations only)
require_player_movement

(
	"Filler" is a game I've wanted to work on ever since I was a kid.
    The very first version of it was made in Excel, back when I didn't
    even know programming. A few years later, I started working on it
    through a 2D Framework called "LÖVE2D", and I got relatively far with
    it, but ended up abandoning it. Here's how far I went with it:
    	https://twitter.com/HugoBDesigner/status/772669618238418944
    
    I doubt this code is the most optimized it can be, but I'm glad I
    got everything working on my first ever attempt at making a game here.
    Hope you guys enjoy it! Feel free to give me any feedback on it.
)

========
OBJECTS
========

Background
#C0FF80

BackgroundDarker
#B6F078

BackgroundVisited
#80FFFF

BackgroundVisitedDarker
#78F0EE

BackgroundVisited2
#DFBFFF

BackgroundVisited2Darker
#D1B4F0

Deco
Transparent

Marker
Transparent

(These are visible in-editor only, to help you identify which tiles they are)
DecoL
Gray
.....
.0...
.0...
.0...
.....

DecoR
Gray
.....
...0.
...0.
...0.
.....

DecoU
Gray
.....
.000.
.....
.....
.....

DecoD
Gray
.....
.....
.....
.000.
.....

("Empty" controls whether the whole board has been walked through)
Empty
Black
.....
.....
..0..
.....
.....

(Temp is the trail the player leaves behind whenever they move)
Temp
Black
.....
..0..
.0.0.
..0..
.....

(Directional Temps are just to assign the direction the player moved from that tile. This is used later to draw the corresponding trail corners and alike)
TempU
Black
..0..
.0.0.
.....
.....
.....

TempD
Black
.....
.....
.....
.0.0.
..0..

TempL
Black
.....
.0...
0....
.0...
.....

TempR
Black
.....
...0.
....0
...0.
.....

(A Start dummy was the best alternative I found for the first move. Also allows me to add fancy starts to the trail)
Start
Black Red
.....
..1..
.111.
..1..
.....

Target 
DarkRed Red Brown
00000
01110
01210
01110
00000

TargetVisited
#292973 #2626BF #22A3A3
00000
01110
01210
01110
00000

TargetVisited2
#4E2973 #7326BF #A32263
00000
01110
01210
01110
00000


Wall
#DEDEDE

(Dropshadow effect around the map)
ShadowL
#C0BBCE
.....
.....
0....
0....
.....

ShadowL2
#C0BBCE
.....
0....
.....
.....
.....

ShadowU
#C0BBCE
..00.
.....
.....
.....
.....

ShadowU2
#C0BBCE
.0...
.....
.....
.....
.....

ShadowR
#C0BBCE
.....
.....
....0
....0
.....

ShadowR2
#C0BBCE
.....
....0
.....
.....
.....

ShadowD
#C0BBCE
.....
.....
.....
.....
..00.

ShadowD2
#C0BBCE
.....
.....
.....
.....
.0...

ShadowC1
#C0BBCE
0....
.....
.....
.....
.....

ShadowC2
#C0BBCE
....0
.....
.....
.....
.....

ShadowC3
#C0BBCE
.....
.....
.....
.....
0....


ShadowC4
#C0BBCE
.....
.....
.....
.....
....0

(Finally the player itself!)
Player1
#0080ff #1990ff #4ca8ff
.000.
01110
01210
01110
.000.

Player2
#8000FF #8819FF #A34DFF
.000.
01110
01210
01110
.000.

(Official trail parts)
BodyH
LightBlue #9fd6ee
.....
00000
11111
00000
.....

BodyV
LightBlue #9fd6ee
.010.
.010.
.010.
.010.
.010.

BodyL
LightBlue #9fd6ee
.010.
.0100
.0011
..000
.....

BodyJ
LightBlue #9fd6ee
.010.
0010.
1100.
000..
.....

BodyF
LightBlue #9fd6ee
.....
..000
.0011
.0100
.010.

Body7
LightBlue #9fd6ee
.....
000..
1100.
0010.
.010.

(Start of the trail)
BodyLeft
LightBlue #9fd6ee
.....
000..
1110.
000..
.....

BodyRight
LightBlue #9fd6ee
.....
..000
.0111
..000
.....

BodyUp
LightBlue #9fd6ee
.010.
.010.
.010.
..0..
.....

BodyDown
LightBlue #9fd6ee
.....
..0..
.010.
.010.
.010.

(Crossroads can be crossed twice, but only in straight lines)
Cross
#408000 #80ff80
0.1.0
..1..
11111
..1..
0.1.0

CrossUp
#408000 #80ff80
0.1.0
..1..
11111
..1..
0.1.0

CrossDown
#408000 #80ff80
0.1.0
..1..
11111
..1..
0.1.0

CrossLeft
#408000 #80ff80
0.1.0
..1..
11111
..1..
0.1.0

CrossRight
#408000 #80ff80
0.1.0
..1..
11111
..1..
0.1.0

(Player Walked through crossroad)
CrossH
#408000 #b2dcef #9fd6ee #9efb7e #99edb7 #8feab7 #80ff80
01210
34543
66666
34543
01210

CrossV
#408000 #b2dcef #9fd6ee #9efb7e #99edb7 #8feab7 #80ff80
03630
14641
25652
14641
03630

CrossBothH
#1DADFF #9cc1d1 #8bbbd1 #b2dcef #9fd6ee
01210
33333
44444
33333
01210

CrossBothV
#1DADFF #b2dcef #9fd6ee #9cc1d1 #8bbbd1
01210
31213
41214
31213
01210

CrossBoth2H
#9D1CFF #9cc1d1 #8bbbd1 #b2dcef #9fd6ee
01210
33333
44444
33333
01210

CrossBoth2V
#9D1CFF #b2dcef #9fd6ee #9cc1d1 #8bbbd1
01210
31213
41214
31213
01210

CrossBlockedH
#841100 #80ff80
0.1.0
0.1.0
01110
0.1.0
0.1.0

CrossBlockedBoth
#841100 #80ff80
00000
0.1.0
01110
0.1.0
00000

CrossBlockedHFilled
#841100 #b2dcef #9fd6ee #99edb7 #8feab7 #80ff80
01210
03430
05550
03430
01210

CrossBlockedV
#841100 #80ff80
00000
..1..
11111
..1..
00000

CrossBlockedVFilled
#841100 #b2dcef #9fd6ee #99edb7 #8feab7 #80ff80
00000
13531
24542
13531
00000

(Oh yeah baby, we're adding portals)
Portal1
#00dede #00ffff #80ffff #bfffff
.010.
01210
12321
01210
.010.

Portal2
#ff8000 #ffa040 #ffbf40 #ffd68c
.010.
01210
12321
01210
.010.

Portal3
#6F00DE #8000FF #C080FF #DFBFFF
.010.
01210
12321
01210
.010.

(Directional walls, cuz I'm lazy)
WallL
#DEDEDE
0....
0....
0....
0....
0....

WallR
#DEDEDE
....0
....0
....0
....0
....0

WallU
#DEDEDE
00000
.....
.....
.....
.....

WallD
#DEDEDE
.....
.....
.....
.....
00000

(Ice Ice Baby)
Ice
#ffffff #c0ffff #c0ffc0
00121
01210
12100
21001
10012

Ice0Darker
#f0f0f0 #a6efef #a6efb0
00121
01210
12100
21001
10012

Ice1
#ffffff #c0ffff #D9FFFF
00121
01210
12100
21001
10012

Ice1Darker
#f0f0f0 #a6efef #C9F0EF
00121
01210
12100
21001
10012

Ice2
#ffffff #c0ffff #ECD9FF
00121
01210
12100
21001
10012

Ice2Darker
#f0f0f0 #a6efef #DBC9F0
00121
01210
12100
21001
10012


=======
LEGEND
=======

p = Player1 and Start
q = Player2 and Start
. = Empty
# = Wall
s = Ice and Empty
o = Target and Empty
+ = Cross and Empty
1 = Portal1 and Empty
2 = Portal2 and Empty
3 = Portal3 and Empty
l = WallL and Empty and DecoL
u = WallU and Empty and DecoU
r = WallR and Empty and DecoR
d = WallD and Empty and DecoD
┌ = WallL and WallU and Empty and DecoL and DecoU
┐ = WallU and WallR and Empty and DecoU and DecoR
└ = WallL and WallD and Empty and DecoL and DecoD
┘ = WallD and WallR and Empty and DecoD and DecoR
═ = WallU and WallD and Empty and DecoU and DecoD
║ = WallL and WallR and Empty and DecoL and DecoR

Player = Player1 or Player2
Portal = Portal1 or Portal2 or Portal3
Crossroad = Cross or CrossH or CrossV or CrossBothH or CrossBothV or CrossBlockedH or CrossBlockedHFilled or CrossBlockedV or CrossBlockedVFilled

=======
SOUNDS
=======
Undo 92921307
SFX0 1989707 (Player moved)
SFX1 98104107 (Through Crossroad)
SFX2 64072704 (Blocked Crossroad)
SFX3 64771702 (Walking through portals)
EndLevel 62328103
Restart 18418708
StartGame 83159308
CloseMessage 51463506

================
COLLISIONLAYERS
================

Marker
Empty, Start
Deco
DecoL
DecoR
DecoU
DecoD
Temp, TempU, TempD, TempL, TempR
Background
BackgroundVisited BackgroundVisited2
BackgroundDarker BackgroundVisited2Darker
BackgroundVisitedDarker
Ice
Ice1, Ice2
Ice0Darker Ice1Darker Ice2Darker
Portal1, Portal2, Portal3
Cross, CrossUp, CrossDown, CrossLeft, CrossRight, CrossBlockedH, CrossBlockedV, CrossBlockedBoth, CrossBlockedHFilled, CrossBlockedVFilled, CrossBothH, CrossBothV
CrossBoth2H, CrossBoth2V
Target
TargetVisited, TargetVisited2
WallU
WallD
WallL
WallR
Wall, BodyH, BodyV, BodyL, BodyJ, BodyF, Body7, BodyLeft, BodyRight, BodyUp, BodyDown
ShadowU
ShadowL
ShadowD
ShadowR
ShadowC1
ShadowC2
ShadowC3
ShadowC4
ShadowR2
ShadowD2
ShadowL2
ShadowU2
Player
CrossH, CrossV

======
RULES
======


(Let's see if I can handle decorations without manually inserting them)

(Checkerboard background tiles)
RIGHT[No Deco | No Deco] -> [No Deco | Deco]
DOWN[No Deco | No Deco] -> [No Deco | Deco]
RIGHT[Deco | Deco] -> [Deco | ]
DOWN[Deco | Deco] -> [Deco | ]
[Deco No Wall No BackgroundDarker No BackgroundVisitedDarker No BackgroundVisited2Darker] -> [Deco BackgroundDarker No Wall]
[Deco Ice No Ice0Darker No Ice1Darker No Ice2Darker] -> [Deco Ice Ice0Darker]


(Making walls THICC)
RIGHT[WallR | No Wall No WallL No Portal No Target No Crossroad] -> [WallR | No Wall WallL]
RIGHT[No Wall No WallR No Portal No Target No Crossroad | WallL] -> [No Wall WallR | WallL]
DOWN[WallD | No Wall No WallU No Portal No Target No Crossroad] -> [WallD | No Wall WallU]
DOWN[No Wall No WallD No Portal No Target No Crossroad | WallU] -> [No Wall WallD | WallU]


(Casting shadow from level)
(
	[C1] [U2] [U1 U1] [C2]
    [L2]              [R2]
    [L1               [R1
     L1]               R1]
    [C3] [D2] [D1 D1] [C4]
)

(C1)
RIGHT[No Wall No WallD No WallR | ] -> [ | Marker]
DOWN[Marker | WallL No ShadowC1] -> [Marker | WallL ShadowC1]
DOWN[Marker | WallU No ShadowC1] -> [Marker | WallU ShadowC1]
DOWN[Marker | Wall No ShadowC1] -> [Marker | Wall ShadowC1]
[Marker] -> []
(U2)
DOWN[No Wall No WallD No WallL | Wall No ShadowU2] -> [ | Wall ShadowU2]
DOWN[No Wall No WallD No WallL | WallU No ShadowU2] -> [ | WallU ShadowU2]
(U1)
DOWN[No Wall No WallD | Wall No ShadowU] -> [ | Wall ShadowU]
DOWN[No Wall No WallD | WallU No ShadowU] -> [ | WallU ShadowU]
(C2)
DOWN[No Wall No WallD | Wall No ShadowC2] -> [ | Wall ShadowC2]
DOWN[No Wall No WallD | WallU No ShadowC2] -> [ | WallU ShadowC2]
DOWN[No Wall No WallD | WallR  No ShadowC2] -> [ | WallR ShadowC2]
(L2)
RIGHT[No Wall No WallU No WallR | Wall No ShadowL2] -> [ | Wall ShadowL2]
RIGHT[No Wall No WallU No WallR | WallL No ShadowL2] -> [ | WallL ShadowL2]
(R2)
[No Wall No WallU WallR No ShadowR2] -> [WallR ShadowR2]
(L1)
RIGHT[No Wall No WallR | Wall No ShadowL] -> [ | Wall ShadowL]
RIGHT[No Wall No WallR | WallL No ShadowL] -> [ | WallL ShadowL]
(R1)
[No Wall WallR No ShadowR] -> [WallR ShadowR]
(C3)
RIGHT[No Wall No WallR | Wall No ShadowC3] -> [ | Wall ShadowC3]
RIGHT[No Wall No WallR | WallL No ShadowC3] -> [ | WallL ShadowC3]
RIGHT[No Wall No WallR | WallD No ShadowC3] -> [ | WallD ShadowC3]
(D2)
[No Wall No WallL WallD No ShadowD2] -> [WallD ShadowD2]
(D1)
[No Wall WallD No ShadowD] -> [WallD ShadowD]
(C4)
[No Wall WallR No ShadowC4] -> [WallR ShadowC4]
[No Wall WallD No ShadowC4] -> [WallD ShadowC4]


(
	"But Hugo," I hear you ask, "why are you preparing yourself for so
    many edge cases that never happen within your levels"? Glad you asked:
    because... erm... ummmm... I guess I can't live with the idea that if
    someone was to try something different, it might break. After all, people
    *will* (or at least *should*) be able to crack open my code and try to
    make levels for this game, and I'd be quite sad if it didn't work.
)

(Handles all player collisions)
[> Player | Player] -> [Player | Player]
[> Player | Wall] -> [Player | Wall]
DOWN[> Player WallD] -> [Player WallD]
DOWN[> Player | WallU] -> [Player | WallU]
RIGHT[> Player WallR] -> [Player WallR]
RIGHT[> Player | WallL] -> [Player | WallL]
UP[> Player WallU] -> [Player WallU]
UP[> Player | WallD] -> [Player | WallD]
LEFT[> Player WallL] -> [Player WallL]
LEFT[> Player | WallR] -> [Player | WallR]
[> Player | BodyH] -> [Player | BodyH]
[> Player | BodyV] -> [Player | BodyV]
[> Player | BodyL] -> [Player | BodyL]
[> Player | BodyF] -> [Player | BodyF]
[> Player | BodyJ] -> [Player | BodyJ]
[> Player | Body7] -> [Player | Body7]
[> Player | BodyLeft] -> [Player | BodyLeft]
[> Player | BodyRight] -> [Player | BodyRight]
[> Player | BodyUp] -> [Player | BodyUp]
[> Player | BodyDown] -> [Player | BodyDown]
[> Player | CrossBlockedBoth] -> [Player | CrossBlockedBoth]
[> Player | CrossBlockedHFilled] -> [Player | CrossBlockedHFilled]
[> Player | CrossBlockedVFilled] -> [Player | CrossBlockedVFilled]
[> Player | CrossBothH] -> [Player | CrossBothH]
[> Player | CrossBothV] -> [Player | CrossBothV]


(I'm gonna hate myself for this, but this is a lazy fix for
two players crossing the same crossroad)
HORIZONTAL[> Player | CrossH] -> [> Player | CrossH Marker]
DOWN[CrossH Marker | Left Player] -> [CrossH | Left Player BodyJ]
DOWN[CrossH Marker | Right Player] -> [CrossH | Right Player BodyL]
DOWN[Left Player | CrossH Marker] -> [Left Player Body7 | CrossH]
DOWN[Right Player | CrossH Marker] -> [Right Player BodyF | CrossH]
[Marker] -> []

VERTICAL[> Player | CrossV] -> [> Player | CrossV Marker]
RIGHT[CrossV Marker | Up Player] -> [CrossV | Up Player BodyJ]
RIGHT[CrossV Marker | Down Player] -> [CrossV | Down Player Body7]
RIGHT[Up Player | CrossV Marker] -> [Up Player BodyL | CrossV]
RIGHT[Down Player | CrossV Marker] -> [Down Player BodyF | CrossV Marker]
[Marker] -> []


(Then do the PROPER crossroad management)
HORIZONTAL[> Player | CrossV] -> [Player | CrossV]
VERTICAL[> Player | CrossH] -> [Player | CrossH]
HORIZONTAL[> Player | CrossBlockedH Empty] -> [Player | CrossBlockedH]
VERTICAL[> Player | CrossBlockedV Empty] -> [Player | CrossBlockedV]
HORIZONTAL[> Player | Cross] -> [> Player | CrossRight]
VERTICAL[> Player | Cross] -> [> Player | CrossUp]
HORIZONTAL[> Player | CrossH] -> [> Player | CrossLeft]
VERTICAL[> Player | CrossV] -> [> Player | CrossDown]


(Leaves a Temp where the player moved from)
UP[> Player | Empty] -> [> Player > TempU | Temp]SFX0
DOWN[> Player | Empty] -> [> Player > TempD | Temp]SFX0
LEFT[> Player | Empty] -> [> Player > TempL | Temp]SFX0
RIGHT[> Player | Empty] -> [> Player > TempR | Temp]SFX0

(At the start, place a directional tail)
late RIGHT[Player | Start No Player No TempR No TempU No TempD] -> [Player | BodyLeft]
late RIGHT[Start No Player No TempL No TempU No TempD | Player] -> [BodyRight | Player]
late DOWN[Player | Start No Player No TempD No TempL No TempR] -> [Player | BodyUp]
late DOWN[Start No Player No TempU No TempL No TempR| Player] -> [BodyDown | Player]

(Place horizontal trails)
late RIGHT[BodyH | TempR] -> [BodyH | BodyH]
late RIGHT[BodyL | TempR] -> [BodyL | BodyH]
late RIGHT[BodyF | TempR] -> [BodyF | BodyH]
late RIGHT[BodyRight | TempR] -> [BodyRight | BodyH]
late RIGHT[CrossV | TempR] -> [CrossV | BodyH]
late RIGHT[CrossBlockedVFilled | TempR] -> [CrossBlockedVFilled | BodyH]
late RIGHT[CrossBothH | TempR] -> [CrossBothH | BodyH]
late RIGHT[TempL | BodyH] -> [BodyH | BodyH]
late RIGHT[TempL | Body7] -> [BodyH | Body7]
late RIGHT[TempL | BodyJ] -> [BodyH | BodyJ]
late RIGHT[TempL | BodyLeft] -> [BodyH | BodyLeft]
late RIGHT[TempL | CrossV] -> [BodyH | CrossV]
late RIGHT[TempL | CrossBlockedVFilled] -> [BodyH | CrossBlockedVFilled]
late RIGHT[TempL | CrossBothH] -> [BodyH | CrossBothH]

(Place vertical trails)
late DOWN[BodyV | TempD] -> [BodyV | BodyV]
late DOWN[BodyF | TempD] -> [BodyF | BodyV]
late DOWN[Body7 | TempD] -> [Body7 | BodyV]
late DOWN[BodyDown | TempD] -> [BodyDown | BodyV]
late DOWN[CrossH | TempD] -> [CrossH | BodyV]
late DOWN[CrossBlockedHFilled | TempD] -> [CrossBlockedHFilled | BodyV]
late DOWN[CrossBothV | TempD] -> [CrossBothV | BodyV]
late DOWN[TempU | BodyV] -> [BodyV | BodyV]
late DOWN[TempU | BodyL] -> [BodyV | BodyL]
late DOWN[TempU | BodyJ] -> [BodyV | BodyJ]
late DOWN[TempU | BodyUp] -> [BodyV | BodyUp]
late DOWN[TempU | CrossH] -> [BodyV | CrossH]
late DOWN[TempU | CrossBlockedHFilled] -> [BodyV | CrossBlockedHFilled]
late DOWN[TempU | CrossBothV] -> [BodyV | CrossBothV]

(Place corner F - a.k.a Up to Right)
late RIGHT[TempD | BodyH] -> [BodyF | BodyH]
late RIGHT[TempD | Body7] -> [BodyF | Body7]
late RIGHT[TempD | BodyJ] -> [BodyF | BodyJ]
late RIGHT[TempD | BodyLeft] -> [BodyF | BodyLeft]
late RIGHT[TempD | CrossV] -> [BodyF | CrossV]
late RIGHT[TempD | CrossBlockedVFilled] -> [BodyF | CrossBlockedVFilled]
late RIGHT[TempD | CrossBothH] -> [BodyF | CrossBothH]
late DOWN[TempR | BodyV] -> [BodyF | BodyV]
late DOWN[TempR | BodyL] -> [BodyF | BodyL]
late DOWN[TempR | BodyJ] -> [BodyF | BodyJ]
late DOWN[TempR | BodyUp] -> [BodyF | BodyUp]
late DOWN[TempR | CrossH] -> [BodyF | CrossH]
late DOWN[TempR | CrossBlockedHFilled] -> [BodyF | CrossBlockedHFilled]
late DOWN[TempR | CrossBothV] -> [BodyF | CrossBothV]

(Place corner L - a.k.a Down to Right)
late RIGHT[TempU | BodyH] -> [BodyL | BodyH]
late RIGHT[TempU | BodyJ] -> [BodyL | BodyJ]
late RIGHT[TempU | Body7] -> [BodyL | Body7]
late RIGHT[TempU | BodyLeft] -> [BodyL | BodyLeft]
late RIGHT[TempU | CrossV] -> [BodyL | CrossV]
late RIGHT[TempU | CrossBlockedVFilled] -> [BodyL | CrossBlockedVFilled]
late RIGHT[TempU | CrossBothH] -> [BodyL | CrossBothH]
late DOWN[BodyV | TempR] -> [BodyV | BodyL]
late DOWN[BodyF | TempR] -> [BodyF | BodyL]
late DOWN[Body7 | TempR] -> [Body7 | BodyL]
late DOWN[BodyDown | TempR] -> [BodyDown | BodyL]
late DOWN[CrossH | TempR] -> [CrossH | BodyL]
late DOWN[CrossBlockedHFilled | TempR] -> [CrossBlockedHFilled | BodyL]
late DOWN[CrossBothV | TempR] -> [CrossBothV | BodyL]

(Place corner 7 - a.k.a Up to Left)
late RIGHT[BodyH | TempD] -> [BodyH | Body7]
late RIGHT[BodyL | TempD] -> [BodyL | Body7]
late RIGHT[BodyF | TempD] -> [BodyF | Body7]
late RIGHT[BodyRight | TempD] -> [BodyRight | Body7]
late RIGHT[CrossV | TempD] -> [CrossV | Body7]
late RIGHT[CrossBlockedVFilled | TempD] -> [CrossBlockedVFilled | Body7]
late RIGHT[CrossBothH | TempD] -> [CrossBothH | Body7]
late DOWN[TempL | BodyV] -> [Body7 | BodyV]
late DOWN[TempL | BodyJ] -> [Body7 | BodyJ]
late DOWN[TempL | BodyL] -> [Body7 | BodyL]
late DOWN[TempL | BodyUp] -> [Body7 | BodyUp]
late DOWN[TempL | CrossH] -> [Body7 | CrossH]
late DOWN[TempL | CrossBlockedHFilled] -> [Body7 | CrossBlockedHFilled]
late DOWN[TempL | CrossBothV] -> [Body7 | CrossBothV]

(Place corner J - a.k.a Down to Left)
late RIGHT[BodyH | TempU] -> [BodyH | BodyJ]
late RIGHT[BodyL | TempU] -> [BodyL | BodyJ]
late RIGHT[BodyF | TempU] -> [BodyF | BodyJ]
late RIGHT[BodyRight | TempU] -> [BodyRight | BodyJ]
late RIGHT[CrossV | TempU] -> [CrossV | BodyJ]
late RIGHT[CrossBlockedVFilled | TempU] -> [CrossBlockedVFilled | BodyJ]
late RIGHT[CrossBothH | TempU] -> [CrossBothH | BodyJ]
late DOWN[BodyV | TempL] -> [BodyV | BodyJ]
late DOWN[BodyF | TempL] -> [BodyF | BodyJ]
late DOWN[Body7 | TempL] -> [Body7 | BodyJ]
late DOWN[BodyDown | TempL] -> [BodyDown | BodyJ]
late DOWN[CrossH | TempL] -> [CrossH | BodyJ]
late DOWN[CrossBlockedHFilled | TempL] -> [CrossBlockedHFilled | BodyJ]
late DOWN[CrossBothV | TempL] -> [CrossBothV | BodyJ]


startloop
(Blocking crossroads)
late VERTICAL[Cross | BodyH] -> [CrossBlockedV | BodyH]SFX2
late VERTICAL[Cross | BodyLeft] -> [CrossBlockedV | BodyLeft]SFX2
late VERTICAL[Cross | BodyRight] -> [CrossBlockedV | BodyRight]SFX2
late DOWN[Cross | Body7] -> [CrossBlockedV | Body7]SFX2
late DOWN[Cross | BodyF] -> [CrossBlockedV | BodyF]SFX2
late DOWN[Cross | BodyDown] -> [CrossBlockedV | BodyDown]SFX2
late DOWN[BodyL | Cross] -> [BodyL | CrossBlockedV]SFX2
late DOWN[BodyJ | Cross] -> [BodyJ | CrossBlockedV]SFX2
late DOWN[BodyUp | Cross] -> [BodyUp | CrossBlockedV]SFX2
late HORIZONTAL[Cross | BodyV] -> [CrossBlockedH | BodyV]SFX2
late HORIZONTAL[Cross | BodyUp] -> [CrossBlockedH | BodyUp]SFX2
late HORIZONTAL[Cross | BodyDown] -> [CrossBlockedH | BodyDown]SFX2
late RIGHT[Cross | BodyL] -> [CrossBlockedH | BodyL]SFX2
late RIGHT[Cross | BodyF] -> [CrossBlockedH | BodyF]SFX2
late RIGHT[Cross | BodyRight] -> [CrossBlockedH | BodyRight]SFX2
late RIGHT[Body7 | Cross] -> [Body7 | CrossBlockedH]SFX2
late RIGHT[BodyJ | Cross] -> [BodyJ | CrossBlockedH]SFX2
late RIGHT[BodyLeft | Cross] -> [BodyLeft | CrossBlockedH]SFX2
late HORIZONTAL[Player | Cross | Player] -> [Player | CrossBlockedH | Player]SFX2
late VERTICAL[Player | Cross | Player] -> [Player | CrossBlockedV | Player]SFX2
late HORIZONTAL[Player | CrossBlockedV | Player] -> [Player | CrossBlockedBoth | Player]SFX2
late VERTICAL[Player | CrossBlockedH | Player] -> [Player | CrossBlockedBoth | Player]SFX2

(Blocking half-crossed crossroads)
late VERTICAL[CrossV | BodyH] -> [CrossBlockedVFilled | BodyH]SFX2
late VERTICAL[CrossV | BodyLeft] -> [CrossBlockedVFilled | BodyLeft]SFX2
late VERTICAL[CrossV | BodyRight] -> [CrossBlockedVFilled | BodyRight]SFX2
late DOWN[CrossV | Body7] -> [CrossBlockedVFilled | Body7]SFX2
late DOWN[CrossV | BodyF] -> [CrossBlockedVFilled | BodyF]SFX2
late DOWN[CrossV | BodyDown] -> [CrossBlockedVFilled | BodyDown]SFX2
late DOWN[BodyL | CrossV] -> [BodyL | CrossBlockedVFilled]SFX2
late DOWN[BodyJ | CrossV] -> [BodyJ | CrossBlockedVFilled]SFX2
late DOWN[BodyUp | CrossV] -> [BodyUp | CrossBlockedVFilled]SFX2
late HORIZONTAL[CrossH | BodyV] -> [CrossBlockedHFilled | BodyV]SFX2
late HORIZONTAL[CrossH | BodyUp] -> [CrossBlockedHFilled | BodyUp]SFX2
late HORIZONTAL[CrossH | BodyDown] -> [CrossBlockedHFilled | BodyDown]SFX2
late RIGHT[CrossH | BodyL] -> [CrossBlockedHFilled | BodyL]SFX2
late RIGHT[CrossH | BodyF] -> [CrossBlockedHFilled | BodyF]SFX2
late RIGHT[CrossH | BodyRight] -> [CrossBlockedHFilled | BodyRight]SFX2
late RIGHT[Body7 | CrossH] -> [Body7 | CrossBlockedHFilled]SFX2
late RIGHT[BodyJ | CrossH] -> [BodyJ | CrossBlockedHFilled]SFX2
late RIGHT[BodyLeft | CrossH] -> [BodyLeft | CrossBlockedHFilled]SFX2

(Blocking blocked crossroads, what kind of madness is this?)
late VERTICAL[CrossBlockedH | BodyH] -> [CrossBlockedBoth | BodyH]SFX2
late VERTICAL[CrossBlockedH | BodyLeft] -> [CrossBlockedBoth | BodyLeft]SFX2
late VERTICAL[CrossBlockedH | BodyRight] -> [CrossBlockedBoth | BodyRight]SFX2
late DOWN[CrossBlockedH | Body7] -> [CrossBlockedBoth | Body7]SFX2
late DOWN[CrossBlockedH | BodyF] -> [CrossBlockedBoth | BodyF]SFX2
late DOWN[CrossBlockedH | BodyDown] -> [CrossBlockedBoth | BodyDown]SFX2
late DOWN[BodyL | CrossBlockedH] -> [BodyL | CrossBlockedBoth]SFX2
late DOWN[BodyJ | CrossBlockedH] -> [BodyJ | CrossBlockedBoth]SFX2
late DOWN[BodyUp | CrossBlockedH] -> [BodyUp | CrossBlockedBoth]SFX2
late HORIZONTAL[CrossBlockedV | BodyV] -> [CrossBlockedBoth | BodyV]SFX2
late HORIZONTAL[CrossBlockedV | BodyUp] -> [CrossBlockedBoth | BodyUp]SFX2
late HORIZONTAL[CrossBlockedV | BodyDown] -> [CrossBlockedBoth | BodyDown]SFX2
late RIGHT[CrossBlockedV | BodyL] -> [CrossBlockedBoth | BodyL]SFX2
late RIGHT[CrossBlockedV | BodyF] -> [CrossBlockedBoth | BodyF]SFX2
late RIGHT[CrossBlockedV | BodyRight] -> [CrossBlockedBoth | BodyRight]SFX2
late RIGHT[Body7 | CrossBlockedV] -> [Body7 | CrossBlockedBoth]SFX2
late RIGHT[BodyJ | CrossBlockedV] -> [BodyJ | CrossBlockedBoth]SFX2
late RIGHT[BodyLeft | CrossBlockedV] -> [BodyLeft | CrossBlockedBoth]SFX2

(Blocked crossroad also blocks all the adjacent crossroads)
late VERTICAL[CrossBlockedV | Cross] -> [CrossBlockedV | CrossBlockedV]
late VERTICAL[CrossBlockedV | CrossV] -> [CrossBlockedV | CrossBlockedVFilled]
late VERTICAL[CrossBlockedV | CrossBlockedH] -> [CrossBlockedV | CrossBlockedBoth]
late VERTICAL[CrossBlockedVFilled | Cross] -> [CrossBlockedVFilled | CrossBlockedV]
late VERTICAL[CrossBlockedVFilled | CrossV] -> [CrossBlockedVFilled | CrossBlockedVFilled]
late VERTICAL[CrossBlockedVFilled | CrossBlockedH] -> [CrossBlockedVFilled | CrossBlockedBoth]
late HORIZONTAL[CrossBlockedH | Cross] -> [CrossBlockedH | CrossBlockedH]
late HORIZONTAL[CrossBlockedH | CrossH] -> [CrossBlockedH | CrossBlockedHFilled]
late HORIZONTAL[CrossBlockedH | CrossBlockedV] -> [CrossBlockedH | CrossBlockedBoth]
late HORIZONTAL[CrossBlockedHFilled | Cross] -> [CrossBlockedHFilled | CrossBlockedH]
late HORIZONTAL[CrossBlockedHFilled | CrossH] -> [CrossBlockedHFilled | CrossBlockedHFilled]
late HORIZONTAL[CrossBlockedHFilled | CrossBlockedV] -> [CrossBlockedHFilled | CrossBlockedBoth]

late HORIZONTAL[CrossBlockedBoth | Cross] -> [CrossBlockedBoth | CrossBlockedH]
late HORIZONTAL[CrossBlockedBoth | CrossBlockedV] -> [CrossBlockedBoth | CrossBlockedBoth]
late HORIZONTAL[CrossBlockedBoth | CrossH] -> [CrossBlockedBoth | CrossBlockedHFilled]
late VERTICAL[CrossBlockedBoth | Cross] -> [CrossBlockedBoth | CrossBlockedV]
late VERTICAL[CrossBlockedBoth | CrossBlockedH] -> [CrossBlockedBoth | CrossBlockedBoth]
late VERTICAL[CrossBlockedBoth | CrossV] -> [CrossBlockedBoth | CrossBlockedVFilled]

late VERTICAL[CrossBlockedVFilled | CrossBlockedH] -> [CrossBlockedVFilled | CrossBlockedBoth]
late HORIZONTAL[CrossBlockedHFilled | CrossBlockedV] -> [CrossBlockedHFilled | CrossBlockedBoth]

(Ice Decoration)
late[Player1 Ice No Ice0Darker No Ice1 No Ice1Darker] -> [Player1 Ice Ice1]
late[Player1 Ice Ice0Darker No Ice1Darker] -> [Player1 Ice Ice1Darker]

late[Player2 Ice No Ice0Darker No Ice2 No Ice2Darker] -> [Player2 Ice Ice2]
late[Player2 Ice Ice0Darker No Ice2Darker] -> [Player2 Ice Ice2Darker]

(Moving the player through ice)
late RIGHT[BodyL | Player Temp Ice No WallR | Empty] -> [BodyL | BodyH Ice | Player]
late RIGHT[BodyF | Player Temp Ice No WallR | Empty] -> [BodyF | BodyH Ice | Player]
late RIGHT[BodyRight | Player Temp Ice No WallR | Empty] -> [BodyRight | BodyH Ice | Player]
late LEFT[BodyJ | Player Temp Ice No WallL | Empty] -> [BodyJ | BodyH Ice | Player]
late LEFT[Body7 | Player Temp Ice No WallL | Empty] -> [Body7 | BodyH Ice | Player]
late LEFT[BodyLeft | Player Temp Ice No WallL | Empty] -> [BodyLeft | BodyH Ice | Player]
late DOWN[Body7 | Player Temp Ice No WallD | Empty] -> [Body7 | BodyV Ice | Player]
late DOWN[BodyF | Player Temp Ice No WallD | Empty] -> [BodyF | BodyV Ice | Player]
late DOWN[BodyDown | Player Temp Ice No WallD | Empty] -> [BodyDown | BodyV Ice | Player]
late UP[BodyJ | Player Temp Ice No WallU | Empty] -> [BodyJ | BodyV Ice | Player]
late UP[BodyL | Player Temp Ice No WallU | Empty] -> [BodyL | BodyV Ice | Player]
late UP[BodyUp | Player Temp Ice No WallU | Empty] -> [BodyUp | BodyV Ice | Player]

late RIGHT[BodyH | Player Temp Ice No WallR | Empty] -> [BodyH | BodyH Ice | Player]
late LEFT[BodyH | Player Temp Ice No WallL | Empty] -> [BodyH | BodyH Ice | Player]
late DOWN[BodyV | Player Temp Ice No WallD | Empty] -> [BodyV | BodyV Ice | Player]
late UP[BodyV | Player Temp Ice No WallU | Empty] -> [BodyV | BodyV Ice | Player]
late RIGHT[CrossBothH | Player Temp Ice No WallR | Empty] -> [CrossBothH | BodyH Ice | Player]
late LEFT[CrossBothH | Player Temp Ice No WallL | Empty] -> [CrossBothH | BodyH Ice | Player]
late DOWN[CrossBothH | Player Temp Ice No WallD | Empty] -> [CrossBothH | BodyV Ice | Player]
late UP[CrossBothH | Player Temp Ice No WallU | Empty] -> [CrossBothH | BodyV Ice | Player]
late RIGHT[CrossBothV | Player Temp Ice No WallR | Empty] -> [CrossBothV | BodyH Ice | Player]
late LEFT[CrossBothV | Player Temp Ice No WallL | Empty] -> [CrossBothV | BodyH Ice | Player]
late DOWN[CrossBothV | Player Temp Ice No WallD | Empty] -> [CrossBothV | BodyV Ice | Player]
late UP[CrossBothV | Player Temp Ice No WallU | Empty] -> [CrossBothV | BodyV Ice | Player]
late RIGHT[CrossBlockedVFilled | Player Temp Ice No WallR | Empty] -> [CrossBlockedVFilled | BodyH Ice | Player]
late LEFT[CrossBlockedVFilled | Player Temp Ice No WallL | Empty] -> [CrossBlockedVFilled | BodyH Ice | Player]
late DOWN[CrossBlockedHFilled | Player Temp Ice No WallD | Empty] -> [CrossBlockedHFilled | BodyV Ice | Player]
late UP[CrossBlockedHFilled | Player Temp Ice No WallU | Empty] -> [CrossBlockedHFilled | BodyV Ice | Player]

late RIGHT [CrossV | Player Temp Ice No WallR | Empty] -> [CrossV | BodyH Ice | Player]
late LEFT [CrossV | Player Temp Ice No WallL | Empty] -> [CrossV | BodyH Ice | Player]
late DOWN [CrossH | Player Temp Ice No WallD | Empty] -> [CrossH | BodyV Ice | Player]
late UP [CrossH | Player Temp Ice No WallU | Empty] -> [CrossH | BodyV Ice | Player]

late [Player No Temp] -> [Player Temp] (This exist so that each ice tile gets tinted)


(In case the player gets into a crossroad via ice or something)
(I hate myself now...)
late HORIZONTAL[Cross Player Temp | BodyH] -> [CrossRight Player Temp | BodyH]
late HORIZONTAL[Cross Player Temp | CrossBothH] -> [CrossRight Player Temp | CrossBothH]
late HORIZONTAL[Cross Player Temp | CrossBothV] -> [CrossRight Player Temp | CrossBothV]
late RIGHT[Cross Player Temp | BodyJ] -> [CrossRight Player Temp | BodyJ]
late RIGHT[Cross Player Temp | Body7] -> [CrossRight Player Temp | Body7]
late RIGHT[Cross Player Temp | BodyLeft] -> [CrossRight Player Temp | BodyLeft]
late RIGHT[Cross Player Temp | CrossBlockedVFilled] -> [CrossRight Player Temp | CrossBlockedVFilled]
late RIGHT[BodyL | Cross Player Temp] -> [BodyL | CrossRight Player Temp]
late RIGHT[BodyF | Cross Player Temp] -> [BodyF | CrossRight Player Temp]
late RIGHT[BodyRight | Cross Player Temp] -> [BodyRight | CrossRight Player Temp]
late RIGHT[CrossBlockedVFilled| Cross Player Temp] -> [CrossBlockedVFilled | CrossRight Player Temp]

late VERTICAL[Cross Player Temp | BodyV] -> [CrossUp Player Temp | BodyV]
late VERTICAL[Cross Player Temp | CrossBothH] -> [CrossUp Player Temp | CrossBothH]
late VERTICAL[Cross Player Temp | CrossBothV] -> [CrossUp Player Temp | CrossBothV]
late DOWN[Cross Player Temp | BodyL] -> [CrossUp Player Temp | BodyL]
late DOWN[Cross Player Temp | BodyJ] -> [CrossUp Player Temp | BodyJ]
late DOWN[Cross Player Temp | BodyUp] -> [CrossUp Player Temp | BodyUp]
late DOWN[Cross Player Temp | CrossBlockedHFilled] -> [CrossUp Player Temp | CrossBlockedHFilled]
late DOWN[BodyF | Cross Player Temp] -> [BodyF | CrossUp Player Temp]
late DOWN[Body7 | Cross Player Temp] -> [Body7 | CrossUp Player Temp]
late DOWN[BodyDown | Cross Player Temp] -> [BodyDown | CrossUp Player Temp]
late DOWN[CrossBlockedHFilled | Cross Player Temp] -> [CrossBlockedHFilled | CrossUp Player Temp]

(In case the player gets into a CROSSED crossroad via ice or something)
(I'm sure there's a simpler approach...)
late HORIZONTAL[CrossH Player Temp | BodyH] -> [CrossLeft Player Temp | BodyH]
late HORIZONTAL[CrossH Player Temp | CrossBothH] -> [CrossLeft Player Temp | CrossBothH]
late HORIZONTAL[CrossH Player Temp | CrossBothV] -> [CrossLeft Player Temp | CrossBothV]
late RIGHT[CrossH Player Temp | BodyJ] -> [CrossLeft Player Temp | BodyJ]
late RIGHT[CrossH Player Temp | Body7] -> [CrossLeft Player Temp | Body7]
late RIGHT[CrossH Player Temp | BodyLeft] -> [CrossLeft Player Temp | BodyLeft]
late RIGHT[CrossH Player Temp | CrossBlockedVFilled] -> [CrossLeft Player Temp | CrossBlockedVFilled]
late RIGHT[BodyL | CrossH Player Temp] -> [BodyL | CrossLeft Player Temp]
late RIGHT[BodyF | CrossH Player Temp] -> [BodyF | CrossLeft Player Temp]
late RIGHT[BodyRight | CrossH Player Temp] -> [BodyRight | CrossLeft Player Temp]
late RIGHT[CrossBlockedVFilled| CrossH Player Temp] -> [CrossBlockedVFilled | CrossLeft Player Temp]

late VERTICAL[CrossV Player Temp | BodyV] -> [CrossDown Player Temp | BodyV]
late VERTICAL[CrossV Player Temp | CrossBothH] -> [CrossDown Player Temp | CrossBothH]
late VERTICAL[CrossV Player Temp | CrossBothV] -> [CrossDown Player Temp | CrossBothV]
late DOWN[CrossV Player Temp | BodyL] -> [CrossDown Player Temp | BodyL]
late DOWN[CrossV Player Temp | BodyJ] -> [CrossDown Player Temp | BodyJ]
late DOWN[CrossV Player Temp | BodyUp] -> [CrossDown Player Temp | BodyUp]
late DOWN[CrossV Player Temp | CrossBlockedHFilled] -> [CrossDown Player Temp | CrossBlockedHFilled]
late DOWN[BodyF | CrossV Player Temp] -> [BodyF | CrossDown Player Temp]
late DOWN[Body7 | CrossV Player Temp] -> [Body7 | CrossDown Player Temp]
late DOWN[BodyDown | CrossV Player Temp] -> [BodyDown | CrossDown Player Temp]
late DOWN[CrossBlockedHFilled | CrossV Player Temp] -> [CrossBlockedHFilled | CrossDown Player Temp]

late [Player CrossV No Marker] -> [Player CrossV Marker]
late [Player CrossH No Marker] -> [Player CrossH Marker]

(Moving the player through crossroads)
late HORIZONTAL[CrossRight Player Temp | Cross Empty] -> [CrossV | CrossRight Player Temp]
late HORIZONTAL[CrossRight Player Temp | CrossH Empty] -> [CrossV | CrossLeft Player Temp]
late HORIZONTAL[CrossRight Player Temp | CrossBlockedV Empty] -> [CrossV | CrossBlockedV Player Temp]
late HORIZONTAL[CrossBlockedV Player Temp | Cross Empty] -> [CrossBlockedVFilled | CrossRight Player Temp]
late HORIZONTAL[CrossBlockedV Player Temp | CrossH Empty] -> [CrossBlockedVFilled | CrossLeft Player Temp]
late HORIZONTAL[CrossBlockedV Player Temp | CrossBlockedV Empty] -> [CrossBlockedVFilled | CrossBlockedV Player Temp]
late HORIZONTAL[CrossLeft Player1 Temp | Cross Empty] -> [CrossBothH | CrossRight Player1 Temp]
late HORIZONTAL[CrossLeft Player1 Temp | CrossH Empty] -> [CrossBothH | CrossLeft Player1 Temp]
late HORIZONTAL[CrossLeft Player1 Temp | CrossBlockedV Empty] -> [CrossBothH | CrossBlockedV Player1 Temp]
late HORIZONTAL[CrossLeft Player2 Temp | Cross Empty] -> [CrossBothH CrossBoth2H | CrossRight Player2 Temp]
late HORIZONTAL[CrossLeft Player2 Temp | CrossH Empty] -> [CrossBothH CrossBoth2H | CrossLeft Player2 Temp]
late HORIZONTAL[CrossLeft Player2 Temp | CrossBlockedV Empty] -> [CrossBothH CrossBoth2H | CrossBlockedV Player2 Temp]

late VERTICAL[CrossUp Player Temp | Cross Empty] -> [CrossH | CrossUp Player Temp]
late VERTICAL[CrossUp Player Temp | CrossV Empty] -> [CrossH | CrossDown Player Temp]
late VERTICAL[CrossUp Player Temp | CrossBlockedH Empty] -> [CrossH | CrossBlockedH Player Temp]
late VERTICAL[CrossBlockedH Player Temp | Cross Empty] -> [CrossBlockedHFilled | CrossUp Player Temp]
late VERTICAL[CrossBlockedH Player Temp | CrossV Empty] -> [CrossBlockedHFilled | CrossDown Player Temp]
late VERTICAL[CrossBlockedH Player Temp | CrossBlockedH Empty] -> [CrossBlockedHFilled | CrossBlockedH Player Temp]
late VERTICAL[CrossDown Player1 Temp | Cross Empty] -> [CrossBothV | CrossUp Player1 Temp]
late VERTICAL[CrossDown Player1 Temp | CrossV Empty] -> [CrossBothV | CrossDown Player1 Temp]
late VERTICAL[CrossDown Player1 Temp | CrossBlockedH Empty] -> [CrossBothV | CrossBlockedH Player1 Temp]
late VERTICAL[CrossDown Player2 Temp | Cross Empty] -> [CrossBothV CrossBoth2V | CrossUp Player2 Temp]
late VERTICAL[CrossDown Player2 Temp | CrossV Empty] -> [CrossBothV CrossBoth2V | CrossDown Player2 Temp]
late VERTICAL[CrossDown Player2 Temp | CrossBlockedH Empty] -> [CrossBothV CrossBoth2V | CrossBlockedH Player2 Temp]


(Moving the player through crossroads)
late HORIZONTAL[CrossRight Player Temp | No Crossroad Empty] -> [CrossV | Player Temp]SFX1
late HORIZONTAL[CrossLeft Player1 Temp | No Crossroad Empty] -> [CrossBothH | Player1 Temp]SFX1
late HORIZONTAL[CrossLeft Player2 Temp | No Crossroad Empty] -> [CrossBothH CrossBoth2H | Player2 Temp]SFX1
late HORIZONTAL[CrossBlockedV Player Temp | No Crossroad Empty] -> [CrossBlockedVFilled | Player Temp]SFX1
late VERTICAL[CrossUp Player Temp | No Crossroad Empty] -> [CrossH | Player Temp]SFX1
late VERTICAL[CrossDown Player1 Temp | No Crossroad Empty] -> [CrossBothV | Player1 Temp]SFX1
late VERTICAL[CrossDown Player2 Temp | No Crossroad Empty] -> [CrossBothV CrossBoth2V | Player2 Temp]SFX1
late VERTICAL[CrossBlockedH Player Temp | No Crossroad Empty] -> [CrossBlockedHFilled | Player Temp]SFX1


(Teleport player across portals)
late [Player1 Portal1][Portal1 Empty] -> [Player1 Portal1][Portal1 Player1 Start]SFX3
late [Player1 Portal2][Portal2 Empty] -> [Player1 Portal2][Portal2 Player1 Start]SFX3
late [Player1 Portal3][Portal3 Empty] -> [Player1 Portal3][Portal3 Player1 Start]SFX3

late [Player2 Portal1][Portal1 Empty] -> [Player2 Portal1][Portal1 Player2 Start]SFX3
late [Player2 Portal2][Portal2 Empty] -> [Player2 Portal2][Portal2 Player2 Start]SFX3
late [Player2 Portal3][Portal3 Empty] -> [Player2 Portal3][Portal3 Player2 Start]SFX3

(Add tails to portals

I originally had much less code for portals - 12 lines only - but EDGE CASES RUIN EVERYTHING)

late RIGHT[Portal No BodyRight No Start No Empty | BodyH] -> [Portal BodyRight | BodyH]
late RIGHT[Portal No BodyRight No Start No Empty | BodyJ] -> [Portal BodyRight | BodyJ]
late RIGHT[Portal No BodyRight No Start No Empty | Body7] -> [Portal BodyRight | Body7]
late RIGHT[Portal No BodyRight No Start No Empty | CrossV] -> [Portal BodyRight | CrossV]
late RIGHT[Portal No BodyRight No Start No Empty | CrossBlockedVFilled] -> [Portal BodyRight | CrossBlockedVFilled]
late RIGHT[Portal No BodyRight No Start No Empty | CrossBothH] -> [Portal BodyRight | CrossBothH]
late RIGHT[Portal No BodyRight No Start No Empty | CrossBothV] -> [Portal BodyRight | CrossBothV]
late RIGHT[Portal No BodyRight No Start No Empty | BodyLeft] -> [Portal BodyRight | BodyLeft]

late RIGHT[BodyH | Portal No BodyLeft No Start No Empty] -> [BodyH | Portal BodyLeft]
late RIGHT[BodyL | Portal No BodyLeft No Start No Empty] -> [BodyL | Portal BodyLeft]
late RIGHT[BodyF | Portal No BodyLeft No Start No Empty] -> [BodyF | Portal BodyLeft]
late RIGHT[CrossV | Portal No BodyLeft No Start No Empty] -> [CrossV | Portal BodyLeft]
late RIGHT[CrossBlockedVFilled | Portal No BodyLeft No Start No Empty] -> [CrossBlockedVFilled | Portal BodyLeft]
late RIGHT[CrossBothH | Portal No BodyLeft No Start No Empty] -> [CrossBothH | Portal BodyLeft]
late RIGHT[CrossBothV | Portal No BodyLeft No Start No Empty] -> [CrossBothV | Portal BodyLeft]
late RIGHT[BodyRight | Portal No BodyLeft No Start No Empty] -> [BodyRight | Portal BodyLeft]

late DOWN[Portal No BodyDown No Start No Empty | BodyV] -> [Portal BodyDown | BodyV]
late DOWN[Portal No BodyDown No Start No Empty | BodyJ] -> [Portal BodyDown | BodyJ]
late DOWN[Portal No BodyDown No Start No Empty | BodyL] -> [Portal BodyDown | BodyL]
late DOWN[Portal No BodyDown No Start No Empty | CrossV] -> [Portal BodyDown | CrossV]
late DOWN[Portal No BodyDown No Start No Empty | CrossBlockedHFilled] -> [Portal BodyDown | CrossBlockedHFilled]
late DOWN[Portal No BodyDown No Start No Empty | CrossBothH] -> [Portal BodyDown | CrossBothH]
late DOWN[Portal No BodyDown No Start No Empty | CrossBothV] -> [Portal BodyDown | CrossBothV]
late DOWN[Portal No BodyDown No Start No Empty | BodyUp] -> [Portal BodyDown | BodyUp]

late DOWN[BodyV | Portal No BodyUp No Start No Empty] -> [BodyV | Portal BodyUp]
late DOWN[BodyF | Portal No BodyUp No Start No Empty] -> [BodyF | Portal BodyUp]
late DOWN[Body7 | Portal No BodyUp No Start No Empty] -> [Body7 | Portal BodyUp]
late DOWN[CrossV | Portal No BodyUp No Start No Empty] -> [CrossV | Portal BodyUp]
late DOWN[CrossBlockedHFilled | Portal No BodyUp No Start No Empty] -> [CrossBlockedHFilled | Portal BodyUp]
late DOWN[CrossBothH | Portal No BodyUp No Start No Empty] -> [CrossBothH | Portal BodyUp]
late DOWN[CrossBothV | Portal No BodyUp No Start No Empty] -> [CrossBothV | Portal BodyUp]
late DOWN[BodyDown | Portal No BodyUp No Start No Empty] -> [BodyDown | Portal BodyUp]
endloop



(Finish off the chain)
late [CrossBlockedV no Empty no Player] -> [CrossBlockedV Empty]
late [CrossBlockedVFilled no Empty no Player] -> [CrossBlockedVFilled Empty]
late [CrossBlockedH no Empty no Player] -> [CrossBlockedH Empty]
late [CrossBlockedHFilled no Empty no Player] -> [CrossBlockedHFilled Empty]
late [CrossBlockedBoth no Empty] -> [CrossBlockedBoth Empty]
late [CrossV no Empty no Player] -> [CrossV Empty]
late [CrossH no Empty no Player] -> [CrossH Empty]
late [CrossBothV Empty] -> [CrossBothV]
late [CrossBothH Empty] -> [CrossBothH]

late [Portal Player1 No Start No BackgroundDarker] -> [Portal BackgroundVisited]
late [Portal Player1 No Start BackgroundDarker] -> [Portal BackgroundVisitedDarker]
late [Portal Player2 No Start No BackgroundDarker] -> [Portal BackgroundVisited2]
late [Portal Player2 No Start BackgroundDarker] -> [Portal BackgroundVisited2Darker]


(Final decoration: visited tiles get blue-fied)
late [Background Player1] -> [BackgroundVisited Player1]
late [BackgroundDarker Player1] -> [BackgroundVisitedDarker Player1]

late [Background Player2] -> [BackgroundVisited2 Player2]
late [BackgroundDarker Player2] -> [BackgroundVisited2Darker Player2]

late [Player1 Target No TargetVisited] -> [Player1 Target TargetVisited]
late [Player2 Target No TargetVisited2] -> [Player2 Target TargetVisited2]


==============
WINCONDITIONS
==============

No Empty
All Player On Target

=======
LEVELS
=======

(
	CHAPTER 1:
    BASIC
)

message CHAPTER 1/6 - BASIC

message [1/10] "Tutorial"

#########
#p..#####
###.#####
#...#...#
#.###.#.#
#.....#o#
#########

message [2/10] "Baby Steps"

#######
#p..###
#.....#
#.##..#
#.##..#
#....o#
#######

message [3/10] "Free Choice"

#######
#..p..#
#.....#
#.o#o.#
#..#..#
#..#..#
#######

message [4/10] "The Deceiver"

#######
#..#..#
#.o...#
#.....#
#.....#
#..po.#
#######

message [5/10] "Runny Nose"
message Designed by Demon Arisen

#######
#.....#
#.o.o.#
#..p..#
#.....#
#.###.#
#.....#
#######

message [6/10] "Far Loop"

##########
#####....#
#.....o..#
#.##....##
#.#..p...#
#.#......#
#.#......#
#...##...#
##########

message [7/10] "Inside-Out"

########
#......#
#......#
#..po..#
#..##..#
#..#...#
#......#
#.....##
########

message [8/10] "Serpentine"

############
##.........#
#....opo...#
#.....#...##
###...#...##
###...#..###
###......###
############

message [9/10] "Dicey"
message Designed by Demon Arisen

###########
#.........#
#.#..#..#o#
#.........#
#.........#
#.........#
#.#..#..#.#
#.p.......#
###########

message [10/10] "Grated Cheese"

############
####o...####
####....####
#........###
#....#.....#
#..#..p..#.#
#....#.....#
###....#..##
###.......##
######....##
############

(
	CHAPTER 2:
    WALLS
)

message CHAPTER 2/6 - WALLS

message [1/10] "Sealed Down"

#######
#p.r..#
#.l.r.#
#d.or.#
#.dd┘.#
#.....#
#######

message [2/10] "Witnessing"

#######
#.d..o#
#.....#
#..p..#
#...d.#
#.....#
#######

message [3/10] "Tied Up"

#######
#..d..#
#.l...#
#o.p.o#
#...r.#
#..u..#
#######

message [4/10] "Focus"
message Designed by Demon Arisen

###########
#.........#
#.┌.....┐.#
#..┌...┐..#
#...o.p...#
#..└...┘..#
#.└.....┘.#
#.........#
###########

message [5/10] "Money"

########
##....##
#......#
#.p.═..#
#ddu═.o#
#uud═..#
#......#
##....##
########

message [6/10] "Tight curve"

#########
#...d...#
#..r....#
#.┌..┌..#
#...p.┐.#
#..└....#
#o......#
#########

message [7/10] "Left or Right"

#########
#.......#
#.....┐.#
#..┌d...#
#.o.p.o.#
#...u┘..#
#.└.....#
#.......#
#########

message [8/10] "Across a Cross"

#############
####.....####
####..d..####
#.....═.....#
#.p.║.═.║.o.#
#.....═.....#
####..u..####
####.....####
#############

message [9/10] "Central Park"

#########
#.d....o#
#r┌r║║└.#
#..d┘└═.#
#..═┐┌═.#
#..┐║lu.#
#.p...┘l#
#.....u.#
#########

message [10/10] "Outside-In"

###########
#.dd...dd.#
#.┌.....┐.#
#..o...o..#
#.║.....║.#
#.║║║p║║║.#
#.║.....║.#
#....═....#
#...═══...#
#....u....#
###########

(
	CHAPTER 3:
    CROSSROADS
)

message CHAPTER 3/6 - CROSSROADS

message [1/10] "Bridge the Gap"

#####
##..#
#.+.#
#..o#
#.p##
#...#
#...#
#####

message [2/10] "Gridlock"
message Designed by Demon Arisen

########
#......#
#....p.#
#o.++..#
##.++..#
#....#.#
#......#
########

message [3/10] "Crisscross"

#######
#.....#
#..++.#
#.+++.#
#o....#
#..p..#
#######

message [4/10] "Pretzel"

#########
####....#
###.....#
##...++.#
#...++.o#
#.p++...#
#......##
##....###
#########

message [5/10] "Cross Stitch"

#########
####...##
#.......#
#....+..#
#...+++.#
#......o#
#.....p.#
#####...#
#########

message [6/10] "Around the Corner"

######
#....#
#.d..#
#.u..#
#..+.#
#....#
#o.p.#
#..u.#
######

message [7/10] "Cardinal"

###########
####...####
###....####
##...+...##
#.........#
#..+.p.+..#
#.........#
###..+.o###
###....####
####...####
###########

message [8/10] "Tangled"

#########
####...##
##..+..##
##.....##
#.+..++.#
#...++..#
#...++..#
##o..+.##
##p+...##
###....##
#########

message [9/10] "Intersection"
message Designed by Demon Arisen

###########
##...#...##
#.+.+.+.+.#
#.........#
#..+.+.+..#
##..o.....#
##..+.+..##
#p...#...##
###########

message [10/10] "Downtown"

#########
#.......#
#.......#
#.......#
#o.+++..#
#...p...#
#..+.++.#
#.......#
#.......#
#.......#
#########


(
	CHAPTER 4:
    PORTALS
)

message CHAPTER 4/6 - PORTALS

message [1/10] "Thinking with Portals"

#######
#..p..#
#.....#
#..1..#
#######
#..#..#
#.....#
#.o1o.#
#######

message [2/10] "Wormhole"
message Designed by Demon Arisen

#######
####.o#
###3.3#
##1+2##
#1.2###
#p.####
#######

message [3/10] "Across the Road"

#######
#....##
#.....#
#o.+1.#
#p....#
##...1#
##....#
#######

message [4/10] "Crawler"

############
#..........#
#..1..1l...#
#p3....rl3o#
#..rlrl....#
############

message [5/10] "Shelter"

#########
#.......#
#.1.p.1.#
#r║ldr2l#
#...u...#
#.d.d.d.#
#ou.u.u2#
#########

message [6/10] "No Return"

#######
#....o#
#..+..#
#..+..#
#pl+..#
#2.+.2#
#.....#
#.....#
#######

message [7/10] "Resonance Cascade"
message Designed by Demon Arisen

#########
#.......#
#.p.1.3.#
#.##..#.#
#.1.+.2.#
#.#..##.#
#.3.2.o.#
#.......#
#########

message [8/10] "Null Pointer"

#########
#..3..###
#.2rl...#
#....#..#
#p.2.#.o#
##r3....#
##......#
#########

message [9/10] "Funhouse Mirror"

#########
#.......#
#.......#
#1.opo.3#
#.......#
#.......#
#.══+══.#
#.......#
#.......#
#1.o.o.3#
#.......#
#.......#
#########

message [10/10] "Boltzmann Brain"

###########
###..o..###
##.......##
#..p.3.1..#
#.........#
#..║.1.║..#
#.........#
#..2...2..#
#....3....#
##.......##
##...o...##
###########


(
	CHAPTER 5:
    ICE
)

message CHAPTER 5/6 - ICE

message [1/10] "Slippery Slope"

#######
###p###
#.....#
#..s..#
#.sss.#
#..s..#
###o###
#######

message [2/10] "Chevron"
message Designed by Demon Arisen

#######
#.....#
#.sss.#
#.sss.#
#.sss.#
#p...o#
#######

message [3/10] "River Crossing"
message Designed by Demon Arisen

###########
#.........#
#.........#
#sssssssss#
#sssssssos#
#sssssssss#
#.........#
#p........#
###########

message [4/10] "A Song of Ice and Fire"
message Designed by Demon Arisen

###########
#........p#
#..1sss2..#
#..sssss..#
#..sssss..#
#..2sso1..#
#.........#
###########

message [5/10] "Crossover"

##########
#..rl....#
#...rl...#
#ssssssss#
#....rl..#
#........#
#.....po.#
##########

message [6/10] "Cold-Hearted"
message Designed by HankyMueller

##########
#######..#
##o..#.+.#
##..sss.p#
#.+..+.+.#
#.....#..#
#.+..+...#
##..sss.##
##########

message [7/10] "Column Blocker"
message Designed by HankyMueller

##########
##.dd.####
##.uu....#
#1ssss+o.#
##..p..1.#
##....####
##########

message [8/10] "Greenland"

###########
#sssssssss#
#ss..++.os#
#..sssss..#
#.++++++ss#
##.ss.ss..#
##.ss.ss..#
##.ss.ssp.#
###########

message [9/10] "Light Bulb"

###########
#sssssssss#
#s.s.s.s.s#
#s.o.s.o.s#
#s.s.s.s.s#
#s.s.s.s.s#
#s.sspss.s#
#s..s.s..s#
#s.sssss.s#
##sssssss##
##sssssss##
###########

message [10/10] "Andromeda"
message Designed by HankyMueller

#################
#....#######....#
#..............d#
#..+sssssssss+.u#
#..s.........s..#
##.s.#######.s.##
##.s.#######.s.##
##.s.##...##.s.##
##.s.##.o.##.s.##
##.s.##.s.##.s.##
##.s.##.s.##.s.##
##.s.##.s.##.s.##
#..s....s....s.##
#d.+ssssssssss.##
#u........p....##
#....############
#################


(
	CHAPTER 6:
    PLAYERS
)

message CHAPTER 6/6 - PLAYERS

message [1/10] "Partnership"

#######
###...#
#p#..o#
#....##
#######
#.q..o#
#.....#
##..###
#######

message [2/10] "They Come in Waves"

###########
#o.......o#
#.p..o..q.#
#.........#
#o.......o#
#.........#
#.q..o..q.#
#o.......o#
###########

message [3/10] "Quantum Entanglement"

###########
#####1#####
#1..#.#..1#
#...#p#...#
#...###...#
#.3##o##3.#
#..##.##..#
#####3#####
###########

message [4/10] "Annihilation"

###########
###..o..###
#.........#
#2.......2#
#.........#
#...qpq...#
###########

message [5/10] "Synchronise"
message Designed by Demon Arisen

#########
#...s####
#.#2sp###
#...s.#o#
#..2s.#.#
#...s.#.#
#.p.s.#2#
#...s.###
#########

message [6/10] "Live Fire"

#########
#.......#
#....o.o#
#2...2..#
#.......#
#p...q..#
#########

message [7/10] "Multifaceted"

#########
#...o...#
#o1.1.1o#
#.......#
#.1opo1.#
#...o...#
#########

message [8/10] "Time to Split"
message Designed by Demon Arisen

###########
#.....#..o#
#..1..1...#
#.........#
#.........#
#..p..1..o#
#.........#
#........##
###########

message [9/10] "Skip"
message Designed by HankyMueller

########
#o.#####
#o.#####
#......#
#sss.ss#
#..s.ss#
#..s...#
#pqs...#
########

message [10/10] "End Of"

#################
###..qrl......###
###...rl......###
###p.+rl......###
#o#...rl...+..#o#
#.#...+.......#.#
#.#.....1.....#.#
#.#..1..dd....#.#
#1#....2uu.s..#2#
###...2..+.s..###
###.sssss..s..###
###.sssss.....###
#################


message You filled the whole game! Congratulations!
message Thanks to Demon Arisen and HankyMueller for designing levels and playtesting!
message And thank you for playing!