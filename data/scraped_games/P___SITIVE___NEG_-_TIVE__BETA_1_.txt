title P[+]SITIVE ~ NEG[-]TIVE {BETA 1}
author Fabio Manna ( fmanna775@gmail.com )

key_repeat_interval 0.2 ( key hold delay )
again_interval 0.08 ( looping code delay )

noundo ( disable undo key )

========
OBJECTS
========

Background ( empty space )
black

Wall
darkgray black
11110
10000
10000
10000
00000

Player
yellow black
01010
01010
00000
01100
00000

( basic blocks )
IdleBlockPos
blue black
00000
00100
01110
00100
00000

IdleBlockNeg
red black
00000
00000
01110
00000
00000

IdleBlockNull
green black
00000
00000
00100
00000
00000
( /basic blocks )

( slide block pos )
MoveBlockPosL
blue black
00000
00100
01110
00100
00000

MoveBlockPosR
blue black
00000
00100
01110
00100
00000

MoveBlockPosU
blue black
00000
00100
01110
00100
00000

MoveBlockPosD
blue black
00000
00100
01110
00100
00000
( /slide block pos )

( slide block neg )
MoveBlockNegL
red black
00000
00000
01110
00000
00000

MoveBlockNegR
red black
00000
00000
01110
00000
00000

MoveBlockNegU
red black
00000
00000
01110
00000
00000

MoveBlockNegD
red black
00000
00000
01110
00000
00000
( /slide block neg )

( slide block null )
MoveBlockNullL
green black
00000
00000
00100
00000
00000

MoveBlockNullR
green black
00000
00000
00100
00000
00000

MoveBlockNullU
green black
00000
00000
00100
00000
00000

MoveBlockNullD
green black
00000
00000
00100
00000
00000
( /slide block null )

GoalBlock ( turned after reach the target )
darkgray black
00000
00000
00100
00000
00000

Target
green black
11111
10101
11011
10101
11111

=======
LEGEND
=======

( groups )
Block = IdleBlockPos or IdleBlockNeg or IdleBlockNull
SlideBlockPos = MoveBlockPosL or MoveBlockPosR or MoveBlockPosU or MoveBlockPosD
SlideBlockNeg = MoveBlockNegL or MoveBlockNegR or MoveBlockNegU or MoveBlockNegD
SlideBlockNull = MoveBlockNullL or MoveBlockNullR or MoveBlockNullU or MoveBlockNullD
SlideBlock = SlideBlockPos or SlideBlockNeg or SlideBlockNull
Obstacle = Wall or Block or GoalBlock
( /groups )

. = Background
# = Wall
@ = Player
+ = IdleBlockPos
- = IdleBlockNeg
* = IdleBlockNull
X = Target

=======
SOUNDS
=======

Startgame 88896100
CloseMessage 24812307
Restart 21553509

Player Move 10103307
Player CantMove 66178702

sfx0 6675106 ( player action )
sfx1 91942304 ( slide block collision )
sfx2 69516900 ( goal )
sfx3 81303305 ( player action locked )
sfx4 68398903 ( positive blocks blend )
sfx5 68740303 ( negative  blocks blend )
sfx6 10382703 ( null block obtained )
sfx7 39907103 ( null block turn positive or negative )

================
COLLISIONLAYERS
================

Background
Target
Player, SlideBlock, GoalBlock, Obstacle

======
RULES
======

[ Action Player | Block | No Obstacle ] -> [ Action Player | > Block | ] ( slide block )
[ Action Player | Block | Block | No Obstacle ] -> [ Action Player | Block | > Block | ] ( slide adjacent block )

( check block can't slide )
[ Action Player | Block | Wall ] -> sfx3
[ Action Player | Block | GoalBlock ] -> sfx3
[ Action Player | Block | Block | Obstacle ] -> sfx3
( /check block can't slide )

( turn idle block on slide block )
LEFT [ > IdleBlockPos ] -> [ > MoveBlockPosR ] sfx0
RIGHT [ > IdleBlockPos ] -> [ > MoveBlockPosL ] sfx0
UP [ > IdleBlockPos ] -> [ > MoveBlockPosD ] sfx0
DOWN [ > IdleBlockPos ] -> [ > MoveBlockPosU ] sfx0

LEFT [ > IdleBlockNeg ] -> [ > MoveBlockNegR ] sfx0
RIGHT [ > IdleBlockNeg ] -> [ > MoveBlockNegL ] sfx0
UP [ > IdleBlockNeg ] -> [ > MoveBlockNegD ] sfx0
DOWN [ > IdleBlockNeg ] -> [ > MoveBlockNegU ] sfx0

LEFT [ > IdleBlockNull ] -> [ > MoveBlockNullR ] sfx0
RIGHT [ > IdleBlockNull ] -> [ > MoveBlockNullL ] sfx0
UP [ > IdleBlockNull ] -> [ > MoveBlockNullD ] sfx0
DOWN [ > IdleBlockNull ] -> [ > MoveBlockNullU ] sfx0
( /turn idle block on slide block )

( loop slide block move )
LEFT [ MoveBlockPosR ] -> [ > MoveBlockPosR ] again
RIGHT [ MoveBlockPosL ] -> [ > MoveBlockPosL ] again
UP [ MoveBlockPosD ] -> [ > MoveBlockPosD ] again
DOWN [ MoveBlockPosU ] -> [ > MoveBlockPosU ] again

LEFT [ MoveBlockNegR ] -> [ > MoveBlockNegR ] again
RIGHT [ MoveBlockNegL ] -> [ > MoveBlockNegL ] again
UP [ MoveBlockNegD ] -> [ > MoveBlockNegD ] again
DOWN [ MoveBlockNegU ] -> [ > MoveBlockNegU ] again

LEFT [ MoveBlockNullR ] -> [ > MoveBlockNullR ] again
RIGHT [ MoveBlockNullL ] -> [ > MoveBlockNullL ] again
UP [ MoveBlockNullD ] -> [ > MoveBlockNullD ] again
DOWN [ MoveBlockNullU ] -> [ > MoveBlockNullU ] again
( /loop slide block move )

[ > SlideBlockPos | IdleBlockPos ] -> [ > IdleBlockPos | ] sfx4 ( if 2 positive blocks collide, they are merged into 1 positive block )
[ > SlideBlockNeg | IdleBlockNeg ] -> [ | ] sfx5 ( if 2 negative blocks collide, both are destroyed )

[ > SlideBlockPos | IdleBlockNeg ] -> [ > IdleBlockNull | ] sfx6 ( a collision between positive and negative blocks result on null block )
[ > SlideBlockNeg | IdleBlockPos ] -> [ > IdleBlockNull | ] sfx6 ( ditto above )

[ > SlideBlockNull | IdleBlockPos ] -> [ IdleBlockPos | IdleBlockPos ] sfx7 ( if null block collides with a positive block, gets the same signal )
[ > SlideBlockNull | IdleBlockNeg ] -> [ IdleBlockNeg | IdleBlockNeg ] sfx7 ( ditto above )
[ > SlideBlockPos | IdleBlockNull ] -> [ IdleBlockPos | IdleBlockPos ] sfx7 ( ditto above )
[ > SlideBlockNeg | IdleBlockNull ] -> [ IdleBlockNeg | IdleBlockNeg ] sfx7 ( ditto above )

( turn slide block on idle block after collision )
[ > SlideBlockPos | Obstacle ] -> [ IdleBlockPos | Obstacle ] sfx1
[ > SlideBlockNeg | Obstacle ] -> [ IdleBlockNeg | Obstacle ] sfx1
[ > SlideBlockNull | Obstacle ] -> [ IdleBlockNull | Obstacle ] sfx1
( /turn slide block on idle block after collision )

[ IdleBlockNull Target ] -> [ GoalBlock Target ] sfx2 ( turn block inactive after reach the target on border )
[ > SlideBlockNull Target ] -> [ GoalBlock Target ] sfx2 ( turn block inactive after reach the target )

==============
WINCONDITIONS
==============

All GoalBlock On Target

( prevent bug at last block )
No Block
No SlideBlock
( /prevent bug at last block )

=======
LEVELS
=======

( tutorial )
Message [ ] -----> X

###########
#.........#
#.........#
#.@.......#
#.........#
#..*....X.#
#.........#
#.........#
#.........#
#.........#
###########

###########
#......#..#
#...X.....#
#.........#
#.........#
#.........#
#.........#
#......*..#
#..@......#
#.........#
###########

###########
#.........#
#.........#
#.x..**.x.#
#.........#
#.........#
#.........#
#.....@...#
#.........#
#.........#
###########

Message [+][+] = [+]   [+][-] = [ ]

###########
###.......#
#.......+.#
#..@......#
#.........#
#...-.....#
#.......###
#.........#
#.+.......#
#...x.....#
###########

Message [-][-] = ...   [ ][+/-] = [+/-]

###########
#x.#......#
#..#......#
#..*...+.##
#.........#
#..-......#
#..*....@.#
#.........#
#......---#
#......####
###########
( /tutorial )

Message Tutorial finished =D

#############
#...........#
#........+..#
#-.....*....#
#.....###x..#
#.......#...#
#....@......#
#.+.......-.#
#.#.........#
#############

#########
#.......#
#-....*.#
###...+.#
#.......#
#..@....#
#......x#
#.......#
#.-....+#
#..#....#
#.x#...##
#......##
#.......#
##*...#.#
#.......#
#########

Message Congrats, you beat this beta version! Some levels and features coming soon o,ob