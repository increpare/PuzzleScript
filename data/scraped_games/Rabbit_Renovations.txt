title Rabbit Renovations
author Zithral
homepage https://zithral.itch.io/rabbit-renovations

background_color darkbrown
text_color lightgreen
run_rules_on_level_start
again_interval 0.15
key_repeat_interval 0.25


========
OBJECTS
========

Background
#00AAE4

ExitSign
brown darkbrown
..0..
0000.
00000
0000.
..0..
ExitPlace
brown darkbrown
..1..
..1..
..1..
..1..
.....

Grass1
green darkbrown
..0..
.00..
0000.
01100
11111

Grass2
green darkbrown
..0..
0.00.
0000.
10110
11111

Grass3
green darkbrown
....0
0..00
00.00
10011
11111

Grass4
green darkbrown
....0
.0..0
00.00
01001
11111

DeadGrass
green darkbrown
.....
.....
.....
0...0
11111

Hole
darkbrown #483928
00000
00010
00000
00100
10000

CaveIn
#8B551D darkbrown #483928
11111
10101
11011
10201
21111

CaveOut
#8B551D #814F1B darkbrown #483928
00000
02130
00201
02020
10000

Dirt
#8B551D #814F1B
00000
00100
00001
00000
10000

Stone
darkgray #636C71
00000
01100
00000
00010
11000

StoneDirtUp
#8B551D
0...0
.....
.....
.....
.....

StoneDirtDown
#8B551D
.....
.....
.....
.....
0...0

StoneDirtLeft
#8B551D
0....
.....
.....
.....
0....

StoneDirtRight
#8B551D
....0
.....
.....
.....
....0

Player
white
.0.0.
.0.0.
.000.
.000.
.....

Connected
transparent


Question
lightblue
.00..
...0.
..0..
.....
..0..

HintR1
transparent
HintR2
transparent
HintR3
transparent

HintBG
#00AAE4

HintR1C0
#00AAE4 white
00000
00000
00000
00000
00000

HintR1C1
#00AAE4 white
00000
00000
00000
00000
00000

HintR1C2
#00AAE4 white darkbrown gray
00000
03333
03222
03222
03222

HintR1C3
#00AAE4 white darkbrown gray
00000
33333
22222
22222
22222

HintR1C4
#00AAE4 white darkbrown gray
00000
33330
22230
22230
22230

HintR1C5
#00AAE4 white
00000
00000
00000
00000
00000

HintR1C6
#00AAE4 white darkbrown gray
00000
03333
03222
03222
03222

HintR1C7
#00AAE4 white darkbrown gray
00000
33333
22222
22222
22222

HintR1C8
#00AAE4 white darkbrown gray
00000
33330
22230
22230
22230


HintR2C0
#00AAE4 white
00101
00101
00010
00101
00101

HintR2C1
#00AAE4 white
00000
01000
00000
01000
00000

HintR2C2
#00AAE4 white darkbrown gray
03222
03222
03222
03222
03222

HintR2C3
#00AAE4 white darkbrown
21212
21212
21112
21112
22222

HintR2C4
#00AAE4 white darkbrown gray
22230
22230
22230
22230
22230

HintR2C5
#00AAE4 white
00100
00010
11111
00010
00100

HintR2C6
#00AAE4 white darkbrown gray
03222
03222
03222
03222
03222

HintR2C7
#00AAE4 white #8B551D
21212
21212
21112
21112
22222

HintR2C8
#00AAE4 white darkbrown gray
22230
22230
22230
22230
22230


HintR3C0
#00AAE4 white
00000
00000
00000
00000
00000

HintR3C1
#00AAE4 white
00000
00000
00000
00000
00000

HintR3C2
#00AAE4 white darkgray gray
03222
03222
03222
03333
00000

HintR3C3
#00AAE4 white darkgray gray
22222
22222
22222
33333
00000

HintR3C4
#00AAE4 white darkgray gray
22230
22230
22230
33330
00000

HintR3C5
#00AAE4 white
00000
00000
00000
00000
00000

HintR3C6
#00AAE4 white darkgray gray
03222
03222
03222
03333
00000

HintR3C7
#00AAE4 white darkgray gray
22222
22222
22222
33333
00000

HintR3C8
#00AAE4 white darkgray gray
22230
22230
22230
33330
00000



CloudBit
#00AAE4
.....
.....
.....
.....
.....

CloudM
white

CloudL
white #EFF9FF #C2E4F7
..000
..000
..000
..000
..000

CloudBLL
white #EFF9FF #C2E4F7
..100
..100
..200
...10
...20

CloudBL
white #EFF9FF #C2E4F7
....1
.....
.....
.....
.....

CloudBLB
white #EFF9FF #C2E4F7
00000
21000
..211
.....
.....

CloudB
white #EFF9FF #C2E4F7
00000
00000
00000
.....
.....

CloudBRB
white #EFF9FF #C2E4F7
00000
00012
112..
.....
.....

CloudBR
white #EFF9FF #C2E4F7
1....
.....
.....
.....
.....

CloudBRR
white #EFF9FF #C2E4F7
001..
001..
002..
01...
02...

CloudR
white #EFF9FF #C2E4F7
000..
000..
000..
000..
000..


ThoughtDotsT
white #EFF9FF #C2E4F7
00000
00000
00000
.....
..00.

ThoughtDotsB
white #EFF9FF #C2E4F7
..00.
.....
..0..
.....
.....


Cross
gray darkgray
.....
.....
.000.
.010.
.000.

Tick
gray #00ff00 transparent
.....
.....
.000.
.010.
.000.

FrameL
gray
0....
0....
0....
0....
0....
FrameT
gray
00000
.....
.....
.....
.....
FrameB
gray
.....
.....
.....
.....
00000
FrameR
gray
....0
....0
....0
....0
....0

FrameTL
gray
0....
.....
.....
.....
.....
FrameTR
gray
....0
.....
.....
.....
.....
FrameBL
gray
.....
.....
.....
.....
0....
FrameBR
gray
.....
.....
.....
.....
....0

AimStart
transparent

AimDirt
#8B551D
AimHole
darkbrown
AimOver
#00AAE4 green
00000
00000
00000
00010
10110
AimStone
darkgray


ReadTemplatePre
transparent
ReadTemplatePost
transparent
ReadNowPre
transparent
ReadNowPost
transparent
ReadRightPre
transparent
ReadRightPost
transparent
ReadBackPre
transparent
ReadBackPost
transparent
ReadLeftPre
transparent
ReadLeftPost
transparent
ReadNextPre
transparent
ReadNextPost
transparent
ReadDownPre
transparent
ReadDownPost
transparent
ReadFinishedPre
transparent
ReadFinishedPost
transparent

CheckPre
transparent
CheckPost
transparent

CurrentTemplate
transparent



RandomAimNoStone
darkgray brown darkbrown
.212.
...1.
.....
..1..
.....
RandomAimYesStone
darkgray brown darkbrown
.212.
...1.
.....
..0..
.....
RandomUnder
darkgray brown
10001
11101
11111
11011
11111

RandomHoleDirt
darkbrown brown
10001
11101
11111
11011
11111

r0
transparent
r1
transparent
r2
transparent
r3
transparent
r4
transparent
r5
transparent
r6
transparent
r7
transparent
r8
transparent
r9
transparent

ExitRestart
transparent


Inited
transparent
North
transparent
South
transparent
West
transparent
East
transparent
Singleton
transparent


( Global states )
(Initialization)
sI
transparent
(Playing)
sP
transparent
(Animating)
sA
transparent


DebugRed
#ff0000
.....
.....
.....
.....
.0...

DebugGreen
#00ff00
.....
.....
.....
.....
..0..

DebugBlue
#0000ff
.....
.....
.....
.....
...0.

=======
LEGEND
=======

- = Background
. = Hole
# = Dirt
$ = Stone
% = RandomUnder
* = RandomHoleDirt
" = Player
o = AimOver 
h = AimHole 
d = AimDirt 
r = AimStone
? = RandomAimNoStone
! = RandomAimYesStone
q = Question

d2 = r0 or r1
d3 = r0 or r1 or r2
d10 = r0 or r1 or r2 or r3 or r4 or r5 or r6 or r7 or r8 or r9

Aim = AimDirt or AimHole or AimOver or AimStone or RandomAimNoStone or RandomAimYesStone
FrameEdge = FrameL or FrameR or FrameT or FrameB
FrameCorner = FrameTL or FrameTR or FrameBL or FrameBR
Frame = FrameEdge or FrameCorner
CloudShape = CloudM or CloudL or CloudBLL or CloudBL or CloudBLB or CloudB or CloudBRB or CloudBR or CloudBRR or CloudR
ThoughtDots = ThoughtDotsT or ThoughtDotsB
Hint = HintBG or HintR1 or HintR2 or HintR3 or HintR1C0 or HintR1C1 or HintR1C2 or HintR1C3 or HintR1C4 or HintR1C5 or HintR1C6 or HintR1C7 or HintR1C8 or HintR2C0 or HintR2C1 or HintR2C2 or HintR2C3 or HintR2C4 or HintR2C5 or HintR2C6 or HintR2C7 or HintR2C8 or HintR3C0 or HintR3C1 or HintR3C2 or HintR3C3 or HintR3C4 or HintR3C5 or HintR3C6 or HintR3C7 or HintR3C8
Grass = Grass1 or Grass2 or Grass3 or Grass4
HoleOrDirt = Hole or Dirt
Under = Hole or Dirt or Stone or RandomUnder or RandomHoleDirt or CaveIn or CaveOut
StoneBorder = StoneDirtUp or StoneDirtDown or StoneDirtLeft or StoneDirtRight

ReadPre = ReadTemplatePre or ReadNowPre or ReadRightPre or ReadBackPre or ReadLeftPre or ReadNextPre or ReadDownPre or ReadFinishedPre
ReadPost = ReadTemplatePost or ReadNowPost or ReadRightPost or ReadBackPost or ReadLeftPost or ReadNextPost or ReadDownPost or ReadFinishedPost
Read = ReadPre or ReadPost
Check = CheckPre or CheckPost

Transient = Read or Check or Connected

Mark = Cross or Tick

Edge = North or South or West or East
State = sI or sP or sA
Generated = Edge or Inited or Singleton or State or Frame or AimStart or CloudBit or CloudShape or Grass or DeadGrass or StoneBorder or ExitPlace or ExitSign or ExitRestart


Debug = DebugRed or DebugGreen or DebugBlue

=======
SOUNDS
=======

Player move 16170107
EndLevel 49390703
sfx0 87805505 (jump)

================
COLLISIONLAYERS
================

Background
Inited
Singleton
North
South
West
East
Under
StoneDirtUp
StoneDirtDown
StoneDirtLeft
StoneDirtRight
Connected
CloudBit
CloudShape
ThoughtDots
Aim
AimStart
FrameL
FrameR
FrameT
FrameB
FrameTL
FrameTR
FrameBL
FrameBR
Mark
Question
Hint
Grass, DeadGrass
ExitPlace
ExitSign
ExitRestart
Player
Read
CheckPre
CheckPost
DebugRed
DebugGreen
DebugBlue
CurrentTemplate
d10
State

======
RULES
======

( START one-time initialization )

( If anything not inited, re-init everything)
[ no Inited ] [ Generated ] -> [ no Inited ] [ ]
( Find level edges )
[ no Inited ] [ ] -> [ no Inited ] [ North South West East ]
down [ no Inited ] [ North | ... | North ] -> [ no Inited ] [ North | ... | ]
up [ no Inited ] [ South | ... | South ] -> [ no Inited ] [ South | ... | ]
right [ no Inited ] [ West | ... | West ] -> [ no Inited ] [ West | ... | ]
left [ no Inited ] [ East | ... | East ] -> [ no Inited ] [ East | ... | ]
( Put singleton at top left )
[ no Inited ] [ North West ] -> [ no Inited ] [ North West Singleton ]
( Set state to Initializing )
[ Singleton ] -> [ Singleton sI ]

( Generate exit and hint spot )
down [sI] [ East no Under | Under ] -> [sI] [ ExitPlace East no Under | Under ]
( Restart on exit for the random (final) level )
[sI] [ RandomAimNoStone ] [ ExitPlace ] -> [sI] [ RandomAimNoStone ] [ ExitRestart ]


( Randomly generate aims )
[sI] [ RandomAimNoStone ] -> [sI] [ random d3 ]
[ r0 ] -> [ AimHole ]
[ r1 ] -> [ AimHole ]
[ r2 ] -> [ AimDirt ]
[sI] [ RandomAimYesStone ] -> [sI] [ random d10 ]
[ r0 ] -> [ AimHole ]
[ r1 ] -> [ AimHole ]
[ r2 ] -> [ AimHole ]
[ r3 ] -> [ AimDirt ]
[ r4 ] -> [ AimDirt ]
[ r5 ] -> [ AimDirt ]
[ r6 ] -> [ AimStone ]
[ r7 ] -> [ AimStone ]
[ r8 ] -> [ AimStone ]
[ r9 ] -> [ AimStone ]

( Randomly generate ground )
[sI] [ RandomUnder ] -> [sI] [ random d10 ]
[ r0 ] -> [ Dirt ]
[ r1 ] -> [ Dirt ]
[ r2 ] -> [ Dirt ]
[ r3 ] -> [ Dirt ]
[ r4 ] -> [ Dirt ]
[ r5 ] -> [ Dirt ]
[ r6 ] -> [ Dirt ]
[ r7 ] -> [ Dirt ]
[ r8 ] -> [ Dirt ]
[ r9 ] -> [ Stone ]
[sI] [ RandomHoleDirt ] -> [sI] [ random d2 ]
[ r0 ] -> [ Hole ]
[ r1 ] -> [ Dirt ]

( Make template frames )
right [sI] [ no Aim | Aim ] -> [sI] [ FrameR no Aim | Aim ]
right [sI] [ Aim | no Aim ] -> [sI] [ Aim | FrameL no Aim ]
down [sI] [ no Aim | Aim ] -> [sI] [ FrameB no Aim | Aim ]
down [sI] [ Aim | no Aim ] -> [sI] [ Aim | FrameT no Aim ]
right [sI] [ no FrameB | FrameB ] -> [sI] [ FrameBR | FrameB ]
right [sI] [ FrameB | no FrameB ] -> [sI] [ FrameB | FrameBL ]
right [sI] [ no FrameT | FrameT ] -> [sI] [ FrameTR | FrameT ]
right [sI] [ FrameT | no FrameT ] -> [sI] [ FrameT | FrameTL ]


( Find top-left of each template )
[sI] [ Aim ] -> [sI] [ AimStart Aim ]
right [sI] [ Aim | AimStart ] -> [sI] [ Aim | ]
down [sI] [ Aim | AimStart ] -> [sI] [ Aim | ]
down [sI] [ no Aim | AimStart Aim ] -> [sI] [ AimStart no Aim | Aim ]

( Generate clouds )
down [sI] [ no Under | no Under | no Under ] -> [sI] [ CloudBit | | ]
down [sI] [ CloudBit | Under ] -> [sI] [ | Under ]
down [sI] [ CloudBit | | Under ] -> [sI] [ | | Under ]
right [sI] [ CloudBit | CloudBit ] -> [sI] [ CloudBit | CloudBit CloudR ]
right [sI] [ CloudBit | CloudBit ] -> [sI] [ CloudBit CloudL | CloudBit ]
right [sI] [ CloudBit | CloudBit | CloudBit ] -> [sI] [ CloudBit | CloudBit CloudM | CloudBit ]
down [sI] [ CloudM | no CloudBit ] -> [sI] [ CloudB | ]
down [sI] [ CloudL | no CloudBit ] -> [sI] [ CloudBL | ]
down [sI] [ CloudR | no CloudBit ] -> [sI] [ CloudBR | ]
down [sI] [ | CloudBL ] -> [sI] [ CloudBLL | CloudBL ]
down [sI] [ | CloudBR ] -> [sI] [ CloudBRR | CloudBR ]
right [sI] [ CloudBL | ] -> [sI] [ CloudBL | CloudBLB ]
right [sI] [ | CloudBR ] -> [sI] [ CloudBRB | CloudBR ]

( Generate grass )
down [sI] [ no Grass no DeadGrass no Under | Under ] -> [sI] [ random Grass no Under | Under ]

( Generate stone borders )
(
up [sI] [ Stone | HoleOrDirt ] -> [sI] [ Stone StoneDirtUp | HoleOrDirt ]
down [sI] [ Stone | HoleOrDirt ] -> [sI] [ Stone StoneDirtDown | HoleOrDirt ]
left [sI] [ Stone | HoleOrDirt ] -> [sI] [ Stone StoneDirtLeft | HoleOrDirt ]
right [sI] [ Stone | HoleOrDirt ] -> [sI] [ Stone StoneDirtRight | HoleOrDirt ]
)

( Set every tile to inited, so init will not be repeated unless level is edited )
[sI] [ ] -> [sI] [ Inited ]
( Change state to Playing )
[ sI ] -> [ sP ]

( END one-time initialization )


[ Debug ] -> [ ]


( Player movement )
[ > Player | Stone ] -> [ Player | Stone ]
[ > Player Dirt | Dirt ] -> [ > Player Hole | Dirt ]
[ > Player | Dirt ] -> [ > Player | Hole ]
[ action Player Hole ] -> [ Player Dirt ]
[ action Player Grass ] -> [ Player DeadGrass ]
down [ no Under | < Player no Under ] -> sfx0
down [ Player | no Under ] -> [ > Player | no Under ] ( Rabbit should fall )
late down [ Player | no Under ] -> again ( Rabbit should fall in next frame )

( Auto player exit )
[ Player | ... | ExitPlace ] [ ExitSign ] -> [ > Player | ... | ExitPlace ] [ ExitSign ] again
late [ Player | ... | ExitPlace ] [ ExitSign ] -> [ Player | ... | ExitPlace ] [ ExitSign ] again


( Fix ThoughtDots )
[ ThoughtDots ] -> [ ]
down [ CloudB | | no Under | < Player Under ] -> [ CloudB | ThoughtDotsB | no Under | < Player Under ]
down [ CloudB | | stationary Player no Under | Under ] -> [ CloudB | ThoughtDotsB | stationary Player no Under | Under ]
down [ | ThoughtDotsB ] -> [ ThoughtDotsT | ThoughtDotsB ]
(late [ Player | | CloudBottom ] -> [ Player | ThoughtDots | CloudBottom ])
(late [ ExitSign ] [ ThoughtDots ] -> [ ExitSign ] [ ])

( Show hint )
late down [ Question | Player ] [ no Under ] -> [ Question | Player ] [ HintBG ]
late down [ | | | Question | Player ] -> [ HintR1 | HintR2 | HintR3 | Question | Player ]
late right [ HintR1 | | | | | | | | ] -> [ HintR1C0 | HintR1C1 | HintR1C2 | HintR1C3 | HintR1C4 | HintR1C5 | HintR1C6 | HintR1C7 | HintR1C8 ]
late right [ HintR2 | | | | | | | | ] -> [ HintR2C0 | HintR2C1 | HintR2C2 | HintR2C3 | HintR2C4 | HintR2C5 | HintR2C6 | HintR2C7 | HintR2C8 ]
late right [ HintR3 | | | | | | | | ] -> [ HintR3C0 | HintR3C1 | HintR3C2 | HintR3C3 | HintR3C4 | HintR3C5 | HintR3C6 | HintR3C7 | HintR3C8 ]
( Hide hint )
late down [ no Question | Player no Question ] [ Hint ] -> [ no Question | Player no Question ] [ ]

( Position analysis from here on )

late [ Transient ] -> [ ]
late [ Mark ] -> [ ]

( Previous disconnections )
late [ CaveIn ] -> [ Dirt ]
late [ CaveOut ] -> [ Hole ]
( Holes must connect to surface )
late [ Connected ] -> [ Connected ]
late [ no Under | Hole ] -> [ no Under | Connected Hole ]
late [ Connected Hole | Hole ] -> [ Connected Hole | Connected Hole ]
late [ no Connected Hole ] -> [ CaveIn ] again
( Dirt must connect to stone )
late [ Connected ] -> [ Connected ]
late [ Stone | Dirt ] -> [ Stone | Connected Dirt ]
late [ Connected Dirt | Dirt ] -> [ Connected Dirt | Connected Dirt ]
late [ no Connected Dirt ] -> [ CaveOut ] again


( Make exactly one ReadTemplatePre )
late [ ] -> [ ReadTemplatePre ]
late right [ | ReadTemplatePre ] -> [ | ]
late down [ | ReadTemplatePre ] -> [ | ]

startloop

( Update checkers based on state, mark whether succeeded )
late [ ReadNowPre AimOver ] [ CheckPre no Under ] -> [ ReadNowPre AimOver ] [ CheckPost no Under ]
late [ ReadNowPre AimHole ] [ CheckPre Hole ] -> [ ReadNowPre AimHole ] [ CheckPost Hole ]
late [ ReadNowPre AimDirt ] [ CheckPre Dirt ] -> [ ReadNowPre AimDirt ] [ CheckPost Dirt ]
late [ ReadNowPre AimStone ] [ CheckPre Stone ] -> [ ReadNowPre AimStone ] [ CheckPost Stone ]
late right [ ReadRightPre ] [ CheckPre | ] -> [ ReadRightPre ] [ | CheckPost ]
late [ ReadBackPre ] [ CheckPre ] -> [ ReadBackPre ] [ CheckPost ]
late right [ ReadLeftPre ] [ | CheckPre ] -> [ ReadLeftPre ] [ CheckPost | ]
late [ ReadNextPre ] [ CheckPre ] -> [ ReadNextPre ] [ CheckPost ]
late down [ ReadDownPre ] [ CheckPre | ] -> [ ReadDownPre ] [ | CheckPost ]

late [ ReadFinishedPre ] [ CheckPre ] [ CurrentTemplate ] -> [ ReadFinishedPre ] [ CheckPost ] [ CurrentTemplate Tick ]

( Remove some checkers )
late [ CheckPre ] -> [ ]
late [ ReadFinishedPre ] [ Check ] -> [ ReadFinishedPre ] [ ]
late [ ReadFinishedPre ] [ CurrentTemplate ] -> [ ReadFinishedPre ] [ ]

( Update reader based on state )
late [ ReadTemplatePre no CurrentTemplate ] [ AimStart no Mark ] -> [ ] [ CurrentTemplate ReadTemplatePre AimStart Cross ]
late down [ ReadTemplatePre | ] -> [ | ReadTemplatePost ]
late [ ReadTemplatePost ] [ ] -> [ ReadTemplatePost ] [ CheckPre ]

late [ ReadNowPre ] -> [ ReadNowPost ]
late right [ ReadRightPre Aim | Aim ] -> [ Aim | ReadRightPost Aim ]
late [ ReadBackPre ] -> [ ReadBackPost ]
late right [ Aim | ReadLeftPre Aim ] -> [ ReadLeftPost Aim | Aim ]
late [ ReadNextPre ] -> [ ReadNextPost ]
late down [ ReadDownPre Aim | Aim ] -> [ Aim | ReadDownPost Aim ]
late [ ReadFinishedPre ] -> [ ReadFinishedPost ]

( Change reader state )
( TODO: Remove everything if reader failed? )
late [ ReadTemplatePost ] -> [ ReadNowPre ]

late right [ ReadNowPost Aim | Aim ] -> [ ReadRightPre Aim | Aim ]
late right [ ReadNowPost Aim | no Aim ] -> [ ReadBackPre Aim | no Aim ]
late [ ReadRightPost ] -> [ ReadNowPre ]
late right [ Aim | ReadBackPost Aim ] -> [ Aim | ReadLeftPre Aim ]
late right [ no Aim | ReadBackPost Aim ] -> [ no Aim | ReadNextPre Aim ]
late [ ReadLeftPost ] -> [ ReadBackPre ]
late down [ ReadNextPost Aim | Aim ] -> [ ReadDownPre Aim | Aim ]
late down [ ReadNextPost Aim | no Aim ] -> [ ReadFinishedPre Aim | no Aim ]
late [ ReadDownPost ] -> [ ReadNowPre ]
late [ ReadFinishedPost ] -> [ ReadTemplatePre ]

( Update checker states from reader state )
late [ ReadPre ] [ CheckPost ] -> [ ReadPre ] [ CheckPre ]

endloop


( Show exit if can exit )
late down [ | ExitPlace ] -> [ ExitSign | ExitPlace ]
late [ Cross ] [ ExitSign ] -> [ Cross ] [ ]
late [ ExitSign ] [ Player ExitRestart ] -> restart



(late [ Transient ] -> [ ])

==============
WINCONDITIONS
==============

no Cross
all Player on ExitPlace



=======
LEVELS
=======
(message Longest one-line message..........)

( learn underground must match idea )
( learn to dig )
message Rabbit has an idea for a new home
---------
--ooooo--
--rrrrr--
--rhhhr--
--hhrhh--
---------
---------
----"----
$.$$$$$#$
$.$..#$#$
$...$###$
$$$$$$$$$

( learn X to fill )
message Press X to fill a hole with dirt
-----------
--ddhrddd--
--ddhrhhd--
--rdhhhhr--
--rdddddr--
-----------
q----------
-----"-----
$###.$####$
$###.$####$
$#$#....$#$
$#$###..$#$
$###$$####$
$$$$$$$$$$$

( learn ideas do not need to align horizontally )
( learn idea border doesn't need to be a real border )
( learn look at stone to find where to fit an idea )
message Find a place where the idea fits
-----------
----drr----
----hhd----
----rhh----
----rdr----
-----------
q----------
-----"-----
$$#$#$#$$#$
$#########$
$#$$##$##$$
$####$$#$#$
$$########$
$$#$$$$$##$
$$$$$$$$$$$

( learn CaveIn )
message A hole with no exits will cave in
---------------
----dhhrrdd----
----rhhdhhd----
----hhrrhhr----
----hhrrrhr----
---------------
q--------------
-------"-------
$#$.$$$$$$$.$#$
$#$....$$...$#$
$#$$$......$$#$
$##$##$$..$$$#$
$$#$##$$$#$$$#$
$$############$
$$$$$$$$$$$$$$$

( learn CaveOut )
message Dirt falls if not joined to stone
-------------
---hhhddhh---
---hdddddh---
---hdhhhdh---
---hhhhhhh---
---rrrrrrr---
-------------
-------------
------"------
$..######$..$
$...........$
$...........$
$###$...####$
$...#.......$
$...#.......$
$...######..$
$...........$
$$$$$$$$$$$$$

( learn multiple ideas )
( learn to exit safely )
( learn ideas do not have to be in the same order )
message Rabbit has many ideas
---------
-ooo-rdd-
-dhr-rdd-
-hhr-rhh-
-hhr-rrr-
---------
---------
----"----
$######.$
$###$#..$
$#####..$
$$$$$$$$$

( learn idea initially complete, must be unmade )
message Renovation may be required
-----------
-oooo-rdrd-
-rhrh-rhhd-
-hhhh-rhhh-
-hddd-rrrr-
-----------
-----------
----"------
$#$.$.$#$.$
$#....#...$
$#.####..#$
$$$$$$$$$$$

( learn overlapping ideas )
message Some ideas work well together
-------------
---ddd-dhd---
---hhh-dhd---
---dhd-hhh---
---dhd-ddd---
-------------
-------------
-----"-------
$####$$####$$
$$$######$#$$
$$#########$$
$$$$####$$##$
$$$$####$$$#$
$$$#########$
$$$######$$$$
$$$$$$$$$$$$$

( learn using a stone island to prevent CaveOut )
message Use stone walls to hold dirt up
----------
----dh----
----hd----
----------
----------
-----"----
$#$######$
$#######$$
$$######$$
$$$####$$$
$$$$$$$$$$

-----------
--ddh-ddd--
--hhd-hdh--
--dhh-dhh--
-----------
-----------
-----"-----
$#$#####$#$
$#########$
$#########$
$#########$
$$#######$$
$$$$$$$$$$$

(
---------------
-----hdhdh-----
-----dhhhd-----
-----hdddh-----
-----dhdhd-----
---------------
---------------
-------"-------
$#$#$#$#$#$#$#$
$#############$
$#############$
$#############$
$#############$
$#############$
$#############$
$#############$
$$$$$$$$$$$$$$$
)

-------------
----hdhdh----
----dhddh----
----dhhhd----
----hdhdh----
-------------
-------------
------"------
$#$#$#$#$#$#$
$###########$
$###########$
$###########$
$###########$
$###########$
$###########$
$$$$$$$$$$$$$



message Rabbit is sometimes narrow-minded
-----------
-o-d-d-d-d-
-r-h-h-d-h-
-d-d-h-h-h-
-h-h-r-h-h-
-----------
-----------
-----"-----
$$$##$$##$$
$#########$
$#########$
$$###$$##$$
$$$$$$$$$$$

message Only 3 levels left...
-----------
-hdhdr-hrd-
-----------
-hhdr-rdhh-
-----------
-drh-rdhdh-
-----------
-----------
----"------
$$##$####$$
$$#######$$
$$####$##$$
$$#######$$
$$##$###$$$
$$$$$$$$$$$

message Two levels left...
---------
-ddd-dhh-
-hhd-hhd-
-hdh-hhh-
---------
---------
----"----
$$#$$$$#$
$#####$#$
$#######$
$#######$
$$#####$$
$$$$$$$$$

(message Longest one-line message..........)
message One level left, but...
message The last level is random each time
message If you get stuck, press R for a new random level
message Thanks for playing, have fun!
------------
-?-!????-??-
-?-------??-
-?-????!-??-
-?-------??-
-?-????-----
-!-????-?!?-
------------
------------
-----"------
$#$########$
$######$###$
$##########$
$###$######$
$########$#$
$##$#######$
$#####$####$
$#########$$
$$$$$$$$$$$$











message Help make rabbit's ideas reality






-----------
-dd-ooo-dh-
-hh-dhr-hh-
-dd-dhd-hd-
-----------
-----------
-----"-----
$.##.###.$$
$..#.###.#$
$$.###.#.#$
$$$##....$$
$$$$$$$$$$$





-------------
----hd-dh----
----dh-hd----
-------------
-------------
------"------
$.....$.####$
$.....#.####$
$......#####$
$......#####$
$......#####$
$......#####$
$......#####$
$......#####$
$$$$$$$$$$$$$


-------------
-----hhh-----
-----hdh-----
-----hhh-----
-------------
-------------
------"------
$.$.$.$.$.$.$
$***********$
$***********$
$***********$
$***********$
$***********$
$***********$
$***********$
$$$$$$$$$$$$$



